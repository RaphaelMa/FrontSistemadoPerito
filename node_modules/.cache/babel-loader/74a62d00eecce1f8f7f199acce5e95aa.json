{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport { useCallback, useMemo } from 'react';\nimport moment from 'moment';\nimport { currencyFormatter } from 'Utils/formatters';\nimport { exportToXLS } from 'Utils/functions';\nconst MOMENT_FORMAT = 'YYYY/MM/DD';\nconst DEFAULT_FORMAT = 'DD/MM/YYYY';\n\nconst renderDate = date => date ? moment(date, MOMENT_FORMAT).format(DEFAULT_FORMAT) : undefined;\n\nconst renderPeople = data => {\n  return data === null || data === void 0 ? void 0 : data.reduce((acc, curr, index) => {\n    const suffix = index + 1 < data.length ? ', ' : '';\n    return `${acc}${curr.kindPeople.kindPeople_description + ' - ' + curr.people.people_name}${suffix}`;\n  }, '');\n};\n\nconst useExportData = (processes, visible_columns) => {\n  const columns = useMemo(() => [{\n    name: 'Data de Criação',\n    key: 'createAt',\n    render: process => renderDate(process.createAt)\n  }, {\n    name: 'Última atualização',\n    key: 'updateAt',\n    render: process => renderDate(process.updateAt)\n  }, {\n    name: 'Número do Processo',\n    key: 'processNumber'\n  }, {\n    name: 'Código Interno',\n    key: 'internalCode'\n  }, {\n    name: 'Status Importação',\n    key: 'statusImport_description'\n  }, {\n    name: 'Pessoas',\n    key: 'peoples',\n    render: process => renderPeople(process.peoples)\n  }, {\n    name: 'Polo Ativo',\n    key: 'activePole',\n    render: process => renderPeople(process.activePole)\n  }, {\n    name: 'Polo Passivo',\n    key: 'passivePole',\n    render: process => renderPeople(process.passivePole)\n  }, {\n    name: 'Data nomeação',\n    key: 'appointmentDate',\n    render: process => renderDate(process.appointmentDate)\n  }, {\n    name: 'Comarca',\n    key: 'judicialDistrict_description'\n  }, {\n    name: 'Vara',\n    key: 'judicialDistrictLevel_description'\n  }, {\n    name: 'Situação do Processo',\n    key: 'situation_description'\n  }, {\n    name: 'Situação Financeira do Processo',\n    key: 'financialSituation_description'\n  }, {\n    name: 'Natureza',\n    key: 'nature_description'\n  }, {\n    name: 'Ação/Objeto Perícia',\n    key: 'objetcExpert_description'\n  }, {\n    name: 'Valor Processo',\n    key: 'processValue',\n    render: process => currencyFormatter(process.processValue, {\n      cents: true\n    })\n  }, {\n    name: 'Honorário Apresentado',\n    key: 'honoraryValue',\n    render: process => currencyFormatter(process.honoraryValue, {\n      cents: true\n    })\n  }, {\n    name: 'Honorário Arbitrario',\n    key: 'arbitraryValue',\n    render: process => currencyFormatter(process.arbitraryValue, {\n      cents: true\n    })\n  }, {\n    name: 'Perito ou Asistente',\n    key: 'expertName'\n  }, {\n    name: 'Data Perícia',\n    key: 'expertiseDate',\n    render: process => renderDate(process.expertiseDate)\n  }, {\n    name: 'Previsão Entrega Laudo',\n    key: 'previsionReport',\n    render: process => renderDate(process.previsionReport)\n  }, {\n    name: 'Entrega Laudo',\n    key: 'deliveryReport',\n    render: process => renderDate(process.deliveryReport)\n  }, {\n    name: 'Aceitou a nomeação',\n    key: 'acceptAppointment',\n    render: process => process.acceptAppointment ? 'Sim' : 'Não'\n  }, {\n    name: 'Limite Esc. Laudo',\n    key: 'clarificationReport',\n    render: process => renderDate(process.clarificationReport)\n  }, {\n    name: 'Entrega Esc. Laudo',\n    key: 'clarificationDeliveryReport',\n    render: process => renderDate(process.clarificationDeliveryReport)\n  }, {\n    name: 'Impugnação',\n    key: 'dateImpugnment',\n    render: process => renderDate(process.dateImpugnment)\n  }, {\n    name: 'Status Impugnação',\n    key: 'statusImpeachment',\n    render: process => process.statusImpeachment_description\n  }, {\n    name: 'Previsão Entrega Impugnação',\n    key: 'previsionImpugnment',\n    render: process => renderDate(process.previsionImpugnment)\n  }, {\n    name: 'Entrega Impugnação',\n    key: 'deliveryImpugnment',\n    render: process => renderDate(process.deliveryImpugnment)\n  }, {\n    name: 'Limite Esc. Impugnação',\n    key: 'clarificationImpugnment',\n    render: process => renderDate(process.clarificationImpugnment)\n  }, {\n    name: 'Entrega Esc. Impugnação',\n    key: 'clarificationDeliveryImpugnment',\n    render: process => renderDate(process.clarificationDeliveryImpugnment)\n  }], []);\n  const filtered_columns = useMemo(() => {\n    return columns.filter(column => {\n      var _visible_columns$colu;\n\n      if (!(visible_columns === null || visible_columns === void 0 ? void 0 : visible_columns.columns)) return true;\n      const key = column.key; // @ts-ignore\n\n      const is_visible = (_visible_columns$colu = visible_columns.columns[key]) === null || _visible_columns$colu === void 0 ? void 0 : _visible_columns$colu.visible;\n      return !!is_visible;\n    });\n  }, [columns, visible_columns]);\n  return useCallback(() => {\n    const file_name = 'processos';\n    exportToXLS(file_name, processes, filtered_columns);\n  }, [filtered_columns, processes]);\n};\n\n__signature__(useExportData, \"useMemo{columns}\\nuseMemo{filtered_columns}\\nuseCallback{}\");\n\nconst _default = useExportData;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(MOMENT_FORMAT, \"MOMENT_FORMAT\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Process/useExportData.ts\");\n  reactHotLoader.register(DEFAULT_FORMAT, \"DEFAULT_FORMAT\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Process/useExportData.ts\");\n  reactHotLoader.register(renderDate, \"renderDate\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Process/useExportData.ts\");\n  reactHotLoader.register(renderPeople, \"renderPeople\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Process/useExportData.ts\");\n  reactHotLoader.register(useExportData, \"useExportData\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Process/useExportData.ts\");\n  reactHotLoader.register(_default, \"default\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Process/useExportData.ts\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Process/useExportData.ts"],"names":["useCallback","useMemo","moment","currencyFormatter","exportToXLS","MOMENT_FORMAT","DEFAULT_FORMAT","renderDate","date","format","undefined","renderPeople","data","reduce","acc","curr","index","suffix","length","kindPeople","kindPeople_description","people","people_name","useExportData","processes","visible_columns","columns","name","key","render","process","createAt","updateAt","peoples","activePole","passivePole","appointmentDate","processValue","cents","honoraryValue","arbitraryValue","expertiseDate","previsionReport","deliveryReport","acceptAppointment","clarificationReport","clarificationDeliveryReport","dateImpugnment","statusImpeachment_description","previsionImpugnment","deliveryImpugnment","clarificationImpugnment","clarificationDeliveryImpugnment","filtered_columns","filter","column","is_visible","visible","file_name"],"mappings":"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","sourcesContent":["import { useCallback, useMemo } from 'react'\nimport { ProcessType, VisibleColumnType, GenericType } from './types'\nimport moment from 'moment'\nimport { currencyFormatter } from 'Utils/formatters'\nimport { exportToXLS } from 'Utils/functions'\n\nconst MOMENT_FORMAT = 'YYYY/MM/DD'\nconst DEFAULT_FORMAT = 'DD/MM/YYYY'\n\nconst renderDate = (date?: string) => date ? moment(date, MOMENT_FORMAT).format(DEFAULT_FORMAT) : undefined\n\nconst renderPeople = (data?: GenericType[]) => {\n  return data?.reduce((acc, curr, index) => {\n    const suffix = index + 1 < data!.length ? ', ' : ''\n\n    return `${acc}${curr.kindPeople.kindPeople_description + ' - ' + curr.people.people_name}${suffix}`\n  }, '')\n}\n\nconst useExportData = (processes: ProcessType[], visible_columns?: VisibleColumnType) => {\n  const columns = useMemo(() => [\n    { name: 'Data de Criação', key: 'createAt', render: (process: ProcessType) => renderDate(process.createAt) },\n    { name: 'Última atualização', key: 'updateAt', render: (process: ProcessType) => renderDate(process.updateAt) },\n    { name: 'Número do Processo', key: 'processNumber' },\n    { name: 'Código Interno', key: 'internalCode' },\n    { name: 'Status Importação', key: 'statusImport_description' },\n    { name: 'Pessoas', key: 'peoples', render: (process: ProcessType) => renderPeople(process.peoples) },\n    { name: 'Polo Ativo', key: 'activePole', render: (process: ProcessType) => renderPeople(process.activePole) },\n    { name: 'Polo Passivo', key: 'passivePole', render: (process: ProcessType) => renderPeople(process.passivePole) },\n    {\n      name: 'Data nomeação',\n      key: 'appointmentDate',\n      render: (process: ProcessType) => renderDate(process.appointmentDate)\n    },\n    { name: 'Comarca', key: 'judicialDistrict_description' },\n    { name: 'Vara', key: 'judicialDistrictLevel_description' },\n    { name: 'Situação do Processo', key: 'situation_description' },\n    { name: 'Situação Financeira do Processo', key: 'financialSituation_description' },\n    { name: 'Natureza', key: 'nature_description' },\n    { name: 'Ação/Objeto Perícia', key: 'objetcExpert_description' },\n    {\n      name: 'Valor Processo',\n      key: 'processValue',\n      render: (process: ProcessType) => currencyFormatter(process.processValue, { cents: true })\n    },\n    {\n      name: 'Honorário Apresentado',\n      key: 'honoraryValue',\n      render: (process: ProcessType) => currencyFormatter(process.honoraryValue, { cents: true })\n    },\n    {\n      name: 'Honorário Arbitrario',\n      key: 'arbitraryValue',\n      render: (process: ProcessType) => currencyFormatter(process.arbitraryValue, { cents: true })\n    },\n    { name: 'Perito ou Asistente', key: 'expertName' },\n    { name: 'Data Perícia', key: 'expertiseDate', render: (process: ProcessType) => renderDate(process.expertiseDate) },\n    {\n      name: 'Previsão Entrega Laudo',\n      key: 'previsionReport',\n      render: (process: ProcessType) => renderDate(process.previsionReport)\n    },\n    {\n      name: 'Entrega Laudo',\n      key: 'deliveryReport',\n      render: (process: ProcessType) => renderDate(process.deliveryReport)\n    },\n    {\n      name: 'Aceitou a nomeação',\n      key: 'acceptAppointment',\n      render: (process: ProcessType) => process.acceptAppointment ? 'Sim' : 'Não'\n    },\n    {\n      name: 'Limite Esc. Laudo',\n      key: 'clarificationReport',\n      render: (process: ProcessType) => renderDate(process.clarificationReport)\n    },\n    {\n      name: 'Entrega Esc. Laudo',\n      key: 'clarificationDeliveryReport',\n      render: (process: ProcessType) => renderDate(process.clarificationDeliveryReport)\n    },\n    { name: 'Impugnação', key: 'dateImpugnment', render: (process: ProcessType) => renderDate(process.dateImpugnment) },\n    {\n      name: 'Status Impugnação',\n      key: 'statusImpeachment',\n      render: (process: ProcessType) => process.statusImpeachment_description\n    },\n    {\n      name: 'Previsão Entrega Impugnação',\n      key: 'previsionImpugnment',\n      render: (process: ProcessType) => renderDate(process.previsionImpugnment)\n    },\n    {\n      name: 'Entrega Impugnação',\n      key: 'deliveryImpugnment',\n      render: (process: ProcessType) => renderDate(process.deliveryImpugnment)\n    },\n    {\n      name: 'Limite Esc. Impugnação',\n      key: 'clarificationImpugnment',\n      render: (process: ProcessType) => renderDate(process.clarificationImpugnment)\n    },\n    {\n      name: 'Entrega Esc. Impugnação',\n      key: 'clarificationDeliveryImpugnment',\n      render: (process: ProcessType) => renderDate(process.clarificationDeliveryImpugnment)\n    }\n  ], [])\n\n  const filtered_columns = useMemo(() => {\n    return columns.filter((column) => {\n      if (!visible_columns?.columns) return true\n\n      const key = column.key\n      // @ts-ignore\n      const is_visible = visible_columns.columns[key]?.visible\n\n      return !!is_visible\n    })\n  }, [columns, visible_columns])\n\n  return useCallback(() => {\n    const file_name = 'processos'\n\n    exportToXLS<ProcessType>(file_name, processes, filtered_columns)\n  }, [filtered_columns, processes])\n}\n\nexport default useExportData\n"]},"metadata":{},"sourceType":"module"}