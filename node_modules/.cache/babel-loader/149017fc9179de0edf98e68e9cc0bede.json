{"ast":null,"code":"var _jsxFileName = \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Modals/TaskModal/TaskModal.tsx\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { forwardRef, useCallback, useImperativeHandle, useState, memo } from 'react';\nimport { Modal, Spin, Form } from 'antd';\nimport useGetTask from './useGetTask';\nimport TaskForm from './TaskForm';\nimport Footer from './Footer';\nimport moment from 'moment';\nimport useSaveTask from './useSaveTask';\nimport messageError from 'Utils/messageError';\nimport useDestroyTask from './useDestroyTask';\nimport History from './History/History';\n\nconst TaskModal = ({\n  afterSave,\n  afterDeleteTask\n}, ref) => {\n  const [form] = Form.useForm();\n  const {\n    submit,\n    setFieldsValue,\n    resetFields\n  } = form;\n  const [visible, setVisible] = useState(false);\n  const [task_id, setTaskId] = useState(undefined);\n  const [old_column, setOldColumn] = useState(undefined);\n  const [loadTask, {\n    loading\n  }] = useGetTask();\n  const [saveTask, {\n    loading: save_loading\n  }] = useSaveTask();\n  const [deleteTask, {\n    loading: delete_loading\n  }] = useDestroyTask();\n  const open = useCallback(async (task_id, initial_data) => {\n    setTaskId(task_id);\n    setVisible(true);\n\n    if (initial_data) {\n      // @ts-ignore\n      setFieldsValue(initial_data);\n    }\n\n    if (!task_id) return;\n    const {\n      data\n    } = await loadTask(task_id);\n    const {\n      task\n    } = data;\n    setOldColumn(task === null || task === void 0 ? void 0 : task.column_id);\n    const {\n      createAt,\n      deliveryDate,\n      finishedDate,\n      ...rest\n    } = task || {};\n    const values = { ...rest,\n      deliveryDate: deliveryDate ? moment(deliveryDate).utc() : undefined,\n      createAt: createAt ? moment(createAt).utc() : undefined,\n      finishedDate: finishedDate ? moment(finishedDate).utc() : undefined\n    };\n    setFieldsValue(values);\n  }, [loadTask, setFieldsValue]);\n  const close = useCallback(() => {\n    setTaskId(undefined);\n    setVisible(false);\n    setTimeout(() => resetFields(), 100);\n  }, [resetFields]);\n\n  const onFinish = async raw_values => {\n    const {\n      createAt,\n      deliveryDate,\n      finishedDate,\n      ...rest\n    } = raw_values;\n    const values = { ...rest,\n      deliveryDate: deliveryDate.utc().format('YYYY-MM-DD'),\n      createAt: createAt === null || createAt === void 0 ? void 0 : createAt.utc().format('YYYY-MM-DD'),\n      finishedDate: finishedDate === null || finishedDate === void 0 ? void 0 : finishedDate.utc().format('YYYY-MM-DD')\n    };\n\n    try {\n      const {\n        data\n      } = await saveTask(values);\n      const {\n        success,\n        task\n      } = data;\n\n      if (success) {\n        close();\n        afterSave === null || afterSave === void 0 ? void 0 : afterSave(task, old_column);\n      }\n    } catch (error) {\n      messageError('202106031552');\n    }\n  };\n\n  const handleDelete = async () => {\n    try {\n      const {\n        data\n      } = await deleteTask(task_id);\n      const {\n        success\n      } = data || {};\n\n      if (!success) {\n        messageError('202106031647');\n        return;\n      }\n\n      afterDeleteTask === null || afterDeleteTask === void 0 ? void 0 : afterDeleteTask(old_column, task_id);\n      close();\n    } catch (error) {\n      messageError('202106031648');\n    }\n  };\n\n  useImperativeHandle(ref, () => ({\n    open,\n    close\n  }));\n  return /*#__PURE__*/React.createElement(Modal, {\n    visible: visible,\n    destroyOnClose: true,\n    closable: true,\n    onCancel: close,\n    centered: true,\n    title: !!task_id ? 'Editar tarefa' : 'Nova tarefa',\n    width: 650,\n    footer: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Spin, {\n    spinning: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    form: form,\n    layout: \"vertical\",\n    onFinish: onFinish,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TaskForm, {\n    setFieldsValue: setFieldsValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(History, {\n    task_id: task_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Footer, {\n    has_id: !!task_id,\n    submit: submit,\n    close: close,\n    handleDelete: handleDelete,\n    loading: save_loading || delete_loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  })));\n};\n\n__signature__(TaskModal, \"useForm{[form]}\\nuseState{[visible, setVisible](false)}\\nuseState{[task_id, setTaskId](undefined)}\\nuseState{[old_column, setOldColumn](undefined)}\\nuseGetTask{[loadTask, { loading }]}\\nuseSaveTask{[saveTask, { loading: save_loading }]}\\nuseDestroyTask{[deleteTask, { loading: delete_loading }]}\\nuseCallback{open: Open}\\nuseCallback{close}\\nuseImperativeHandle{}\", () => [useGetTask, useSaveTask, useDestroyTask, useImperativeHandle]);\n\nTaskModal.displayName = \"TaskModal\";\n\nconst _default = memo(forwardRef(TaskModal));\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(TaskModal, \"TaskModal\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Modals/TaskModal/TaskModal.tsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Modals/TaskModal/TaskModal.tsx\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Modals/TaskModal/TaskModal.tsx"],"names":["React","forwardRef","useCallback","useImperativeHandle","useState","memo","Modal","Spin","Form","useGetTask","TaskForm","Footer","moment","useSaveTask","messageError","useDestroyTask","History","TaskModal","afterSave","afterDeleteTask","ref","form","useForm","submit","setFieldsValue","resetFields","visible","setVisible","task_id","setTaskId","undefined","old_column","setOldColumn","loadTask","loading","saveTask","save_loading","deleteTask","delete_loading","open","initial_data","data","task","column_id","createAt","deliveryDate","finishedDate","rest","values","utc","close","setTimeout","onFinish","raw_values","format","success","error","handleDelete"],"mappings":"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","sourcesContent":["import React, { forwardRef, useCallback, useImperativeHandle, useState, memo } from 'react'\nimport { Modal, Spin, Form } from 'antd'\nimport { TaskFormType, TaskType } from './Types'\nimport useGetTask from './useGetTask'\nimport TaskForm from './TaskForm'\nimport Footer from './Footer'\nimport moment from 'moment'\nimport useSaveTask from './useSaveTask'\nimport messageError from 'Utils/messageError'\nimport useDestroyTask from './useDestroyTask'\nimport History from './History/History'\n\ntype Open = (task_id?: string, initial_data?: TaskType) => void\n\ntype Props = {\n  afterSave?: (task: TaskType, old_column_id?: string) => void,\n  afterDeleteTask?: (column_id: string, task_id: string) => void\n}\n\nexport type TaskModalType = {\n  open: Open,\n  close: () => void\n}\n\nconst TaskModal: React.ForwardRefRenderFunction<TaskModalType, Props> = ({ afterSave, afterDeleteTask }, ref) => {\n  const [form] = Form.useForm<TaskFormType>()\n  const { submit, setFieldsValue, resetFields } = form\n\n  const [visible, setVisible] = useState(false)\n  const [task_id, setTaskId] = useState<string | undefined>(undefined)\n  const [old_column, setOldColumn] = useState<string | undefined>(undefined)\n\n  const [loadTask, { loading }] = useGetTask()\n  const [saveTask, { loading: save_loading }] = useSaveTask()\n  const [deleteTask, { loading: delete_loading }] = useDestroyTask()\n\n  const open: Open = useCallback(async (task_id, initial_data) => {\n    setTaskId(task_id)\n    setVisible(true)\n\n    if (initial_data) {\n      // @ts-ignore\n      setFieldsValue(initial_data)\n    }\n\n    if (!task_id) return\n\n    const { data } = await loadTask(task_id)\n    const { task } = data\n    setOldColumn(task?.column_id)\n\n    const { createAt, deliveryDate, finishedDate, ...rest } = task || {}\n    const values = {\n      ...rest,\n      deliveryDate: deliveryDate ? moment(deliveryDate).utc() : undefined,\n      createAt: createAt ? moment(createAt).utc() : undefined,\n      finishedDate: finishedDate ? moment(finishedDate).utc() : undefined\n    }\n\n    setFieldsValue(values)\n  }, [loadTask, setFieldsValue])\n\n  const close = useCallback(() => {\n    setTaskId(undefined)\n    setVisible(false)\n    setTimeout(() => resetFields(), 100)\n  }, [resetFields])\n\n  const onFinish = async (raw_values: TaskFormType) => {\n    const { createAt, deliveryDate, finishedDate, ...rest } = raw_values\n\n    const values = {\n      ...rest,\n      deliveryDate: deliveryDate.utc().format('YYYY-MM-DD'),\n      createAt: createAt?.utc().format('YYYY-MM-DD'),\n      finishedDate: finishedDate?.utc().format('YYYY-MM-DD')\n    }\n\n    try {\n      const { data } = await saveTask(values)\n      const { success, task } = data\n\n      if (success) {\n        close()\n        afterSave?.(task, old_column)\n      }\n    } catch (error) {\n      messageError('202106031552')\n    }\n  }\n\n  const handleDelete = async () => {\n    try {\n      const { data } = await deleteTask(task_id!)\n      const { success } = data || {}\n\n      if (!success) {\n        messageError('202106031647')\n        return\n      }\n\n      afterDeleteTask?.(old_column!, task_id!)\n      close()\n    } catch (error) {\n      messageError('202106031648')\n    }\n  }\n\n  useImperativeHandle(ref, () => ({ open, close }))\n\n  return (\n    <Modal\n      visible={visible}\n      destroyOnClose={true}\n      closable={true}\n      onCancel={close}\n      centered={true}\n      title={!!task_id ? 'Editar tarefa' : 'Nova tarefa'}\n      width={650}\n      footer={null}\n    >\n      <Spin spinning={loading}>\n        <Form form={form} layout=\"vertical\" onFinish={onFinish}>\n          <TaskForm setFieldsValue={setFieldsValue}/>\n        </Form>\n\n        <History task_id={task_id}/>\n\n        <Footer\n          has_id={!!task_id}\n          submit={submit}\n          close={close}\n          handleDelete={handleDelete}\n          loading={save_loading || delete_loading}\n        />\n      </Spin>\n    </Modal>\n  )\n}\n\n\nexport default memo(forwardRef(TaskModal))\n"]},"metadata":{},"sourceType":"module"}