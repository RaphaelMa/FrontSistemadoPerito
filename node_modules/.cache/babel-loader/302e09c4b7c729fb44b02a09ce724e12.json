{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport useAxios from 'axios-hooks';\n\nconst useGetData = () => useAxios({\n  url: '/dashboard',\n  method: 'GET'\n});\n\n__signature__(useGetData, \"useAxios{}\", () => [useAxios]);\n\nconst _default = useGetData;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(useGetData, \"useGetData\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Dashboard/useGetData.ts\");\n  reactHotLoader.register(_default, \"default\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Dashboard/useGetData.ts\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Dashboard/useGetData.ts"],"names":["useAxios","useGetData","url","method"],"mappings":";;;;;;;;;AAAA,OAAOA,QAAP,MAAqB,aAArB;;AAkBA,MAAMC,UAAU,GAAG,MACjBD,QAAQ,CAAe;AAAEE,EAAAA,GAAG,EAAE,YAAP;AAAqBC,EAAAA,MAAM,EAAE;AAA7B,CAAf,CADV;;cAAMF,U,uBACJD,Q;;iBAGaC,U;AAAf;;;;;;;;;;0BAJMA,U","sourcesContent":["import useAxios from 'axios-hooks'\nimport { AppointmentsType } from './Graphics/Appointments'\nimport { ProcessSituationType } from './Graphics/ProcessSituation'\nimport { FinancialSituationType } from './Graphics/FinancialSituation'\n\ntype QueryPayload = {\n  success?: boolean,\n  dashboard: {\n    totalProcess: number,\n    processMonitoring: number,\n    honoraryValue: number,\n    acceptAppointment: AppointmentsType,\n    situation: ProcessSituationType[],\n    financialSituation: FinancialSituationType[],\n    processExpertDate: number,\n  }\n}\n\nconst useGetData = () => (\n  useAxios<QueryPayload>({ url: '/dashboard', method: 'GET' })\n)\n\nexport default useGetData\n"]},"metadata":{},"sourceType":"module"}