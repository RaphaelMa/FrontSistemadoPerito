{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport useAxios from 'axios-hooks';\n\nconst useGetProcesses = () => {\n  const [{\n    loading,\n    data\n  }, getProcess] = useAxios({\n    method: \"GET\"\n  }, {\n    manual: true\n  });\n\n  const query = type => getProcess({\n    url: `indicatorsprocess/type=${type}`\n  });\n\n  return [{\n    loading,\n    data\n  }, query];\n};\n\n__signature__(useGetProcesses, \"useAxios{[{ loading, data }, getProcess]}\", () => [useAxios]);\n\nconst _default = useGetProcesses;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(useGetProcesses, \"useGetProcesses\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/ProcessIndicators/useGetProcessIndicators.ts\");\n  reactHotLoader.register(_default, \"default\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/ProcessIndicators/useGetProcessIndicators.ts\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/ProcessIndicators/useGetProcessIndicators.ts"],"names":["useAxios","useGetProcesses","loading","data","getProcess","method","manual","query","type","url"],"mappings":";;;;;;;;;AAAA,OAAOA,QAAP,MAAqB,aAArB;;AAMA,MAAMC,eAAe,GAAG,MAAwB;AAC9C,QAAM,CAAC;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAD,EAAoBC,UAApB,IAAkCJ,QAAQ,CAAkB;AAAEK,IAAAA,MAAM,EAAE;AAAV,GAAlB,EAAqC;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAArC,CAAhD;;AAEA,QAAMC,KAAK,GAAIC,IAAD,IAA+CJ,UAAU,CAAC;AAAEK,IAAAA,GAAG,EAAG,0BAAyBD,IAAK;AAAtC,GAAD,CAAvE;;AAEA,SAAO,CAAC;AAAEN,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAD,EAAoBI,KAApB,CAAP;AACD,CAND;;cAAMN,e,sDACoCD,Q;;iBAO3BC,e;AAAf;;;;;;;;;;0BARMA,e","sourcesContent":["import useAxios from 'axios-hooks'\n\ntype QueryPayload<T> = {\n  message: T[]\n}\n\nconst useGetProcesses = <T extends object>() => {\n  const [{ loading, data }, getProcess] = useAxios<QueryPayload<T>>({ method: \"GET\" }, { manual: true })\n\n  const query = (type: 'situation' | 'financial-situation') => getProcess({ url: `indicatorsprocess/type=${type}` })\n\n  return [{ loading, data }, query] as const\n}\n\nexport default useGetProcesses\n"]},"metadata":{},"sourceType":"module"}