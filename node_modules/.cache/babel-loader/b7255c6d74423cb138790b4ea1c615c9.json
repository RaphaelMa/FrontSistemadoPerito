{"ast":null,"code":"var _jsxFileName = \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Drawers/FinanceAccount/FinanceAccountDrawer.tsx\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useState, forwardRef, useImperativeHandle } from 'react';\nimport { Drawer, Form, Button, Spin, message } from 'antd';\nimport useGetFinanceAccount from './useGetFinanceAccount';\nimport useSaveFinanceAccount from './useSaveFinanceAccount';\nimport messageError from 'Utils/messageError';\nimport FinanceAccountForm from './FinanceAccountForm';\nimport styled from 'styled-components';\nimport successModal from 'Utils/successModal';\n\nconst FinanceAccountDrawer = ({\n  afterSave\n}, ref) => {\n  const [form] = Form.useForm();\n  const [visible, setVisible] = useState(false);\n  const [getFinanceAccount, {\n    loading\n  }] = useGetFinanceAccount();\n  const [saveFinanceAccount, {\n    loading: save_loading\n  }] = useSaveFinanceAccount();\n\n  const open = id => {\n    if (id) loadFinanceAccount(id);\n    setVisible(true);\n  };\n\n  const close = () => {\n    setVisible(false);\n    form.resetFields();\n  };\n\n  useImperativeHandle(ref, () => ({\n    open,\n    close\n  }));\n\n  const loadFinanceAccount = async id => {\n    let response;\n\n    try {\n      response = await getFinanceAccount(id);\n    } catch (error) {\n      messageError('202130051707');\n      return;\n    }\n\n    form.setFieldsValue(response.data.financialAccount);\n  };\n\n  const save = async values => {\n    let response;\n\n    try {\n      response = await saveFinanceAccount(values);\n    } catch (error) {\n      messageError('202130051708');\n      return;\n    }\n\n    const success = response.data.success;\n    const account = response.data.financialAccount;\n\n    if (success) {\n      successModal({\n        content: 'Conta bancÃ¡ria salva com sucesso!'\n      });\n      afterSave({ ...values,\n        _id: account._id\n      });\n      close();\n      return;\n    }\n\n    message.error(response.data.message);\n  };\n\n  const handleSave = () => {\n    form.validateFields().then(values => save(values));\n  };\n\n  return /*#__PURE__*/React.createElement(Drawer, {\n    visible: visible,\n    onClose: close,\n    title: \"Conta Banc\\xE1ria\",\n    width: 700,\n    footer: /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: close,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }, \"Cancelar\"), /*#__PURE__*/React.createElement(Button, {\n      loading: loading || save_loading,\n      onClick: handleSave,\n      type: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }, \"Salvar\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Spin, {\n    spinning: loading || save_loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FinanceAccountForm, {\n    form: form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  })));\n};\n\n__signature__(FinanceAccountDrawer, \"useForm{[form]}\\nuseState{[visible, setVisible](false)}\\nuseGetFinanceAccount{[getFinanceAccount, { loading }]}\\nuseSaveFinanceAccount{[saveFinanceAccount, { loading: save_loading }]}\\nuseImperativeHandle{}\", () => [useGetFinanceAccount, useSaveFinanceAccount, useImperativeHandle]);\n\nFinanceAccountDrawer.displayName = \"FinanceAccountDrawer\";\n\nconst _default = forwardRef(FinanceAccountDrawer);\n\nexport default _default;\nconst Footer = styled.div.withConfig({\n  displayName: \"FinanceAccountDrawer__Footer\",\n  componentId: \"sc-1pw9k8l-0\"\n})([\"text-align:right;button + button{margin-left:8px;}\"]);\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(FinanceAccountDrawer, \"FinanceAccountDrawer\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Drawers/FinanceAccount/FinanceAccountDrawer.tsx\");\n  reactHotLoader.register(Footer, \"Footer\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Drawers/FinanceAccount/FinanceAccountDrawer.tsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Drawers/FinanceAccount/FinanceAccountDrawer.tsx\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Drawers/FinanceAccount/FinanceAccountDrawer.tsx"],"names":["React","useState","forwardRef","useImperativeHandle","Drawer","Form","Button","Spin","message","useGetFinanceAccount","useSaveFinanceAccount","messageError","FinanceAccountForm","styled","successModal","FinanceAccountDrawer","afterSave","ref","form","useForm","visible","setVisible","getFinanceAccount","loading","saveFinanceAccount","save_loading","open","id","loadFinanceAccount","close","resetFields","response","error","setFieldsValue","data","financialAccount","save","values","success","account","content","_id","handleSave","validateFields","then","Footer","div"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,mBAAtC,QAAiE,OAAjE;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,MAAvB,EAA+BC,IAA/B,EAAqCC,OAArC,QAAoD,MAApD;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AAEA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;;AAaA,MAAMC,oBAAqF,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,EAAgBC,GAAhB,KAAwB;AACpH,QAAM,CAACC,IAAD,IAASb,IAAI,CAACc,OAAL,EAAf;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBpB,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAM,CAACqB,iBAAD,EAAoB;AAAEC,IAAAA;AAAF,GAApB,IAAmCd,oBAAoB,EAA7D;AACA,QAAM,CAACe,kBAAD,EAAqB;AAAED,IAAAA,OAAO,EAAEE;AAAX,GAArB,IAAkDf,qBAAqB,EAA7E;;AAEA,QAAMgB,IAAc,GAAIC,EAAD,IAAQ;AAC7B,QAAIA,EAAJ,EAAQC,kBAAkB,CAACD,EAAD,CAAlB;AAERN,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GAJD;;AAMA,QAAMQ,KAAK,GAAG,MAAM;AAClBR,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAH,IAAAA,IAAI,CAACY,WAAL;AACD,GAHD;;AAKA3B,EAAAA,mBAAmB,CAACc,GAAD,EAAM,OAAO;AAAES,IAAAA,IAAF;AAAQG,IAAAA;AAAR,GAAP,CAAN,CAAnB;;AAEA,QAAMD,kBAAkB,GAAG,MAAOD,EAAP,IAAsB;AAC/C,QAAII,QAAJ;;AACA,QAAI;AACFA,MAAAA,QAAQ,GAAG,MAAMT,iBAAiB,CAACK,EAAD,CAAlC;AAED,KAHD,CAGE,OAAOK,KAAP,EAAc;AACdrB,MAAAA,YAAY,CAAC,cAAD,CAAZ;AACA;AACD;;AAEDO,IAAAA,IAAI,CAACe,cAAL,CAAoBF,QAAQ,CAACG,IAAT,CAAcC,gBAAlC;AACD,GAXD;;AAaA,QAAMC,IAAI,GAAG,MAAOC,MAAP,IAAkC;AAC7C,QAAIN,QAAJ;;AACA,QAAI;AACFA,MAAAA,QAAQ,GAAG,MAAMP,kBAAkB,CAACa,MAAD,CAAnC;AACD,KAFD,CAEE,OAAOL,KAAP,EAAc;AACdrB,MAAAA,YAAY,CAAC,cAAD,CAAZ;AACA;AACD;;AAED,UAAM2B,OAAO,GAAGP,QAAQ,CAACG,IAAT,CAAcI,OAA9B;AACA,UAAMC,OAAO,GAAGR,QAAQ,CAACG,IAAT,CAAcC,gBAA9B;;AAEA,QAAIG,OAAJ,EAAa;AACXxB,MAAAA,YAAY,CAAC;AAAE0B,QAAAA,OAAO,EAAE;AAAX,OAAD,CAAZ;AACAxB,MAAAA,SAAS,CAAC,EAAE,GAAGqB,MAAL;AAAaI,QAAAA,GAAG,EAAEF,OAAO,CAACE;AAA1B,OAAD,CAAT;AACAZ,MAAAA,KAAK;AACL;AACD;;AAEDrB,IAAAA,OAAO,CAACwB,KAAR,CAAcD,QAAQ,CAACG,IAAT,CAAc1B,OAA5B;AACD,GApBD;;AAsBA,QAAMkC,UAAU,GAAG,MAAM;AACvBxB,IAAAA,IAAI,CAACyB,cAAL,GACGC,IADH,CACQP,MAAM,IAAID,IAAI,CAACC,MAAD,CADtB;AAED,GAHD;;AAKA,sBACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAEjB,OADX;AAEE,IAAA,OAAO,EAAES,KAFX;AAGE,IAAA,KAAK,EAAC,mBAHR;AAIE,IAAA,KAAK,EAAE,GAJT;AAKE,IAAA,MAAM,eACJ,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAEA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAGE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAEN,OAAO,IAAIE,YAA5B;AAA0C,MAAA,OAAO,EAAEiB,UAAnD;AAA+D,MAAA,IAAI,EAAC,SAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,CANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAeE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEnB,OAAO,IAAIE,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,kBAAD;AAAoB,IAAA,IAAI,EAAEP,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAfF,CADF;AAqBD,CAjFD;;cAAMH,oB,2NAIqCN,oB,EACeC,qB,EAaxDP,mB;;AAlBIY,oB;;iBAmFSb,UAAU,CAACa,oBAAD,C;;AAAzB;AAEA,MAAM8B,MAAM,GAAGhC,MAAM,CAACiC,GAAV;AAAA;AAAA;AAAA,0DAAZ;;;;;;;;;;0BArFM/B,oB;0BAqFA8B,M","sourcesContent":["import React, { useState, forwardRef, useImperativeHandle } from 'react'\nimport { Drawer, Form, Button, Spin, message } from 'antd'\nimport useGetFinanceAccount from './useGetFinanceAccount'\nimport useSaveFinanceAccount from './useSaveFinanceAccount'\nimport { FinanceAccount } from './types'\nimport messageError from 'Utils/messageError'\nimport FinanceAccountForm from './FinanceAccountForm'\nimport styled from 'styled-components'\nimport successModal from 'Utils/successModal'\n\ntype OpenType = (id?: string) => void\n\nexport type FinanceAccountDrawerType = {\n  open: OpenType,\n  close: () => void,\n}\n\ntype Props = {\n  afterSave: (account: Omit<FinanceAccount, '_id'> & { _id: string }) => void,\n}\n\nconst FinanceAccountDrawer: React.ForwardRefRenderFunction<FinanceAccountDrawerType, Props> = ({ afterSave }, ref) => {\n  const [form] = Form.useForm()\n  const [visible, setVisible] = useState(false)\n\n  const [getFinanceAccount, { loading }] = useGetFinanceAccount()\n  const [saveFinanceAccount, { loading: save_loading }] = useSaveFinanceAccount()\n\n  const open: OpenType = (id) => {\n    if (id) loadFinanceAccount(id)\n\n    setVisible(true)\n  }\n\n  const close = () => {\n    setVisible(false)\n    form.resetFields()\n  }\n\n  useImperativeHandle(ref, () => ({ open, close }))\n\n  const loadFinanceAccount = async (id: string) => {\n    let response\n    try {\n      response = await getFinanceAccount(id)\n\n    } catch (error) {\n      messageError('202130051707')\n      return\n    }\n\n    form.setFieldsValue(response.data.financialAccount)\n  }\n\n  const save = async (values: FinanceAccount) => {\n    let response\n    try {\n      response = await saveFinanceAccount(values)\n    } catch (error) {\n      messageError('202130051708')\n      return\n    }\n\n    const success = response.data.success\n    const account = response.data.financialAccount\n\n    if (success) {\n      successModal({ content: 'Conta bancÃ¡ria salva com sucesso!' })\n      afterSave({ ...values, _id: account._id })\n      close()\n      return\n    }\n\n    message.error(response.data.message)\n  }\n\n  const handleSave = () => {\n    form.validateFields()\n      .then(values => save(values as FinanceAccount))\n  }\n\n  return (\n    <Drawer\n      visible={visible}\n      onClose={close}\n      title=\"Conta BancÃ¡ria\"\n      width={700}\n      footer={\n        <Footer>\n          <Button onClick={close}>Cancelar</Button>\n\n          <Button loading={loading || save_loading} onClick={handleSave} type=\"primary\">\n            Salvar\n          </Button>\n        </Footer>\n      }\n    >\n      <Spin spinning={loading || save_loading}>\n        <FinanceAccountForm form={form}/>\n      </Spin>\n    </Drawer>\n  )\n}\n\nexport default forwardRef(FinanceAccountDrawer)\n\nconst Footer = styled.div`\n  text-align: right;\n\n  button + button {\n    margin-left: 8px;\n  }\n`\n"]},"metadata":{},"sourceType":"module"}