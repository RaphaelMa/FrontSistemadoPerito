{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport { useCallback, useMemo } from 'react';\nimport { renderDate } from 'Utils/formatters';\nimport { exportToXLS } from 'Utils/functions';\n\nconst useExportData = items => {\n  const columns = useMemo(() => [{\n    name: 'Coluna',\n    key: 'column_description'\n  }, {\n    name: 'Título',\n    key: 'title'\n  }, {\n    name: 'Responsável',\n    key: 'user_name'\n  }, {\n    name: 'Processo',\n    key: 'process_number'\n  }, {\n    name: 'Data Entrega',\n    key: 'deliveryDate',\n    render: task => task.finished ? 'Concluído' : renderDate(task.deliveryDate)\n  }, {\n    name: 'Finalizado',\n    key: 'finished',\n    render: task => task.finished ? 'Sim' : 'Não'\n  }], []);\n  const exportFile = useCallback(() => {\n    const file_name = 'tarefas';\n    exportToXLS(file_name, items, columns);\n  }, [columns, items]);\n  return exportFile;\n};\n\n__signature__(useExportData, \"useMemo{columns: ColumnType<TaskType>[]}\\nuseCallback{exportFile}\");\n\nconst _default = useExportData;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(useExportData, \"useExportData\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Tasks/List/useExportData.ts\");\n  reactHotLoader.register(_default, \"default\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Tasks/List/useExportData.ts\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Tasks/List/useExportData.ts"],"names":["useCallback","useMemo","renderDate","exportToXLS","useExportData","items","columns","name","key","render","task","finished","deliveryDate","exportFile","file_name"],"mappings":";;;;;;;;;AAAA,SAASA,WAAT,EAAsBC,OAAtB,QAAqC,OAArC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,QAAwC,iBAAxC;;AAGA,MAAMC,aAAa,GAAIC,KAAD,IAAuB;AAC3C,QAAMC,OAA+B,GAAGL,OAAO,CAAC,MAAM,CACpD;AAAEM,IAAAA,IAAI,EAAE,QAAR;AAAkBC,IAAAA,GAAG,EAAE;AAAvB,GADoD,EAEpD;AAAED,IAAAA,IAAI,EAAE,QAAR;AAAkBC,IAAAA,GAAG,EAAE;AAAvB,GAFoD,EAGpD;AAAED,IAAAA,IAAI,EAAE,aAAR;AAAuBC,IAAAA,GAAG,EAAE;AAA5B,GAHoD,EAIpD;AAAED,IAAAA,IAAI,EAAE,UAAR;AAAoBC,IAAAA,GAAG,EAAE;AAAzB,GAJoD,EAKpD;AAAED,IAAAA,IAAI,EAAE,cAAR;AAAwBC,IAAAA,GAAG,EAAE,cAA7B;AAA6CC,IAAAA,MAAM,EAAGC,IAAD,IAAUA,IAAI,CAACC,QAAL,GAAgB,WAAhB,GAA8BT,UAAU,CAACQ,IAAI,CAACE,YAAN;AAAvG,GALoD,EAMpD;AAAEL,IAAAA,IAAI,EAAE,YAAR;AAAsBC,IAAAA,GAAG,EAAE,UAA3B;AAAuCC,IAAAA,MAAM,EAAGC,IAAD,IAAUA,IAAI,CAACC,QAAL,GAAgB,KAAhB,GAAwB;AAAjF,GANoD,CAAP,EAO5C,EAP4C,CAA/C;AASA,QAAME,UAAU,GAAGb,WAAW,CAAC,MAAM;AACnC,UAAMc,SAAS,GAAG,SAAlB;AAEAX,IAAAA,WAAW,CAAWW,SAAX,EAAsBT,KAAtB,EAA6BC,OAA7B,CAAX;AACD,GAJ6B,EAI3B,CAACA,OAAD,EAAUD,KAAV,CAJ2B,CAA9B;AAMA,SAAOQ,UAAP;AACD,CAjBD;;cAAMT,a;;iBAmBSA,a;AAAf;;;;;;;;;;0BAnBMA,a","sourcesContent":["import { useCallback, useMemo } from 'react'\nimport { renderDate } from 'Utils/formatters'\nimport { exportToXLS, ColumnType } from 'Utils/functions'\nimport { TaskType } from './useGetTasks'\n\nconst useExportData = (items: TaskType[]) => {\n  const columns: ColumnType<TaskType>[] = useMemo(() => [\n    { name: 'Coluna', key: 'column_description' },\n    { name: 'Título', key: 'title' },\n    { name: 'Responsável', key: 'user_name' },\n    { name: 'Processo', key: 'process_number' },\n    { name: 'Data Entrega', key: 'deliveryDate', render: (task) => task.finished ? 'Concluído' : renderDate(task.deliveryDate) },\n    { name: 'Finalizado', key: 'finished', render: (task) => task.finished ? 'Sim' : 'Não' },\n  ], [])\n\n  const exportFile = useCallback(() => {\n    const file_name = 'tarefas'\n\n    exportToXLS<TaskType>(file_name, items, columns)\n  }, [columns, items])\n\n  return exportFile\n}\n\nexport default useExportData\n"]},"metadata":{},"sourceType":"module"}