{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport { createUnarySpacing } from '../spacing';\n/* tslint:enable:unified-signatures */\n\nexport default function createSpacing(spacingInput = 8) {\n  // Already transformed.\n  if (spacingInput.mui) {\n    return spacingInput;\n  } // Material Design layouts are visually balanced. Most measurements align to an 8dp grid, which aligns both spacing and the overall layout.\n  // Smaller components, such as icons, can align to a 4dp grid.\n  // https://material.io/design/layout/understanding-layout.html#usage\n\n\n  const transform = createUnarySpacing({\n    spacing: spacingInput\n  });\n\n  const spacing = (...argsInput) => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!(argsInput.length <= 4)) {\n        console.error(`MUI: Too many arguments provided, expected between 0 and 4, got ${argsInput.length}`);\n      }\n    }\n\n    const args = argsInput.length === 0 ? [1] : argsInput;\n    return args.map(argument => {\n      const output = transform(argument);\n      return typeof output === 'number' ? `${output}px` : output;\n    }).join(' ');\n  };\n\n  spacing.mui = true;\n  return spacing;\n}\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(createSpacing, \"createSpacing\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/node_modules/@mui/system/esm/createTheme/createSpacing.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/node_modules/@mui/system/esm/createTheme/createSpacing.js"],"names":["createUnarySpacing","createSpacing","spacingInput","mui","transform","spacing","argsInput","process","env","NODE_ENV","length","console","error","args","map","argument","output","join"],"mappings":";;;;;;;;;AAAA,SAASA,kBAAT,QAAmC,YAAnC;AAEA;;AACA,eAAe,SAASC,aAAT,CAAuBC,YAAY,GAAG,CAAtC,EAAyC;AACtD;AACA,MAAIA,YAAY,CAACC,GAAjB,EAAsB;AACpB,WAAOD,YAAP;AACD,GAJqD,CAIpD;AACF;AACA;;;AAGA,QAAME,SAAS,GAAGJ,kBAAkB,CAAC;AACnCK,IAAAA,OAAO,EAAEH;AAD0B,GAAD,CAApC;;AAIA,QAAMG,OAAO,GAAG,CAAC,GAAGC,SAAJ,KAAkB;AAChC,QAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,UAAI,EAAEH,SAAS,CAACI,MAAV,IAAoB,CAAtB,CAAJ,EAA8B;AAC5BC,QAAAA,OAAO,CAACC,KAAR,CAAe,mEAAkEN,SAAS,CAACI,MAAO,EAAlG;AACD;AACF;;AAED,UAAMG,IAAI,GAAGP,SAAS,CAACI,MAAV,KAAqB,CAArB,GAAyB,CAAC,CAAD,CAAzB,GAA+BJ,SAA5C;AACA,WAAOO,IAAI,CAACC,GAAL,CAASC,QAAQ,IAAI;AAC1B,YAAMC,MAAM,GAAGZ,SAAS,CAACW,QAAD,CAAxB;AACA,aAAO,OAAOC,MAAP,KAAkB,QAAlB,GAA8B,GAAEA,MAAO,IAAvC,GAA6CA,MAApD;AACD,KAHM,EAGJC,IAHI,CAGC,GAHD,CAAP;AAID,GAZD;;AAcAZ,EAAAA,OAAO,CAACF,GAAR,GAAc,IAAd;AACA,SAAOE,OAAP;AACD;;;;;;;;;;0BA7BuBJ,a","sourcesContent":["import { createUnarySpacing } from '../spacing';\n\n/* tslint:enable:unified-signatures */\nexport default function createSpacing(spacingInput = 8) {\n  // Already transformed.\n  if (spacingInput.mui) {\n    return spacingInput;\n  } // Material Design layouts are visually balanced. Most measurements align to an 8dp grid, which aligns both spacing and the overall layout.\n  // Smaller components, such as icons, can align to a 4dp grid.\n  // https://material.io/design/layout/understanding-layout.html#usage\n\n\n  const transform = createUnarySpacing({\n    spacing: spacingInput\n  });\n\n  const spacing = (...argsInput) => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!(argsInput.length <= 4)) {\n        console.error(`MUI: Too many arguments provided, expected between 0 and 4, got ${argsInput.length}`);\n      }\n    }\n\n    const args = argsInput.length === 0 ? [1] : argsInput;\n    return args.map(argument => {\n      const output = transform(argument);\n      return typeof output === 'number' ? `${output}px` : output;\n    }).join(' ');\n  };\n\n  spacing.mui = true;\n  return spacing;\n}"]},"metadata":{},"sourceType":"module"}