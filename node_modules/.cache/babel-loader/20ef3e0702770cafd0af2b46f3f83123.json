{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport useAxios from 'axios-hooks';\n\nconst useGetPerson = () => {\n  const [{\n    loading,\n    data\n  }, execute] = useAxios({\n    method: 'GET',\n    url: '/task/mode=kanban'\n  }, {\n    manual: true\n  });\n\n  const query = () => execute();\n\n  return [{\n    loading,\n    data\n  }, query];\n};\n\n__signature__(useGetPerson, \"useAxios{[{ loading, data }, execute]}\", () => [useAxios]);\n\nconst _default = useGetPerson;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(useGetPerson, \"useGetPerson\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Tasks/Kanban/useGetBoard.ts\");\n  reactHotLoader.register(_default, \"default\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Tasks/Kanban/useGetBoard.ts\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Tasks/Kanban/useGetBoard.ts"],"names":["useAxios","useGetPerson","loading","data","execute","method","url","manual","query"],"mappings":";;;;;;;;;AAAA,OAAOA,QAAP,MAAqB,aAArB;;AAQA,MAAMC,YAAY,GAAG,MAAM;AACzB,QAAM,CAAC;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAD,EAAoBC,OAApB,IAA+BJ,QAAQ,CAAU;AAAEK,IAAAA,MAAM,EAAE,KAAV;AAAiBC,IAAAA,GAAG,EAAE;AAAtB,GAAV,EAAuD;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAvD,CAA7C;;AAEA,QAAMC,KAAK,GAAI,MAAMJ,OAAO,EAA5B;;AAEA,SAAO,CAAC;AAAEF,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAD,EAAoBK,KAApB,CAAP;AACD,CAND;;cAAMP,Y,mDACiCD,Q;;iBAOxBC,Y;AAAf;;;;;;;;;;0BARMA,Y","sourcesContent":["import useAxios from 'axios-hooks'\nimport { ColumnType } from './Types'\n\ntype Payload = {\n  success: boolean,\n  task: ColumnType[]\n}\n\nconst useGetPerson = () => {\n  const [{ loading, data }, execute] = useAxios<Payload>({ method: 'GET', url: '/task/mode=kanban' }, { manual: true })\n\n  const query =  () => execute()\n\n  return [{ loading, data }, query] as const\n}\n\nexport default useGetPerson\n"]},"metadata":{},"sourceType":"module"}