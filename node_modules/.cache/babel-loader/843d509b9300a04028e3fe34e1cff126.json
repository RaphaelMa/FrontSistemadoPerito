{"ast":null,"code":"var _jsxFileName = \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Register/RegisterForm.tsx\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { memo, useEffect, useState } from 'react';\nimport { Button, Checkbox, Col, Form, Input, message, Row, Select } from 'antd';\nimport styled from 'styled-components';\nimport { theme } from 'Styles/theme';\nimport messageError from 'Utils/messageError';\nimport { useUserRegistration, useGetAreas } from './useGetData';\nimport { useUserSelector, useUserDispatch } from 'Redux/UserReducer';\nimport { normalizePhone } from 'Utils/functions';\nimport { Navigate } from 'react-router';\nimport PhoneInput from 'Utils/PhoneInput';\nimport successModal from 'Utils/successModal';\nconst initial_values = {\n  name: '',\n  email: '',\n  password: '',\n  confirm_password: '',\n  cellPhone: '',\n  areaId: '',\n  accept: false\n};\n\nconst RegisterForm = () => {\n  const [form] = Form.useForm();\n  const is_authenticated = useUserSelector(state => state.is_authenticated);\n  const [areas, setAreas] = useState([]);\n  const [{\n    loading: area_loading\n  }, getAreas] = useGetAreas();\n  const dispatch = useUserDispatch();\n\n  const fetchAreas = async () => {\n    try {\n      const {\n        data\n      } = await getAreas();\n      setAreas(data);\n      const [first_area] = data;\n      form.setFieldsValue({\n        areaId: first_area._id\n      });\n    } catch (e) {\n      message.error('Não foi possível listar as areas de atuação. Recarregue a página e tente novamente. ' + 'Se persistir o erro entre em contato conosco pelo código: 2008202138');\n    }\n  };\n\n  useEffect(() => {\n    fetchAreas(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const [{\n    loading\n  }, userRegister] = useUserRegistration();\n\n  const handleSave = async ({\n    name,\n    email,\n    password,\n    cellPhone,\n    areaId,\n    accept\n  }) => {\n    try {\n      const {\n        data\n      } = await userRegister({\n        data: {\n          name,\n          email,\n          password,\n          cellPhone,\n          areaId,\n          accept\n        }\n      });\n\n      if (!data.success) {\n        message.error(data.message);\n        return;\n      }\n\n      successModal({\n        content: 'Conta salva com sucesso'\n      });\n      dispatch({\n        type: 'LOGIN',\n        payload: {\n          token: data.token,\n          remember: false\n        }\n      });\n    } catch (e) {\n      messageError('2208202350');\n    }\n  };\n\n  if (is_authenticated) {\n    message.destroy();\n    return /*#__PURE__*/React.createElement(Navigate, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Form, {\n    form: form,\n    name: \"register\",\n    layout: \"vertical\",\n    scrollToFirstError: true,\n    onFinish: handleSave,\n    initialValues: initial_values,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(RowStyled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ColStyled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"name\",\n    validateTrigger: ['onBlur', 'onChange'],\n    rules: [{\n      validateTrigger: 'onChange',\n      required: true,\n      message: 'Campo obrigatório'\n    }, {\n      validateTrigger: 'onBlur',\n      type: 'string',\n      message: 'Nome não pode ficar em branco.'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Nome completo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(ColStyled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"email\",\n    validateTrigger: ['onBlur', 'onChange'],\n    rules: [{\n      validateTrigger: 'onChange',\n      required: true,\n      message: 'Campo obrigatório'\n    }, {\n      validateTrigger: 'onBlur',\n      type: 'email',\n      message: 'Email inválido'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"E-mail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(RowStyled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ColStyled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"password\",\n    validateTrigger: ['onBlur', 'onChange'],\n    rules: [{\n      validateTrigger: 'onChange',\n      required: true,\n      message: 'Campo obrigatório'\n    }, {\n      validateTrigger: 'onBlur',\n      min: 6,\n      message: 'Deve possuir ao menos 6 caracteres'\n    }],\n    hasFeedback: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input.Password, {\n    placeholder: \"Senha\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(ColStyled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"confirm_password\",\n    dependencies: ['password'],\n    validateTrigger: ['onBlur', 'onChange'],\n    hasFeedback: true,\n    rules: [{\n      validateTrigger: 'onChange',\n      required: true,\n      message: 'Campo obrigatório'\n    }, {\n      validateTrigger: 'onBlur',\n      min: 6,\n      message: 'Deve possuir ao menos 6 caracteres'\n    }, ({\n      getFieldValue\n    }) => ({\n      validator(rule, value) {\n        if (!value || getFieldValue('password') === value) {\n          return Promise.resolve();\n        }\n\n        return Promise.reject('As senhas informadas são diferentes!');\n      }\n\n    })],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input.Password, {\n    placeholder: \"Confirme sua senha\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(RowStyled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ColStyled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"cellPhone\",\n    validateTrigger: ['onBlur', 'onChange'],\n    rules: [{\n      validateTrigger: 'onChange',\n      required: true,\n      message: 'Campo obrigatório'\n    }, {\n      validateTrigger: 'onBlur',\n      min: 10,\n      message: 'Informe um telefone válido.'\n    }],\n    normalize: normalizePhone,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(PhoneInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(ColStyled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"areaId\",\n    validateTrigger: ['onBlur', 'onChange'],\n    rules: [{\n      validateTrigger: 'onChange',\n      required: true,\n      message: 'Informe sua área de atuação.'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    loading: area_loading,\n    style: {\n      width: '100%'\n    },\n    placeholder: \"\\xC1rea de atua\\xE7\\xE3o\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }, areas.map(area => /*#__PURE__*/React.createElement(Select.Option, {\n    key: area._id,\n    value: area._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }\n  }, area.description)))))), /*#__PURE__*/React.createElement(RowStyled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    md: 12,\n    lg: 8,\n    xl: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    htmlType: \"submit\",\n    type: \"primary\",\n    style: {\n      width: '100%'\n    },\n    color: theme.colors.primary,\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 11\n    }\n  }, \"Cadastrar\"))), /*#__PURE__*/React.createElement(RowStyled, {\n    style: {\n      marginTop: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"accept\",\n    validateTrigger: ['onBlur', 'onChange'],\n    valuePropName: \"checked\",\n    rules: [{\n      validator: (_, value) => value ? Promise.resolve() : Promise.reject('É preciso aceitar os termos de uso.')\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 11\n    }\n  }, \"Declaro que li e aceito os \\xA0\", /*#__PURE__*/React.createElement(\"a\", {\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    href: \"https://www.eventbrite.com.br/support/articles/pt_BR/Troubleshooting/termos-de-uso-da-api-da-eventbrite?lg=pt_BR\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }\n  }, \"termos de uso\")))));\n};\n\n__signature__(RegisterForm, \"useForm{[form]}\\nuseUserSelector{is_authenticated}\\nuseState{[areas, setAreas]([])}\\nuseGetAreas{[{ loading: area_loading }, getAreas]}\\nuseUserDispatch{dispatch}\\nuseEffect{}\\nuseUserRegistration{[{ loading }, userRegister]}\", () => [useUserSelector, useGetAreas, useUserDispatch, useUserRegistration]);\n\nRegisterForm.displayName = \"RegisterForm\";\n\nconst _default = memo(RegisterForm);\n\nexport default _default;\nconst RowStyled = styled(Row).attrs({\n  justify: 'center',\n  gutter: [22, 0]\n}).withConfig({\n  displayName: \"RegisterForm__RowStyled\",\n  componentId: \"r1oc4i-0\"\n})([\"\"]);\nconst ColStyled = styled(Col).attrs({\n  xs: 24,\n  md: 16,\n  lg: 12,\n  xl: 12,\n  xxl: 8\n}).withConfig({\n  displayName: \"RegisterForm__ColStyled\",\n  componentId: \"r1oc4i-1\"\n})([\"\"]);\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(initial_values, \"initial_values\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Register/RegisterForm.tsx\");\n  reactHotLoader.register(RegisterForm, \"RegisterForm\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Register/RegisterForm.tsx\");\n  reactHotLoader.register(RowStyled, \"RowStyled\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Register/RegisterForm.tsx\");\n  reactHotLoader.register(ColStyled, \"ColStyled\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Register/RegisterForm.tsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Register/RegisterForm.tsx\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Register/RegisterForm.tsx"],"names":["React","memo","useEffect","useState","Button","Checkbox","Col","Form","Input","message","Row","Select","styled","theme","messageError","useUserRegistration","useGetAreas","useUserSelector","useUserDispatch","normalizePhone","Navigate","PhoneInput","successModal","initial_values","name","email","password","confirm_password","cellPhone","areaId","accept","RegisterForm","form","useForm","is_authenticated","state","areas","setAreas","loading","area_loading","getAreas","dispatch","fetchAreas","data","first_area","setFieldsValue","_id","e","error","userRegister","handleSave","success","content","type","payload","token","remember","destroy","validateTrigger","required","min","getFieldValue","validator","rule","value","Promise","resolve","reject","width","map","area","description","colors","primary","marginTop","_","RowStyled","attrs","justify","gutter","ColStyled","xs","md","lg","xl","xxl"],"mappings":"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","sourcesContent":["import React, { memo, useEffect, useState } from 'react'\nimport { Button, Checkbox, Col, Form, Input, message, Row, Select } from 'antd'\nimport { Store } from 'antd/lib/form/interface'\nimport styled from 'styled-components'\nimport { theme } from 'Styles/theme'\nimport messageError from 'Utils/messageError'\nimport { useUserRegistration, useGetAreas, AreasType } from './useGetData'\nimport { useUserSelector, useUserDispatch } from 'Redux/UserReducer'\nimport { normalizePhone } from 'Utils/functions'\nimport { Navigate } from 'react-router'\nimport PhoneInput from 'Utils/PhoneInput'\nimport successModal from 'Utils/successModal'\n\nconst initial_values = {\n  name: '',\n  email: '',\n  password: '',\n  confirm_password: '',\n  cellPhone: '',\n  areaId: '',\n  accept: false\n}\n\nconst RegisterForm: React.FC = () => {\n  const [form] = Form.useForm()\n  const is_authenticated = useUserSelector(state => state.is_authenticated)\n  const [areas, setAreas] = useState<AreasType[]>([])\n  const [{ loading: area_loading }, getAreas] = useGetAreas()\n  const dispatch = useUserDispatch()\n\n  const fetchAreas = async () => {\n    try {\n      const { data } = await getAreas()\n\n      setAreas(data)\n      const [first_area] = data\n\n      form.setFieldsValue({ areaId: first_area._id })\n    } catch (e) {\n      message.error('Não foi possível listar as areas de atuação. Recarregue a página e tente novamente. ' +\n        'Se persistir o erro entre em contato conosco pelo código: 2008202138')\n    }\n  }\n\n  useEffect(() => {\n    fetchAreas()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const [{ loading }, userRegister] = useUserRegistration()\n\n  const handleSave = async ({ name, email, password, cellPhone, areaId, accept }: Store) => {\n    try {\n      const { data } = await userRegister({ data: { name, email, password, cellPhone, areaId, accept } })\n\n      if (!data.success) {\n        message.error(data.message)\n        return\n      }\n\n      successModal({ content: 'Conta salva com sucesso' })\n      dispatch({ type: 'LOGIN', payload: { token: data!.token!, remember: false } })\n    } catch (e) {\n      messageError('2208202350')\n    }\n  }\n\n  if (is_authenticated) {\n    message.destroy()\n    return <Navigate to=\"/\"/>\n  }\n\n  return (\n    <Form\n      form={form}\n      name=\"register\"\n      layout=\"vertical\"\n      scrollToFirstError\n      onFinish={handleSave}\n      initialValues={initial_values}\n    >\n      <RowStyled>\n        <ColStyled>\n          <Form.Item\n            name=\"name\"\n            validateTrigger={['onBlur', 'onChange']}\n            rules={[\n              { validateTrigger: 'onChange', required: true, message: 'Campo obrigatório' },\n              { validateTrigger: 'onBlur', type: 'string', message: 'Nome não pode ficar em branco.' }\n            ]}\n          >\n            <Input placeholder=\"Nome completo\"/>\n          </Form.Item>\n        </ColStyled>\n\n        <ColStyled>\n          <Form.Item\n            name=\"email\"\n            validateTrigger={['onBlur', 'onChange']}\n            rules={[\n              { validateTrigger: 'onChange', required: true, message: 'Campo obrigatório' },\n              { validateTrigger: 'onBlur', type: 'email', message: 'Email inválido' }\n            ]}\n          >\n            <Input placeholder=\"E-mail\"/>\n          </Form.Item>\n        </ColStyled>\n      </RowStyled>\n\n      <RowStyled>\n        <ColStyled>\n          <Form.Item\n            name=\"password\"\n            validateTrigger={['onBlur', 'onChange']}\n            rules={[\n              { validateTrigger: 'onChange', required: true, message: 'Campo obrigatório' },\n              { validateTrigger: 'onBlur', min: 6, message: 'Deve possuir ao menos 6 caracteres' }\n            ]}\n            hasFeedback\n          >\n            <Input.Password placeholder=\"Senha\"/>\n          </Form.Item>\n        </ColStyled>\n\n        <ColStyled>\n          <Form.Item\n            name=\"confirm_password\"\n            dependencies={['password']}\n            validateTrigger={['onBlur', 'onChange']}\n            hasFeedback\n            rules={[\n              { validateTrigger: 'onChange', required: true, message: 'Campo obrigatório' },\n              { validateTrigger: 'onBlur', min: 6, message: 'Deve possuir ao menos 6 caracteres' },\n              ({ getFieldValue }) => ({\n                validator(rule, value) {\n                  if (!value || getFieldValue('password') === value) {\n                    return Promise.resolve()\n                  }\n                  return Promise.reject('As senhas informadas são diferentes!')\n                }\n              })\n            ]}\n          >\n            <Input.Password placeholder=\"Confirme sua senha\"/>\n          </Form.Item>\n\n        </ColStyled>\n      </RowStyled>\n\n      <RowStyled>\n        <ColStyled>\n          <Form.Item\n            name=\"cellPhone\"\n            validateTrigger={['onBlur', 'onChange']}\n            rules={[\n              { validateTrigger: 'onChange', required: true, message: 'Campo obrigatório' },\n              { validateTrigger: 'onBlur', min: 10, message: 'Informe um telefone válido.' }\n            ]}\n            normalize={normalizePhone}\n          >\n            <PhoneInput/>\n          </Form.Item>\n        </ColStyled>\n\n        <ColStyled>\n          <Form.Item\n            name=\"areaId\"\n            validateTrigger={['onBlur', 'onChange']}\n            rules={[\n              { validateTrigger: 'onChange', required: true, message: 'Informe sua área de atuação.' }\n            ]}\n          >\n            <Select\n              loading={area_loading}\n              style={{ width: '100%' }}\n              placeholder=\"Área de atuação\"\n            >\n              {areas.map(area => (\n                <Select.Option key={area._id} value={area._id}>{area.description}</Select.Option>\n              ))}\n            </Select>\n          </Form.Item>\n        </ColStyled>\n      </RowStyled>\n\n      <RowStyled>\n        <Col xs={24} md={12} lg={8} xl={6}>\n          <Button\n            htmlType=\"submit\"\n            type=\"primary\"\n            style={{ width: '100%' }}\n            color={theme.colors.primary}\n            loading={loading}\n          >\n            Cadastrar\n          </Button>\n        </Col>\n      </RowStyled>\n\n      <RowStyled style={{ marginTop: 8 }}>\n        <Form.Item\n          name=\"accept\"\n          validateTrigger={['onBlur', 'onChange']}\n          valuePropName=\"checked\"\n          rules={[\n            { validator: (_, value) => value ? Promise.resolve() : Promise.reject('É preciso aceitar os termos de uso.') }\n          ]}\n        >\n          <Checkbox>\n            Declaro que li e aceito os &nbsp;\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"https://www.eventbrite.com.br/support/articles/pt_BR/Troubleshooting/termos-de-uso-da-api-da-eventbrite?lg=pt_BR\"\n            >\n              termos de uso\n            </a>\n          </Checkbox>\n        </Form.Item>\n      </RowStyled>\n    </Form>\n  )\n}\n\nexport default memo(RegisterForm)\n\nconst RowStyled = styled(Row).attrs({\n  justify: 'center',\n  gutter: [22, 0]\n})``\n\nconst ColStyled = styled(Col).attrs({\n  xs: 24, md: 16, lg: 12, xl: 12, xxl: 8\n})``\n"]},"metadata":{},"sourceType":"module"}