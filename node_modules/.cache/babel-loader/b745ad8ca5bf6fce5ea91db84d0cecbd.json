{"ast":null,"code":"var _jsxFileName = \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Modals/TaskColumn/TaskColumnModal.tsx\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { forwardRef, useCallback, useImperativeHandle, useState } from 'react';\nimport { Modal, Spin, Form } from 'antd';\nimport TaskColumnForm from './TaskColumnForm';\nimport styled from 'styled-components';\nimport useSaveColumn from './useSaveColumn';\nimport messageError from 'Utils/messageError';\n\nconst TaskColumnModal = ({\n  afterSave\n}, ref) => {\n  const [form] = Form.useForm();\n  const {\n    submit,\n    setFieldsValue,\n    resetFields\n  } = form;\n  const [visible, setVisible] = useState(false);\n  const [id, setId] = useState(undefined);\n  const [saveColumn, {\n    loading\n  }] = useSaveColumn();\n  const open = useCallback(async (id, name) => {\n    setId(id);\n    setFieldsValue({\n      name\n    });\n    setVisible(true);\n  }, [setFieldsValue]);\n  const close = useCallback(() => {\n    setId(undefined);\n    setVisible(false);\n    setTimeout(() => resetFields(), 400);\n  }, [resetFields]);\n  useImperativeHandle(ref, () => ({\n    open,\n    close\n  }));\n\n  const onFinish = async values => {\n    try {\n      const {\n        data\n      } = await saveColumn({\n        _id: id,\n        description: values.name\n      });\n      const {\n        success,\n        column\n      } = data || {};\n\n      if (!success) {\n        messageError('202106031721');\n        return;\n      }\n\n      close();\n      afterSave === null || afterSave === void 0 ? void 0 : afterSave(column);\n    } catch (error) {\n      messageError('202106031721');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    visible: visible,\n    closable: false,\n    okText: \"Salvar\",\n    cancelText: \"Cancelar\",\n    onOk: submit,\n    okButtonProps: {\n      loading\n    },\n    onCancel: close,\n    centered: true,\n    width: 420,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, !!id ? \"Editar coluna\" : \"Nova coluna\"), /*#__PURE__*/React.createElement(Spin, {\n    spinning: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    form: form,\n    layout: \"vertical\",\n    onFinish: onFinish,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TaskColumnForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }))));\n};\n\n__signature__(TaskColumnModal, \"useForm{[form]}\\nuseState{[visible, setVisible](false)}\\nuseState{[id, setId](undefined)}\\nuseSaveColumn{[saveColumn, { loading }]}\\nuseCallback{open: Open}\\nuseCallback{close}\\nuseImperativeHandle{}\", () => [useSaveColumn, useImperativeHandle]);\n\nTaskColumnModal.displayName = \"TaskColumnModal\";\n\nconst _default = forwardRef(TaskColumnModal);\n\nexport default _default;\nconst Title = styled.div.withConfig({\n  displayName: \"TaskColumnModal__Title\",\n  componentId: \"sc-3dsu6d-0\"\n})([\"font-weight:500;font-size:16px;line-height:22px;display:flex;justify-content:center;margin-bottom:20px;\"]);\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(TaskColumnModal, \"TaskColumnModal\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Modals/TaskColumn/TaskColumnModal.tsx\");\n  reactHotLoader.register(Title, \"Title\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Modals/TaskColumn/TaskColumnModal.tsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Modals/TaskColumn/TaskColumnModal.tsx\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Modals/TaskColumn/TaskColumnModal.tsx"],"names":["React","forwardRef","useCallback","useImperativeHandle","useState","Modal","Spin","Form","TaskColumnForm","styled","useSaveColumn","messageError","TaskColumnModal","afterSave","ref","form","useForm","submit","setFieldsValue","resetFields","visible","setVisible","id","setId","undefined","saveColumn","loading","open","name","close","setTimeout","onFinish","values","data","_id","description","success","column","error","Title","div"],"mappings":"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","sourcesContent":["import React, { forwardRef, useCallback, useImperativeHandle, useState } from 'react'\nimport { Modal, Spin, Form } from 'antd'\nimport TaskColumnForm from './TaskColumnForm'\nimport styled from 'styled-components'\nimport useSaveColumn from './useSaveColumn'\nimport messageError from 'Utils/messageError'\n\ntype Open = (id?: string, name?: string) => void\n\ntype Props = {\n  afterSave?: (column: { description: string, _id: string, order: number }) => void\n}\n\nexport type TaskColumnModalType = {\n  open: Open,\n  close: () => void\n}\n\nconst TaskColumnModal: React.ForwardRefRenderFunction<TaskColumnModalType, Props> = ({ afterSave }, ref) => {\n  const [form] = Form.useForm()\n  const { submit, setFieldsValue, resetFields } = form\n\n  const [visible, setVisible] = useState(false)\n  const [id, setId] = useState<string | undefined>(undefined)\n  const [saveColumn, { loading }] = useSaveColumn()\n\n  const open: Open = useCallback(async (id, name) => {\n    setId(id)\n    setFieldsValue({ name })\n    setVisible(true)\n  }, [setFieldsValue])\n\n  const close = useCallback(() => {\n    setId(undefined)\n    setVisible(false)\n    setTimeout(() => resetFields(), 400)\n  }, [resetFields])\n\n  useImperativeHandle(ref, () => ({ open, close }))\n\n  const onFinish = async (values: { name: string }) => {\n    try {\n      const { data } = await saveColumn({ _id: id, description: values.name })\n      const { success, column } = data || {}\n\n      if (!success) {\n        messageError('202106031721')\n        return\n      }\n\n      close()\n      afterSave?.(column)\n    } catch (error) {\n      messageError('202106031721')\n    }\n  }\n\n  return (\n    <Modal\n      visible={visible}\n      closable={false}\n      okText=\"Salvar\"\n      cancelText=\"Cancelar\"\n      onOk={submit}\n      okButtonProps={{ loading }}\n      onCancel={close}\n      centered={true}\n      width={420}\n    >\n      <Title>\n        {!!id ? \"Editar coluna\" : \"Nova coluna\"}\n      </Title>\n      <Spin spinning={false}>\n        <Form form={form} layout=\"vertical\" onFinish={onFinish}>\n          <TaskColumnForm/>\n        </Form>\n      </Spin>\n    </Modal>\n  )\n}\n\nexport default forwardRef(TaskColumnModal)\n\nconst Title = styled.div`\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 22px;\n  display: flex;\n  justify-content: center;\n  margin-bottom: 20px;\n`\n"]},"metadata":{},"sourceType":"module"}