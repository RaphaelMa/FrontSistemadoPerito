{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport useAxios from 'axios-hooks';\n\nconst useGetFiles = () => {\n  const [, execute] = useAxios({\n    method: \"GET\"\n  }, {\n    manual: true\n  });\n  return process_id => execute({\n    url: `/uploadfiles/process=${process_id}`\n  });\n};\n\n__signature__(useGetFiles, \"useAxios{[, execute]}\", () => [useAxios]);\n\nconst _default = useGetFiles;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(useGetFiles, \"useGetFiles\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/NewProcess/Files/useGetFiles.ts\");\n  reactHotLoader.register(_default, \"default\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/NewProcess/Files/useGetFiles.ts\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/NewProcess/Files/useGetFiles.ts"],"names":["useAxios","useGetFiles","execute","method","manual","process_id","url"],"mappings":";;;;;;;;;AAAA,OAAOA,QAAP,MAAqB,aAArB;;AAYA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAM,GAAGC,OAAH,IAAcF,QAAQ,CAAa;AAAEG,IAAAA,MAAM,EAAE;AAAV,GAAb,EAAgC;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAhC,CAA5B;AAEA,SAAQC,UAAD,IAAwBH,OAAO,CAAC;AAAEI,IAAAA,GAAG,EAAG,wBAAuBD,UAAW;AAA1C,GAAD,CAAtC;AACD,CAJD;;cAAMJ,W,kCACgBD,Q;;iBAKPC,W;AAAf;;;;;;;;;;0BANMA,W","sourcesContent":["import useAxios from 'axios-hooks'\n\ntype FileType = {\n  _id: string,\n  createAt: string,\n  name: string,\n  size: string,\n  key: string,\n  url: string,\n  process_id: string\n}\n\nconst useGetFiles = () => {\n  const [, execute] = useAxios<FileType[]>({ method: \"GET\" }, { manual: true })\n\n  return (process_id: string) => execute({ url: `/uploadfiles/process=${process_id}` })\n}\n\nexport default useGetFiles\n"]},"metadata":{},"sourceType":"module"}