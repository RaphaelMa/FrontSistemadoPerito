{"ast":null,"code":"var _jsxFileName = \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Inputs/CompanyInput/CompanyInput.tsx\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React from 'react';\nimport { Select } from 'antd';\nimport useGetCompanies from './useGetCompanies';\nimport { deburr } from 'lodash';\n\nconst CompanyInput = ({\n  query_options,\n  ...props\n}) => {\n  const [{\n    loading,\n    data\n  }] = useGetCompanies(query_options);\n  return /*#__PURE__*/React.createElement(Select, Object.assign({\n    loading: loading,\n    style: {\n      width: '100%'\n    },\n    placeholder: \"Selecione\",\n    filterOption: (raw_value, option) => {\n      const value = deburr(raw_value).toLowerCase();\n      const option_value = deburr(option === null || option === void 0 ? void 0 : option.children).toLowerCase();\n      return option_value.indexOf(value) >= 0;\n    }\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }), data === null || data === void 0 ? void 0 : data.map(company => /*#__PURE__*/React.createElement(Select.Option, {\n    key: company._id,\n    value: company._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, company.description)));\n};\n\n__signature__(CompanyInput, \"useGetCompanies{[{ loading, data }]}\", () => [useGetCompanies]);\n\nCompanyInput.displayName = \"CompanyInput\";\nconst _default = CompanyInput;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(CompanyInput, \"CompanyInput\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Inputs/CompanyInput/CompanyInput.tsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Inputs/CompanyInput/CompanyInput.tsx\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Inputs/CompanyInput/CompanyInput.tsx"],"names":["React","Select","useGetCompanies","deburr","CompanyInput","query_options","props","loading","data","width","raw_value","option","value","toLowerCase","option_value","children","indexOf","map","company","_id","description"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAyB,MAAzB;AAEA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,MAAT,QAAuB,QAAvB;;AAOA,MAAMC,YAAsC,GAAG,CAAC;AAACC,EAAAA,aAAD;AAAgB,KAAGC;AAAnB,CAAD,KAA+B;AAC5E,QAAM,CAAC;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAD,IAAsBN,eAAe,CAACG,aAAD,CAA3C;AAEA,sBACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAEE,OADX;AAEE,IAAA,KAAK,EAAE;AAAEE,MAAAA,KAAK,EAAE;AAAT,KAFT;AAGE,IAAA,WAAW,EAAC,WAHd;AAIE,IAAA,YAAY,EAAE,CAACC,SAAD,EAAYC,MAAZ,KAAuB;AACnC,YAAMC,KAAK,GAAGT,MAAM,CAACO,SAAD,CAAN,CAAkBG,WAAlB,EAAd;AACA,YAAMC,YAAY,GAAGX,MAAM,CAACQ,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAEI,QAAT,CAAN,CAAyBF,WAAzB,EAArB;AAEA,aAAOC,YAAY,CAACE,OAAb,CAAqBJ,KAArB,KAA+B,CAAtC;AACD;AATH,KAUMN,KAVN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAYGE,IAZH,aAYGA,IAZH,uBAYGA,IAAI,CAAES,GAAN,CAAUC,OAAO,iBAChB,oBAAC,MAAD,CAAQ,MAAR;AAAe,IAAA,GAAG,EAAEA,OAAO,CAACC,GAA5B;AAAiC,IAAA,KAAK,EAAED,OAAO,CAACC,GAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsDD,OAAO,CAACE,WAA9D,CADD,CAZH,CADF;AAkBD,CArBD;;cAAMhB,Y,iDACwBF,e;;AADxBE,Y;iBAuBSA,Y;AAAf;;;;;;;;;;0BAvBMA,Y","sourcesContent":["import React from 'react'\nimport { Select,  } from 'antd'\nimport { SelectProps } from 'antd/lib/select'\nimport useGetCompanies from './useGetCompanies'\nimport { deburr } from 'lodash'\nimport { Options } from 'axios-hooks'\n\ntype Props = {\n  query_options?: Options\n} & SelectProps<string>\n\nconst CompanyInput: React.FC<Partial<Props>> = ({query_options, ...props}) => {\n  const [{ loading, data }] = useGetCompanies(query_options)\n\n  return (\n    <Select\n      loading={loading}\n      style={{ width: '100%' }}\n      placeholder=\"Selecione\"\n      filterOption={(raw_value, option) => {\n        const value = deburr(raw_value).toLowerCase()\n        const option_value = deburr(option?.children).toLowerCase()\n\n        return option_value.indexOf(value) >= 0\n      }}\n      {...props}\n    >\n      {data?.map(company => (\n        <Select.Option key={company._id} value={company._id}>{company.description}</Select.Option>\n      ))}\n    </Select>\n  )\n}\n\nexport default CompanyInput\n"]},"metadata":{},"sourceType":"module"}