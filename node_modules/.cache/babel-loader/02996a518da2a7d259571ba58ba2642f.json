{"ast":null,"code":"var _jsxFileName = \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Process/useColumns.tsx\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useCallback, useMemo } from 'react';\nimport { currencyFormatter } from 'Utils/formatters';\nimport { useUserSelector } from 'Redux/UserReducer';\nimport { Tag } from 'antd';\nimport ActionButtons from './ActionButtons';\nimport moment from 'moment';\nexport const IMPORTED_KEYS = {\n  not_imported: '#5A6978',\n  importing: '#FFD541',\n  imported: '#3CA49E',\n  error_importing: '#F00C0C'\n};\nconst MOMENT_FORMAT = 'YYYY/MM/DD';\nconst DEFAULT_FORMAT = 'DD/MM/YYYY';\n\nconst useColumns = props => {\n  const {\n    handleDelete,\n    handleEdit,\n    updateProcessPushStatus,\n    visible_columns,\n    updateProcessFavorite\n  } = props;\n  const plan_modules = useUserSelector(state => {\n    var _state$company;\n\n    return (_state$company = state.company) === null || _state$company === void 0 ? void 0 : _state$company.plan.modules;\n  });\n  const orderProcess = useCallback((a, b, key) => {\n    const value_a = a[key];\n    const value_b = b[key];\n    if (!value_a) return 1;\n    if (!value_b) return -1;\n    if (value_a < value_b) return -1;\n    if (value_a > value_b) return 1;\n    return 0;\n  }, []);\n  const renderDate = useCallback(date => date ? moment(date, MOMENT_FORMAT).format(DEFAULT_FORMAT) : null, []);\n  return useMemo(() => {\n    const columns = [{\n      title: 'Data de Criação',\n      dataIndex: 'createAt',\n      key: 'createAt',\n      width: 140,\n      align: 'center',\n      defaultSortOrder: 'descend',\n      sorter: (a, b) => orderProcess(a, b, 'createAt'),\n      render: renderDate\n    }, {\n      title: 'Última atualização',\n      dataIndex: 'updateAt',\n      key: 'updateAt',\n      width: 160,\n      align: 'center',\n      sorter: (a, b) => orderProcess(a, b, 'updateAt'),\n      render: renderDate\n    }, {\n      title: 'Número do Processo',\n      dataIndex: 'processNumber',\n      ellipsis: true,\n      key: 'processNumber',\n      width: 170,\n      sorter: (a, b) => orderProcess(a, b, 'processNumber')\n    }, {\n      title: 'Pessoas',\n      key: 'peoples',\n      dataIndex: 'peoples',\n      ellipsis: true,\n      width: 220,\n      render: renderPeople\n    }, {\n      title: 'Polo Ativo',\n      key: 'activePole',\n      dataIndex: 'activePole',\n      ellipsis: true,\n      width: 220,\n      render: renderPeople\n    }, {\n      title: 'Polo Passivo',\n      key: 'passivePole',\n      dataIndex: 'passivePole',\n      ellipsis: true,\n      width: 220,\n      render: renderPeople\n    }, {\n      title: 'Código Interno',\n      key: 'internalCode',\n      dataIndex: 'internalCode',\n      ellipsis: true,\n      width: 170,\n      sorter: (a, b) => orderProcess(a, b, 'internalCode')\n    }, {\n      title: 'Status Importação',\n      dataIndex: 'statusImport_description',\n      ellipsis: true,\n      key: 'statusImport_description',\n      align: 'center',\n      width: 140,\n      sorter: (a, b) => orderProcess(a, b, 'statusImport_description'),\n      render: (_, record) => {\n        if (!record.statusImport_key) return null;\n        return /*#__PURE__*/React.createElement(Tag, {\n          color: IMPORTED_KEYS[record.statusImport_key],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 11\n          }\n        }, record.statusImport_description);\n      }\n    }, {\n      title: 'Data nomeação',\n      dataIndex: 'appointmentDate',\n      key: 'appointmentDate',\n      width: 150,\n      align: 'center',\n      sorter: (a, b) => orderProcess(a, b, 'appointmentDate'),\n      render: renderDate\n    }, {\n      title: 'Comarca',\n      key: 'judicialDistrict_description',\n      dataIndex: 'judicialDistrict_description',\n      width: 220,\n      ellipsis: true,\n      sorter: (a, b) => orderProcess(a, b, 'judicialDistrict_description')\n    }, {\n      title: 'Vara',\n      key: 'judicialDistrictLevel_description',\n      dataIndex: 'judicialDistrictLevel_description',\n      width: 220,\n      ellipsis: true,\n      sorter: (a, b) => orderProcess(a, b, 'judicialDistrictLevel_description')\n    }, {\n      title: 'Situação do Processo',\n      dataIndex: 'situation_description',\n      ellipsis: true,\n      width: 220,\n      key: 'situation_description',\n      sorter: (a, b) => orderProcess(a, b, 'situation_description')\n    }, {\n      title: 'Situação Financeira do Processo',\n      dataIndex: 'financialSituation_description',\n      ellipsis: true,\n      width: 240,\n      key: 'financialSituation_description',\n      sorter: (a, b) => orderProcess(a, b, 'financialSituation_description')\n    }, {\n      title: 'Natureza',\n      key: 'nature_description',\n      dataIndex: 'nature_description',\n      width: 220,\n      ellipsis: true,\n      sorter: (a, b) => orderProcess(a, b, 'nature_description')\n    }, {\n      title: 'Ação/Objeto Perícia',\n      key: 'objetcExpert_description',\n      dataIndex: 'objetcExpert_description',\n      width: 220,\n      ellipsis: true,\n      sorter: (a, b) => orderProcess(a, b, 'objetcExpert_description')\n    }, {\n      title: 'Valor Processo',\n      key: 'processValue',\n      dataIndex: 'processValue',\n      width: 160,\n      sorter: (a, b) => orderProcess(a, b, 'processValue'),\n      render: (_, value) => currencyFormatter(value.processValue, {\n        cents: true\n      })\n    }, {\n      title: 'Honorário Apresentado',\n      key: 'honoraryValue',\n      dataIndex: 'c',\n      width: 180,\n      sorter: (a, b) => orderProcess(a, b, 'honoraryValue'),\n      render: (_, data) => currencyFormatter(data.honoraryValue, {\n        cents: true\n      })\n    }, {\n      title: 'Honorário Arbitrario',\n      key: 'arbitraryValue',\n      dataIndex: 'arbitraryValue',\n      width: 160,\n      sorter: (a, b) => orderProcess(a, b, 'arbitraryValue'),\n      render: value => currencyFormatter(value, {\n        cents: true\n      })\n    }, {\n      title: 'Perito ou Asistente',\n      key: 'expertName',\n      dataIndex: 'expertName',\n      width: 220,\n      ellipsis: true,\n      sorter: (a, b) => orderProcess(a, b, 'expertName')\n    }, {\n      title: 'Data Perícia',\n      dataIndex: 'expertiseDate',\n      key: 'expertiseDate',\n      width: 150,\n      align: 'center',\n      sorter: (a, b) => orderProcess(a, b, 'expertiseDate'),\n      render: renderDate\n    }, {\n      title: 'Previsão Entrega Laudo',\n      dataIndex: 'previsionReport',\n      key: 'previsionReport',\n      align: 'center',\n      width: 200,\n      sorter: (a, b) => orderProcess(a, b, 'previsionReport'),\n      render: renderDate\n    }, {\n      title: 'Entrega Laudo',\n      dataIndex: 'deliveryReport',\n      key: 'deliveryReport',\n      align: 'center',\n      width: 130,\n      sorter: (a, b) => orderProcess(a, b, 'deliveryReport'),\n      render: renderDate\n    }, {\n      title: 'Limite Esc. Laudo',\n      dataIndex: 'clarificationReport',\n      key: 'clarificationReport',\n      align: 'center',\n      width: 160,\n      sorter: (a, b) => orderProcess(a, b, 'clarificationReport'),\n      render: renderDate\n    }, {\n      title: 'Entrega Esc. Laudo',\n      dataIndex: 'clarificationDeliveryReport',\n      key: 'clarificationDeliveryReport',\n      align: 'center',\n      width: 180,\n      sorter: (a, b) => orderProcess(a, b, 'clarificationDeliveryReport'),\n      render: renderDate\n    }, {\n      title: 'Aceitou a nomeação',\n      key: 'acceptAppointment',\n      dataIndex: 'acceptAppointment',\n      align: 'center',\n      width: 110,\n      render: value => value ? 'Sim' : 'Não'\n    }, {\n      title: 'Impugnação',\n      dataIndex: 'dateImpugnment',\n      key: 'dateImpugnment',\n      align: 'center',\n      width: 130,\n      sorter: (a, b) => orderProcess(a, b, 'dateImpugnment'),\n      render: renderDate\n    }, {\n      title: 'Status Impugnação',\n      dataIndex: 'statusImpeachment_description',\n      key: 'statusImpeachment',\n      align: 'center',\n      width: 180,\n      sorter: (a, b) => orderProcess(a, b, 'statusImpeachment_description')\n    }, {\n      title: 'Previsão Entrega Impugnação',\n      dataIndex: 'previsionImpugnment',\n      key: 'previsionImpugnment',\n      align: 'center',\n      width: 230,\n      sorter: (a, b) => orderProcess(a, b, 'previsionImpugnment'),\n      render: renderDate\n    }, {\n      title: 'Entrega Impugnação',\n      dataIndex: 'deliveryImpugnment',\n      key: 'deliveryImpugnment',\n      align: 'center',\n      width: 180,\n      sorter: (a, b) => orderProcess(a, b, 'deliveryImpugnment'),\n      render: renderDate\n    }, {\n      title: 'Limite Esc. Impugnação',\n      dataIndex: 'clarificationImpugnment',\n      key: 'clarificationImpugnment',\n      align: 'center',\n      width: 210,\n      sorter: (a, b) => orderProcess(a, b, 'clarificationImpugnment'),\n      render: renderDate\n    }, {\n      title: 'Entrega Esc. Impugnação',\n      dataIndex: 'clarificationDeliveryImpugnment',\n      key: 'clarificationDeliveryImpugnment',\n      align: 'center',\n      width: 210,\n      sorter: (a, b) => orderProcess(a, b, 'clarificationDeliveryImpugnment'),\n      render: renderDate\n    }, {\n      title: 'Ações',\n      key: 'actions',\n      align: 'center',\n      width: 180,\n      fixed: 'right',\n      render: process => /*#__PURE__*/React.createElement(ActionButtons, {\n        process: process,\n        handleDelete: handleDelete,\n        handleEdit: handleEdit,\n        updateProcessFavorite: updateProcessFavorite,\n        updateProcessPushStatus: updateProcessPushStatus,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 9\n        }\n      })\n    }];\n\n    if (plan_modules === null || plan_modules === void 0 ? void 0 : plan_modules.Multicompany) {\n      const company_column = {\n        title: 'Empresa',\n        dataIndex: 'multicompany_description',\n        ellipsis: true,\n        width: 220,\n        key: 'multicompany_description',\n        sorter: (a, b) => orderProcess(a, b, 'multicompany_description')\n      };\n      columns.splice(2, 0, company_column);\n    } // @ts-ignore\n\n\n    return columns.filter(column => {\n      var _visible_columns$colu;\n\n      return column.key === 'actions' ? true : visible_columns === null || visible_columns === void 0 ? void 0 : (_visible_columns$colu = visible_columns.columns[column.key]) === null || _visible_columns$colu === void 0 ? void 0 : _visible_columns$colu.visible;\n    });\n  }, [handleDelete, handleEdit, orderProcess, plan_modules, renderDate, updateProcessFavorite, updateProcessPushStatus, visible_columns]);\n};\n\n__signature__(useColumns, \"useUserSelector{plan_modules}\\nuseCallback{orderProcess}\\nuseCallback{renderDate}\\nuseMemo{}\", () => [useUserSelector]);\n\nconst _default = useColumns;\nexport default _default;\n\nconst renderPeople = data => data === null || data === void 0 ? void 0 : data.map(people => /*#__PURE__*/React.createElement(\"div\", {\n  key: people._id,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 335,\n    columnNumber: 5\n  }\n}, people.kindPeople.kindPeople_description, \" - \", people.people.people_name));\n\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(IMPORTED_KEYS, \"IMPORTED_KEYS\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Process/useColumns.tsx\");\n  reactHotLoader.register(MOMENT_FORMAT, \"MOMENT_FORMAT\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Process/useColumns.tsx\");\n  reactHotLoader.register(DEFAULT_FORMAT, \"DEFAULT_FORMAT\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Process/useColumns.tsx\");\n  reactHotLoader.register(useColumns, \"useColumns\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Process/useColumns.tsx\");\n  reactHotLoader.register(renderPeople, \"renderPeople\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Process/useColumns.tsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Process/useColumns.tsx\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Process/useColumns.tsx"],"names":["React","useCallback","useMemo","currencyFormatter","useUserSelector","Tag","ActionButtons","moment","IMPORTED_KEYS","not_imported","importing","imported","error_importing","MOMENT_FORMAT","DEFAULT_FORMAT","useColumns","props","handleDelete","handleEdit","updateProcessPushStatus","visible_columns","updateProcessFavorite","plan_modules","state","company","plan","modules","orderProcess","a","b","key","value_a","value_b","renderDate","date","format","columns","title","dataIndex","width","align","defaultSortOrder","sorter","render","ellipsis","renderPeople","_","record","statusImport_key","statusImport_description","value","processValue","cents","data","honoraryValue","fixed","process","Multicompany","company_column","splice","filter","column","visible","map","people","_id","kindPeople","kindPeople_description","people_name"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo } from 'react'\nimport { ProcessType, VisibleColumnType, GenericType } from './types'\nimport { currencyFormatter } from 'Utils/formatters'\nimport { useUserSelector } from 'Redux/UserReducer'\nimport { ColumnsType } from 'antd/es/table'\nimport { Tag } from 'antd'\nimport ActionButtons from './ActionButtons'\nimport moment from 'moment'\n\ntype UseColumnsProps = {\n  handleDelete: (id: string) => void,\n  handleEdit: (id: string) => void,\n  updateProcessPushStatus: (process_id: string, status: boolean) => void,\n  updateProcessFavorite: (process_id: string, value: boolean) => void,\n  visible_columns?: VisibleColumnType,\n}\n\nexport const IMPORTED_KEYS = {\n  not_imported: '#5A6978',\n  importing: '#FFD541',\n  imported: '#3CA49E',\n  error_importing: '#F00C0C'\n}\n\nconst MOMENT_FORMAT = 'YYYY/MM/DD'\nconst DEFAULT_FORMAT = 'DD/MM/YYYY'\n\nconst useColumns = (props: UseColumnsProps) => {\n  const { handleDelete, handleEdit, updateProcessPushStatus, visible_columns, updateProcessFavorite } = props\n  const plan_modules = useUserSelector(state => state.company?.plan.modules)\n\n  const orderProcess = useCallback((a: ProcessType, b: ProcessType, key: keyof ProcessType) => {\n    const value_a = a[key]\n    const value_b = b[key]\n\n    if (!value_a) return 1\n    if (!value_b) return -1\n    if (value_a < value_b) return -1\n    if (value_a > value_b) return 1\n\n    return 0\n  }, [])\n\n  const renderDate = useCallback((date: any) => date ? moment(date, MOMENT_FORMAT).format(DEFAULT_FORMAT) : null, [])\n\n  return useMemo(() => {\n    const columns: ColumnsType<ProcessType> = [{\n      title: 'Data de Criação',\n      dataIndex: 'createAt',\n      key: 'createAt',\n      width: 140,\n      align: 'center',\n      defaultSortOrder: 'descend',\n      sorter: (a, b) => orderProcess(a, b, 'createAt'),\n      render: renderDate\n    }, {\n      title: 'Última atualização',\n      dataIndex: 'updateAt',\n      key: 'updateAt',\n      width: 160,\n      align: 'center',\n      sorter: (a, b) => orderProcess(a, b, 'updateAt'),\n      render: renderDate\n    }, {\n      title: 'Número do Processo',\n      dataIndex: 'processNumber',\n      ellipsis: true,\n      key: 'processNumber',\n      width: 170,\n      sorter: (a, b) => orderProcess(a, b, 'processNumber')\n    }, {\n      title: 'Pessoas',\n      key: 'peoples',\n      dataIndex: 'peoples',\n      ellipsis: true,\n      width: 220,\n      render: renderPeople\n    }, {\n      title: 'Polo Ativo',\n      key: 'activePole',\n      dataIndex: 'activePole',\n      ellipsis: true,\n      width: 220,\n      render: renderPeople\n    }, {\n      title: 'Polo Passivo',\n      key: 'passivePole',\n      dataIndex: 'passivePole',\n      ellipsis: true,\n      width: 220,\n      render: renderPeople\n    }, {\n      title: 'Código Interno',\n      key: 'internalCode',\n      dataIndex: 'internalCode',\n      ellipsis: true,\n      width: 170,\n      sorter: (a, b) => orderProcess(a, b, 'internalCode')\n    }, {\n      title: 'Status Importação',\n      dataIndex: 'statusImport_description',\n      ellipsis: true,\n      key: 'statusImport_description',\n      align: 'center',\n      width: 140,\n      sorter: (a, b) => orderProcess(a, b, 'statusImport_description'),\n      render: (_, record) => {\n        if (!record.statusImport_key) return null\n\n        return (\n          <Tag color={IMPORTED_KEYS[record.statusImport_key]}>\n            {record.statusImport_description}\n          </Tag>\n        )\n      }\n    }, {\n      title: 'Data nomeação',\n      dataIndex: 'appointmentDate',\n      key: 'appointmentDate',\n      width: 150,\n      align: 'center',\n      sorter: (a, b) => orderProcess(a, b, 'appointmentDate'),\n      render: renderDate\n    }, {\n      title: 'Comarca',\n      key: 'judicialDistrict_description',\n      dataIndex: 'judicialDistrict_description',\n      width: 220,\n      ellipsis: true,\n      sorter: (a, b) => orderProcess(a, b, 'judicialDistrict_description')\n    }, {\n      title: 'Vara',\n      key: 'judicialDistrictLevel_description',\n      dataIndex: 'judicialDistrictLevel_description',\n      width: 220,\n      ellipsis: true,\n      sorter: (a, b) => orderProcess(a, b, 'judicialDistrictLevel_description')\n    }, {\n      title: 'Situação do Processo',\n      dataIndex: 'situation_description',\n      ellipsis: true,\n      width: 220,\n      key: 'situation_description',\n      sorter: (a, b) => orderProcess(a, b, 'situation_description')\n    }, {\n      title: 'Situação Financeira do Processo',\n      dataIndex: 'financialSituation_description',\n      ellipsis: true,\n      width: 240,\n      key: 'financialSituation_description',\n      sorter: (a, b) => orderProcess(a, b, 'financialSituation_description')\n    }, {\n      title: 'Natureza',\n      key: 'nature_description',\n      dataIndex: 'nature_description',\n      width: 220,\n      ellipsis: true,\n      sorter: (a, b) => orderProcess(a, b, 'nature_description')\n    }, {\n      title: 'Ação/Objeto Perícia',\n      key: 'objetcExpert_description',\n      dataIndex: 'objetcExpert_description',\n      width: 220,\n      ellipsis: true,\n      sorter: (a, b) => orderProcess(a, b, 'objetcExpert_description')\n    }, {\n      title: 'Valor Processo',\n      key: 'processValue',\n      dataIndex: 'processValue',\n      width: 160,\n      sorter: (a, b) => orderProcess(a, b, 'processValue'),\n      render: (_, value) => currencyFormatter(value.processValue, { cents: true })\n    }, {\n      title: 'Honorário Apresentado',\n      key: 'honoraryValue',\n      dataIndex: 'c',\n      width: 180,\n      sorter: (a, b) => orderProcess(a, b, 'honoraryValue'),\n      render: (_, data) => currencyFormatter(data.honoraryValue, { cents: true })\n    }, {\n      title: 'Honorário Arbitrario',\n      key: 'arbitraryValue',\n      dataIndex: 'arbitraryValue',\n      width: 160,\n      sorter: (a, b) => orderProcess(a, b, 'arbitraryValue'),\n      render: (value) => currencyFormatter(value, { cents: true })\n    }, {\n      title: 'Perito ou Asistente',\n      key: 'expertName',\n      dataIndex: 'expertName',\n      width: 220,\n      ellipsis: true,\n      sorter: (a, b) => orderProcess(a, b, 'expertName')\n    }, {\n      title: 'Data Perícia',\n      dataIndex: 'expertiseDate',\n      key: 'expertiseDate',\n      width: 150,\n      align: 'center',\n      sorter: (a, b) => orderProcess(a, b, 'expertiseDate'),\n      render: renderDate\n    }, {\n      title: 'Previsão Entrega Laudo',\n      dataIndex: 'previsionReport',\n      key: 'previsionReport',\n      align: 'center',\n      width: 200,\n      sorter: (a, b) => orderProcess(a, b, 'previsionReport'),\n      render: renderDate\n    }, {\n      title: 'Entrega Laudo',\n      dataIndex: 'deliveryReport',\n      key: 'deliveryReport',\n      align: 'center',\n      width: 130,\n      sorter: (a, b) => orderProcess(a, b, 'deliveryReport'),\n      render: renderDate\n    }, {\n      title: 'Limite Esc. Laudo',\n      dataIndex: 'clarificationReport',\n      key: 'clarificationReport',\n      align: 'center',\n      width: 160,\n      sorter: (a, b) => orderProcess(a, b, 'clarificationReport'),\n      render: renderDate\n    }, {\n      title: 'Entrega Esc. Laudo',\n      dataIndex: 'clarificationDeliveryReport',\n      key: 'clarificationDeliveryReport',\n      align: 'center',\n      width: 180,\n      sorter: (a, b) => orderProcess(a, b, 'clarificationDeliveryReport'),\n      render: renderDate\n    }, {\n      title: 'Aceitou a nomeação',\n      key: 'acceptAppointment',\n      dataIndex: 'acceptAppointment',\n      align: 'center',\n      width: 110,\n      render: value => value ? 'Sim' : 'Não'\n    }, {\n      title: 'Impugnação',\n      dataIndex: 'dateImpugnment',\n      key: 'dateImpugnment',\n      align: 'center',\n      width: 130,\n      sorter: (a, b) => orderProcess(a, b, 'dateImpugnment'),\n      render: renderDate\n    }, {\n      title: 'Status Impugnação',\n      dataIndex: 'statusImpeachment_description',\n      key: 'statusImpeachment',\n      align: 'center',\n      width: 180,\n      sorter: (a, b) => orderProcess(a, b, 'statusImpeachment_description')\n    }, {\n      title: 'Previsão Entrega Impugnação',\n      dataIndex: 'previsionImpugnment',\n      key: 'previsionImpugnment',\n      align: 'center',\n      width: 230,\n      sorter: (a, b) => orderProcess(a, b, 'previsionImpugnment'),\n      render: renderDate\n    }, {\n      title: 'Entrega Impugnação',\n      dataIndex: 'deliveryImpugnment',\n      key: 'deliveryImpugnment',\n      align: 'center',\n      width: 180,\n      sorter: (a, b) => orderProcess(a, b, 'deliveryImpugnment'),\n      render: renderDate\n    }, {\n      title: 'Limite Esc. Impugnação',\n      dataIndex: 'clarificationImpugnment',\n      key: 'clarificationImpugnment',\n      align: 'center',\n      width: 210,\n      sorter: (a, b) => orderProcess(a, b, 'clarificationImpugnment'),\n      render: renderDate\n    }, {\n      title: 'Entrega Esc. Impugnação',\n      dataIndex: 'clarificationDeliveryImpugnment',\n      key: 'clarificationDeliveryImpugnment',\n      align: 'center',\n      width: 210,\n      sorter: (a, b) => orderProcess(a, b, 'clarificationDeliveryImpugnment'),\n      render: renderDate\n    }, {\n      title: 'Ações',\n      key: 'actions',\n      align: 'center',\n      width: 180,\n      fixed: 'right',\n      render: (process: ProcessType) => (\n        <ActionButtons\n          process={process}\n          handleDelete={handleDelete}\n          handleEdit={handleEdit}\n          updateProcessFavorite={updateProcessFavorite}\n          updateProcessPushStatus={updateProcessPushStatus}\n        />\n      )\n    }]\n\n    if (plan_modules?.Multicompany) {\n      const company_column = {\n        title: 'Empresa',\n        dataIndex: 'multicompany_description',\n        ellipsis: true,\n        width: 220,\n        key: 'multicompany_description',\n        sorter: (a: ProcessType, b: ProcessType) => orderProcess(a, b, 'multicompany_description')\n      }\n\n      columns.splice(2, 0, company_column)\n    }\n\n    // @ts-ignore\n    return columns.filter(column => column.key === 'actions' ? true : visible_columns?.columns[column.key]?.visible)\n  }, [handleDelete,\n    handleEdit,\n    orderProcess,\n    plan_modules,\n    renderDate,\n    updateProcessFavorite,\n    updateProcessPushStatus,\n    visible_columns\n  ])\n}\n\nexport default useColumns\n\nconst renderPeople = (data?: GenericType[]) => (\n  data?.map((people: GenericType) => (\n    <div key={people._id}>{people.kindPeople.kindPeople_description} - {people.people.people_name}</div>\n  ))\n)\n"]},"metadata":{},"sourceType":"module"}