{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport { documentFormatter, phoneFormatter, renderDate } from 'Utils/formatters';\nimport { useCallback, useMemo } from 'react';\nimport { exportToXLS } from 'Utils/functions';\n\nconst useExportData = people => {\n  const columns = useMemo(() => [{\n    name: 'Nome',\n    key: 'name'\n  }, {\n    name: 'Documento',\n    key: 'document',\n    render: person => documentFormatter(person.document)\n  }, {\n    name: 'E-mail comercial',\n    key: 'businessEmail'\n  }, {\n    name: 'E-mail pessoal',\n    key: 'personalEmail'\n  }, {\n    name: 'Contato Comercial',\n    key: 'businessContact',\n    render: person => phoneFormatter(person.businessContact)\n  }, {\n    name: 'Contato Pessoal',\n    key: 'personalContact',\n    render: phone => phoneFormatter(phone.personalContact)\n  }, {\n    name: 'Aniversário',\n    key: 'birthday',\n    render: person => renderDate(person.birthday)\n  }], []);\n  const exportFile = useCallback(() => {\n    const file_name = 'pessoas';\n    exportToXLS(file_name, people, columns);\n  }, [columns, people]);\n  return exportFile;\n};\n\n__signature__(useExportData, \"useMemo{columns: ColumnType<PersonType>[]}\\nuseCallback{exportFile}\");\n\nconst _default = useExportData;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(useExportData, \"useExportData\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/People/useExportData.ts\");\n  reactHotLoader.register(_default, \"default\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/People/useExportData.ts\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/People/useExportData.ts"],"names":["documentFormatter","phoneFormatter","renderDate","useCallback","useMemo","exportToXLS","useExportData","people","columns","name","key","render","person","document","businessContact","phone","personalContact","birthday","exportFile","file_name"],"mappings":";;;;;;;;;AAAA,SAASA,iBAAT,EAA4BC,cAA5B,EAA4CC,UAA5C,QAA8D,kBAA9D;AACA,SAASC,WAAT,EAAsBC,OAAtB,QAAqC,OAArC;AACA,SAASC,WAAT,QAAwC,iBAAxC;;AAGA,MAAMC,aAAa,GAAIC,MAAD,IAA0B;AAC9C,QAAMC,OAAiC,GAAGJ,OAAO,CAAC,MAAM,CACtD;AAAEK,IAAAA,IAAI,EAAE,MAAR;AAAgBC,IAAAA,GAAG,EAAE;AAArB,GADsD,EAEtD;AAAED,IAAAA,IAAI,EAAE,WAAR;AAAqBC,IAAAA,GAAG,EAAE,UAA1B;AAAsCC,IAAAA,MAAM,EAAGC,MAAD,IAAYZ,iBAAiB,CAACY,MAAM,CAACC,QAAR;AAA3E,GAFsD,EAGtD;AAAEJ,IAAAA,IAAI,EAAE,kBAAR;AAA4BC,IAAAA,GAAG,EAAE;AAAjC,GAHsD,EAItD;AAAED,IAAAA,IAAI,EAAE,gBAAR;AAA0BC,IAAAA,GAAG,EAAE;AAA/B,GAJsD,EAKtD;AAAED,IAAAA,IAAI,EAAE,mBAAR;AAA6BC,IAAAA,GAAG,EAAE,iBAAlC;AAAqDC,IAAAA,MAAM,EAAGC,MAAD,IAAYX,cAAc,CAACW,MAAM,CAACE,eAAR;AAAvF,GALsD,EAMtD;AAAEL,IAAAA,IAAI,EAAE,iBAAR;AAA2BC,IAAAA,GAAG,EAAE,iBAAhC;AAAmDC,IAAAA,MAAM,EAAGI,KAAD,IAAWd,cAAc,CAACc,KAAK,CAACC,eAAP;AAApF,GANsD,EAOtD;AAAEP,IAAAA,IAAI,EAAE,aAAR;AAAuBC,IAAAA,GAAG,EAAE,UAA5B;AAAwCC,IAAAA,MAAM,EAAGC,MAAD,IAAYV,UAAU,CAACU,MAAM,CAACK,QAAR;AAAtE,GAPsD,CAAP,EAQ9C,EAR8C,CAAjD;AAUA,QAAMC,UAAU,GAAGf,WAAW,CAAC,MAAM;AACnC,UAAMgB,SAAS,GAAG,SAAlB;AAEAd,IAAAA,WAAW,CAAac,SAAb,EAAwBZ,MAAxB,EAAgCC,OAAhC,CAAX;AACD,GAJ6B,EAI3B,CAACA,OAAD,EAAUD,MAAV,CAJ2B,CAA9B;AAMA,SAAOW,UAAP;AACD,CAlBD;;cAAMZ,a;;iBAoBSA,a;AAAf;;;;;;;;;;0BApBMA,a","sourcesContent":["import { documentFormatter, phoneFormatter, renderDate } from 'Utils/formatters'\nimport { useCallback, useMemo } from 'react'\nimport { exportToXLS, ColumnType } from 'Utils/functions'\nimport { PersonType } from './types'\n\nconst useExportData = (people: PersonType[]) => {\n  const columns: ColumnType<PersonType>[] = useMemo(() => [\n    { name: 'Nome', key: 'name', },\n    { name: 'Documento', key: 'document', render: (person) => documentFormatter(person.document) },\n    { name: 'E-mail comercial', key: 'businessEmail' },\n    { name: 'E-mail pessoal', key: 'personalEmail' },\n    { name: 'Contato Comercial', key: 'businessContact', render: (person) => phoneFormatter(person.businessContact) },\n    { name: 'Contato Pessoal', key: 'personalContact', render: (phone) => phoneFormatter(phone.personalContact) },\n    { name: 'Aniversário', key: 'birthday', render: (person) => renderDate(person.birthday) }\n  ], [])\n\n  const exportFile = useCallback(() => {\n    const file_name = 'pessoas'\n\n    exportToXLS<PersonType>(file_name, people, columns)\n  }, [columns, people])\n\n  return exportFile\n}\n\nexport default useExportData\n"]},"metadata":{},"sourceType":"module"}