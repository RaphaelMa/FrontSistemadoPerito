{"ast":null,"code":"var _jsxFileName = \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Dashboard/Graphics/Appointments.tsx\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React from 'react';\nimport { DonutChart } from \"bizcharts\";\n\n// const COLORS = {\n//   Sim: '#40afa3',\n//   N達o: '#373543',\n// }\nconst Appointments = ({\n  data: raw_data\n}) => {\n  let total_value = 0;\n  const data = Object.entries(raw_data || {}).map(([key, value]) => {\n    total_value += value.total;\n    if (key === 'acceptAppointmentYes') return {\n      type: 'Sim',\n      value: value.total\n    };\n    return {\n      type: 'N達o',\n      value: value.total\n    };\n  });\n  const show_tooltip = total_value > 1;\n  return /*#__PURE__*/React.createElement(DonutChart, {\n    data: data || [],\n    forceFit: true,\n    radius: 0.8,\n    padding: \"auto\",\n    angleField: \"value\",\n    colorField: \"type\",\n    pieStyle: {\n      stroke: \"white\",\n      lineWidth: 0\n    },\n    statistic: {\n      visible: true,\n      totalLabel: 'Total'\n    },\n    label: {\n      visible: false\n    },\n    legend: {\n      visible: true,\n      position: 'left-center'\n    },\n    tooltip: {\n      visible: show_tooltip,\n      showTitle: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  });\n};\n\nAppointments.displayName = \"Appointments\";\nconst _default = Appointments;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Appointments, \"Appointments\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Dashboard/Graphics/Appointments.tsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Dashboard/Graphics/Appointments.tsx\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Dashboard/Graphics/Appointments.tsx"],"names":["React","DonutChart","Appointments","data","raw_data","total_value","Object","entries","map","key","value","total","type","show_tooltip","stroke","lineWidth","visible","totalLabel","position","showTitle"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,WAA3B;;AAgBA;AACA;AACA;AACA;AAEA,MAAMC,YAA6B,GAAG,CAAC;AAAEC,EAAAA,IAAI,EAAEC;AAAR,CAAD,KAAwB;AAC5D,MAAIC,WAAW,GAAG,CAAlB;AACA,QAAMF,IAAI,GAAGG,MAAM,CAACC,OAAP,CAAeH,QAAQ,IAAI,EAA3B,EAA+BI,GAA/B,CAAmC,CAAC,CAACC,GAAD,EAAMC,KAAN,CAAD,KAAkB;AAChEL,IAAAA,WAAW,IAAIK,KAAK,CAACC,KAArB;AACA,QAAIF,GAAG,KAAK,sBAAZ,EAAoC,OAAO;AAAEG,MAAAA,IAAI,EAAE,KAAR;AAAeF,MAAAA,KAAK,EAAEA,KAAK,CAACC;AAA5B,KAAP;AAEpC,WAAO;AAAEC,MAAAA,IAAI,EAAE,KAAR;AAAeF,MAAAA,KAAK,EAAEA,KAAK,CAACC;AAA5B,KAAP;AACD,GALY,CAAb;AAOA,QAAME,YAAY,GAAGR,WAAW,GAAG,CAAnC;AAEA,sBACE,oBAAC,UAAD;AACE,IAAA,IAAI,EAAEF,IAAI,IAAI,EADhB;AAEE,IAAA,QAAQ,MAFV;AAGE,IAAA,MAAM,EAAE,GAHV;AAIE,IAAA,OAAO,EAAC,MAJV;AAKE,IAAA,UAAU,EAAC,OALb;AAME,IAAA,UAAU,EAAC,MANb;AAOE,IAAA,QAAQ,EAAE;AAAEW,MAAAA,MAAM,EAAE,OAAV;AAAmBC,MAAAA,SAAS,EAAE;AAA9B,KAPZ;AAQE,IAAA,SAAS,EAAE;AAAEC,MAAAA,OAAO,EAAE,IAAX;AAAiBC,MAAAA,UAAU,EAAE;AAA7B,KARb;AASE,IAAA,KAAK,EAAE;AAAED,MAAAA,OAAO,EAAE;AAAX,KATT;AAUE,IAAA,MAAM,EAAE;AAAEA,MAAAA,OAAO,EAAE,IAAX;AAAiBE,MAAAA,QAAQ,EAAE;AAA3B,KAVV;AAWE,IAAA,OAAO,EAAE;AAAEF,MAAAA,OAAO,EAAEH,YAAX;AAAyBM,MAAAA,SAAS,EAAE;AAApC,KAXX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAeD,CA1BD;;AAAMjB,Y;iBA4BSA,Y;AAAf;;;;;;;;;;0BA5BMA,Y","sourcesContent":["import React from 'react'\nimport { DonutChart } from \"bizcharts\";\n\ntype AppointmentDataType = {\n  total: number,\n  percent: number\n}\n\nexport type AppointmentsType = {\n  acceptAppointmentYes: AppointmentDataType,\n  acceptAppointmentNot: AppointmentDataType\n}\n\ntype Props = {\n  data: AppointmentsType\n}\n\n// const COLORS = {\n//   Sim: '#40afa3',\n//   N達o: '#373543',\n// }\n\nconst Appointments: React.FC<Props> = ({ data: raw_data }) => {\n  let total_value = 0\n  const data = Object.entries(raw_data || {}).map(([key, value]) => {\n    total_value += value.total\n    if (key === 'acceptAppointmentYes') return { type: 'Sim', value: value.total }\n\n    return { type: 'N達o', value: value.total }\n  })\n\n  const show_tooltip = total_value > 1\n\n  return (\n    <DonutChart\n      data={data || []}\n      forceFit\n      radius={0.8}\n      padding=\"auto\"\n      angleField=\"value\"\n      colorField=\"type\"\n      pieStyle={{ stroke: \"white\", lineWidth: 0 }}\n      statistic={{ visible: true, totalLabel: 'Total' }}\n      label={{ visible: false }}\n      legend={{ visible: true, position: 'left-center' }}\n      tooltip={{ visible: show_tooltip, showTitle: false }}\n    />\n  )\n}\n\nexport default Appointments\n"]},"metadata":{},"sourceType":"module"}