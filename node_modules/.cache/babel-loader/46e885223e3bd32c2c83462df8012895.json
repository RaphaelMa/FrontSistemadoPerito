{"ast":null,"code":"var _jsxFileName = \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Inputs/DropzoneInput.tsx\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React from 'react';\nimport Dropzone from 'react-dropzone';\nimport styled, { css } from 'styled-components';\nimport { message } from 'antd';\nconst hundred_mb = 104857600;\n\nconst DropzoneInput = ({\n  onDrop,\n  maxSize = hundred_mb,\n  has_permission = true\n}) => {\n  const renderDragMessage = (is_drag_active, is_drag_reject) => {\n    if (!is_drag_active) {\n      return /*#__PURE__*/React.createElement(UploadMessage, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 14\n        }\n      }, \"Arraste arquivos aqui...\");\n    }\n\n    if (is_drag_reject) {\n      return /*#__PURE__*/React.createElement(UploadMessage, {\n        type: \"error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 14\n        }\n      }, \"Arquivo n\\xE3o suportado\");\n    }\n\n    return /*#__PURE__*/React.createElement(UploadMessage, {\n      type: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 12\n      }\n    }, \"Solte os arquivos aqui\");\n  };\n\n  const onDropReject = fileRejections => {\n    const max_size_message = `Tamanho máximo é de ${maxSize / (1024 * 1024)} MB!`;\n    const errors = fileRejections.reduce((acc, file) => {\n      if (file.errors.some(e => e.code === 'file-too-large')) {\n        return [...acc, `Arquivo ${file.file.name} é muito grande. ${max_size_message}`];\n      }\n\n      return acc;\n    }, []);\n    errors.forEach(error => message.error(error));\n  };\n\n  return /*#__PURE__*/React.createElement(Dropzone, {\n    onDropRejected: onDropReject,\n    disabled: !has_permission,\n    onDropAccepted: onDrop,\n    maxSize: maxSize,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, ({\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragReject\n  }) => /*#__PURE__*/React.createElement(DropContainer, Object.assign({}, getRootProps(), {\n    isDragActive: isDragActive,\n    isDragReject: isDragReject,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  })), renderDragMessage(isDragActive, isDragReject)));\n};\n\nDropzoneInput.displayName = \"DropzoneInput\";\nconst _default = DropzoneInput;\nexport default _default;\nconst drag_active = css([\"border-color:#78e5d5;\"]);\nconst drag_reject = css([\"border-color:#e57878;\"]);\nexport const DropContainer = styled.div.withConfig({\n  displayName: \"DropzoneInput__DropContainer\",\n  componentId: \"sc-1yir6mz-0\"\n})([\"border:1px dashed #ddd;border-radius:4px;cursor:pointer;transition:height 0.2s ease;\", \" \", \"\"], props => props.isDragActive && drag_active, props => props.isDragReject && drag_reject);\nconst messageColors = {\n  default: '#999',\n  error: '#e57878',\n  success: '#78e5d5'\n};\nexport const UploadMessage = styled.p.withConfig({\n  displayName: \"DropzoneInput__UploadMessage\",\n  componentId: \"sc-1yir6mz-1\"\n})([\"display:flex;color:\", \";justify-content:center;align-items:center;padding:15px 0;margin-bottom:0px;\"], props => messageColors[props.type || 'default']);\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(hundred_mb, \"hundred_mb\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Inputs/DropzoneInput.tsx\");\n  reactHotLoader.register(DropzoneInput, \"DropzoneInput\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Inputs/DropzoneInput.tsx\");\n  reactHotLoader.register(drag_active, \"drag_active\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Inputs/DropzoneInput.tsx\");\n  reactHotLoader.register(drag_reject, \"drag_reject\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Inputs/DropzoneInput.tsx\");\n  reactHotLoader.register(DropContainer, \"DropContainer\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Inputs/DropzoneInput.tsx\");\n  reactHotLoader.register(messageColors, \"messageColors\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Inputs/DropzoneInput.tsx\");\n  reactHotLoader.register(UploadMessage, \"UploadMessage\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Inputs/DropzoneInput.tsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Inputs/DropzoneInput.tsx\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Inputs/DropzoneInput.tsx"],"names":["React","Dropzone","styled","css","message","hundred_mb","DropzoneInput","onDrop","maxSize","has_permission","renderDragMessage","is_drag_active","is_drag_reject","onDropReject","fileRejections","max_size_message","errors","reduce","acc","file","some","e","code","name","forEach","error","getRootProps","getInputProps","isDragActive","isDragReject","drag_active","drag_reject","DropContainer","div","props","messageColors","default","success","UploadMessage","p","type"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Dropzone, { DropzoneOptions, FileRejection } from 'react-dropzone'\nimport styled, { css } from 'styled-components'\nimport { message } from 'antd'\n\ntype Props = {\n  onDrop: DropzoneOptions['onDropAccepted'],\n  maxSize?: number,\n  has_permission?: boolean,\n}\n\nconst hundred_mb = 104857600\n\nconst DropzoneInput: React.FC<Props> = ({ onDrop, maxSize = hundred_mb, has_permission = true }) => {\n  const renderDragMessage = (is_drag_active: boolean, is_drag_reject: boolean) => {\n    if (!is_drag_active) {\n      return <UploadMessage>Arraste arquivos aqui...</UploadMessage>\n    }\n\n    if (is_drag_reject) {\n      return <UploadMessage type=\"error\">Arquivo não suportado</UploadMessage>\n    }\n\n    return <UploadMessage type=\"success\">Solte os arquivos aqui</UploadMessage>\n  }\n\n  const onDropReject = (fileRejections: FileRejection[]) => {\n    const max_size_message = `Tamanho máximo é de ${maxSize / (1024 * 1024)} MB!`\n\n    const errors = fileRejections.reduce((acc: string[], file) => {\n      if (file.errors.some(e => e.code === 'file-too-large')) {\n        return [...acc, `Arquivo ${file.file.name} é muito grande. ${max_size_message}`]\n      }\n\n      return acc\n    }, [])\n\n    errors.forEach(error => message.error(error))\n  }\n\n  return (\n    <Dropzone onDropRejected={onDropReject} disabled={!has_permission} onDropAccepted={onDrop} maxSize={maxSize}>\n      {({ getRootProps, getInputProps, isDragActive, isDragReject }) => (\n        <DropContainer\n          {...getRootProps()}\n          isDragActive={isDragActive}\n          isDragReject={isDragReject}\n        >\n          <input {...getInputProps()} />\n          {renderDragMessage(isDragActive, isDragReject)}\n        </DropContainer>\n      )}\n    </Dropzone>\n  )\n}\n\nexport default DropzoneInput\n\nconst drag_active = css`\n  border-color: #78e5d5;\n`\n\nconst drag_reject = css`\n  border-color: #e57878;\n`\n\nexport const DropContainer = styled.div<{ isDragActive?: boolean, isDragReject?: boolean }>`\n  border: 1px dashed #ddd;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: height 0.2s ease;\n  ${props => props.isDragActive && drag_active}\n  ${props => props.isDragReject && drag_reject}\n`\n\nconst messageColors = {\n  default: '#999',\n  error: '#e57878',\n  success: '#78e5d5'\n}\n\nexport const UploadMessage = styled.p<{ type?: 'default' | 'error' | 'success' }>`\n  display: flex;\n  color: ${props => messageColors[props.type || 'default']};\n  justify-content: center;\n  align-items: center;\n  padding: 15px 0;\n  margin-bottom: 0px;\n`\n"]},"metadata":{},"sourceType":"module"}