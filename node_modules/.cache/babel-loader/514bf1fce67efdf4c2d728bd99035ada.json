{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { CacheProvider } from '@emotion/react';\nimport createCache from '@emotion/cache'; // prepend: true moves MUI styles to the top of the <head> so they're loaded first.\n// It allows developers to easily override MUI styles with other styling solutions, like CSS modules.\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst cache = createCache({\n  key: 'css',\n  prepend: true\n});\nexport default function StyledEngineProvider(props) {\n  const {\n    injectFirst,\n    children\n  } = props;\n  return injectFirst ? /*#__PURE__*/_jsx(CacheProvider, {\n    value: cache,\n    children: children\n  }) : children;\n}\nprocess.env.NODE_ENV !== \"production\" ? StyledEngineProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n\n  /**\n   * By default, the styles are injected last in the <head> element of the page.\n   * As a result, they gain more specificity than any other style sheet.\n   * If you want to override MUI's styles, set this prop.\n   */\n  injectFirst: PropTypes.bool\n} : void 0;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(cache, \"cache\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/node_modules/@mui/styled-engine/StyledEngineProvider/StyledEngineProvider.js\");\n  reactHotLoader.register(StyledEngineProvider, \"StyledEngineProvider\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/node_modules/@mui/styled-engine/StyledEngineProvider/StyledEngineProvider.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/node_modules/@mui/styled-engine/StyledEngineProvider/StyledEngineProvider.js"],"names":["React","PropTypes","CacheProvider","createCache","jsx","_jsx","cache","key","prepend","StyledEngineProvider","props","injectFirst","children","value","process","env","NODE_ENV","propTypes","node","bool"],"mappings":";;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,OAAOC,WAAP,MAAwB,gBAAxB,C,CAA0C;AAC1C;;AAEA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,MAAMC,KAAK,GAAGH,WAAW,CAAC;AACxBI,EAAAA,GAAG,EAAE,KADmB;AAExBC,EAAAA,OAAO,EAAE;AAFe,CAAD,CAAzB;AAIA,eAAe,SAASC,oBAAT,CAA8BC,KAA9B,EAAqC;AAClD,QAAM;AACJC,IAAAA,WADI;AAEJC,IAAAA;AAFI,MAGFF,KAHJ;AAIA,SAAOC,WAAW,GAAG,aAAaN,IAAI,CAACH,aAAD,EAAgB;AACpDW,IAAAA,KAAK,EAAEP,KAD6C;AAEpDM,IAAAA,QAAQ,EAAEA;AAF0C,GAAhB,CAApB,GAGbA,QAHL;AAID;AACDE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCP,oBAAoB,CAACQ,SAArB,GAAiC;AACvE;;;AAGAL,EAAAA,QAAQ,EAAEX,SAAS,CAACiB,IAJmD;;AAMvE;;;;;AAKAP,EAAAA,WAAW,EAAEV,SAAS,CAACkB;AAXgD,CAAzE,GAYI,KAAK,CAZT;;;;;;;;;;0BAdMb,K;0BAIkBG,oB","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { CacheProvider } from '@emotion/react';\nimport createCache from '@emotion/cache'; // prepend: true moves MUI styles to the top of the <head> so they're loaded first.\n// It allows developers to easily override MUI styles with other styling solutions, like CSS modules.\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst cache = createCache({\n  key: 'css',\n  prepend: true\n});\nexport default function StyledEngineProvider(props) {\n  const {\n    injectFirst,\n    children\n  } = props;\n  return injectFirst ? /*#__PURE__*/_jsx(CacheProvider, {\n    value: cache,\n    children: children\n  }) : children;\n}\nprocess.env.NODE_ENV !== \"production\" ? StyledEngineProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n\n  /**\n   * By default, the styles are injected last in the <head> element of the page.\n   * As a result, they gain more specificity than any other style sheet.\n   * If you want to override MUI's styles, set this prop.\n   */\n  injectFirst: PropTypes.bool\n} : void 0;"]},"metadata":{},"sourceType":"module"}