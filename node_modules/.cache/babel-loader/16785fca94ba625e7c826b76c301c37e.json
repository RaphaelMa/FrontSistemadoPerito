{"ast":null,"code":"var _jsxFileName = \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/MultiCompanies/MultiCompanies.tsx\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport ContainerList from 'Components/MainList/ContainerList';\nimport HeaderActions from 'Components/MainList/HeaderActions';\nimport useColumns from './useColumns';\nimport MultiCompaniesTable from './MultiCompaniesTable';\nimport { filterData, scapeRegex } from 'Utils/functions';\nimport messageError from 'Utils/messageError';\nimport EmptyComponent from 'Components/EmptyComponent/EmptyComponent';\nimport { useUserSelector } from 'Redux/UserReducer';\nimport useGetMultiCompany from 'Pages/MultiCompanies/useGetMultiCompany';\nimport UnitDrawer from 'Components/Drawers/Unit/Unit';\nimport useDestroyUnit from 'Pages/MultiCompanies/useDestroyUnit';\nimport { message } from 'antd';\nconst initial_filters = {\n  search: '',\n  pagination: {\n    current_page: 1,\n    page_size: 20\n  },\n  sort: {\n    field: 'description',\n    order: 'ascend'\n  }\n};\nconst columns_keys = ['description'];\n\nconst MultiCompanies = () => {\n  const permissions = useUserSelector(state => state.permissions);\n  const [filters, setFilters] = useState(initial_filters);\n  const [data, setData] = useState([]);\n  const UnitDrawerRef = useRef(null);\n  const [{\n    loading\n  }, getMultiCompany] = useGetMultiCompany();\n  const [destroyUnit, {\n    loading: destroying\n  }] = useDestroyUnit();\n\n  const loadPeople = async () => {\n    try {\n      const {\n        data\n      } = await getMultiCompany();\n      setData(data);\n    } catch (error) {\n      messageError('2012060138');\n    }\n  };\n\n  useEffect(() => {\n    loadPeople(); // eslint-disable-next-line\n  }, []);\n  const onPressEnter = useCallback(value => {\n    setFilters(old_filters => ({ ...old_filters,\n      search: scapeRegex(value)\n    }));\n  }, []);\n  const handleTableChange = useCallback((pagination, _filter, sorter) => {\n    var _sorter$column;\n\n    let internal_filters = filters;\n\n    if (sorter === null || sorter === void 0 ? void 0 : (_sorter$column = sorter.column) === null || _sorter$column === void 0 ? void 0 : _sorter$column.sorter) {\n      internal_filters = { ...internal_filters,\n        sort: {\n          order: sorter.order,\n          field: sorter.field\n        }\n      };\n    }\n\n    internal_filters = { ...internal_filters,\n      pagination: {\n        current_page: pagination.current || internal_filters.pagination.current_page,\n        page_size: pagination.pageSize || internal_filters.pagination.page_size\n      }\n    };\n    setFilters(internal_filters);\n  }, [filters]);\n\n  const handleOpenDrawer = id => {\n    var _UnitDrawerRef$curren;\n\n    (_UnitDrawerRef$curren = UnitDrawerRef.current) === null || _UnitDrawerRef$curren === void 0 ? void 0 : _UnitDrawerRef$curren.open(id);\n  };\n\n  const locale = useMemo(() => ({\n    emptyText: (permissions === null || permissions === void 0 ? void 0 : permissions.company.update) && /*#__PURE__*/React.createElement(EmptyComponent, {\n      onClick: () => handleOpenDrawer(),\n      action_text: \"Unidade\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    })\n  }), [permissions]);\n\n  const handleDelete = async id => {\n    try {\n      const {\n        data\n      } = await destroyUnit(id);\n\n      if (data.success) {\n        message.success('Unidade excluÃ­da com sucesso');\n        setData(prev => prev.filter(unit => unit._id !== id));\n      }\n    } catch (error) {\n      messageError('2012060220');\n    }\n  };\n\n  const afterSave = unit => {\n    setData(prev => {\n      const prev_unit = data.find(p => p._id === unit._id);\n\n      if (prev_unit) {\n        const people = prev.filter(p => p._id !== unit._id);\n        return [...people, unit];\n      }\n\n      return [...prev, unit];\n    });\n  };\n\n  const columns = useColumns({\n    handleDelete,\n    handleEdit: handleOpenDrawer\n  });\n  const filtered_data = useMemo(() => filterData({\n    data,\n    filters,\n    columns_keys\n  }), [filters, data]);\n  return /*#__PURE__*/React.createElement(ContainerList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(HeaderActions, {\n    onPressEnter: onPressEnter,\n    setFilters: setFilters,\n    placeholder: \"Informe o nome da unidade\",\n    button_text: \"Nova Unidade\",\n    handleNew: handleOpenDrawer,\n    has_create_permission: permissions === null || permissions === void 0 ? void 0 : permissions.company.update,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MultiCompaniesTable, {\n    columns: columns,\n    filtered_data: filtered_data,\n    filters: filters,\n    handleTableChange: handleTableChange,\n    loading: loading || destroying,\n    locale: locale,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(UnitDrawer, {\n    ref: UnitDrawerRef,\n    afterSave: afterSave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }));\n};\n\n__signature__(MultiCompanies, \"useUserSelector{permissions}\\nuseState{[filters, setFilters](initial_filters)}\\nuseState{[data, setData]([])}\\nuseRef{UnitDrawerRef}\\nuseGetMultiCompany{[{ loading }, getMultiCompany]}\\nuseDestroyUnit{[destroyUnit, { loading: destroying }]}\\nuseEffect{}\\nuseCallback{onPressEnter}\\nuseCallback{handleTableChange}\\nuseMemo{locale}\\nuseColumns{columns}\\nuseMemo{filtered_data}\", () => [useUserSelector, useGetMultiCompany, useDestroyUnit, useColumns]);\n\nMultiCompanies.displayName = \"MultiCompanies\";\nconst _default = MultiCompanies;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(initial_filters, \"initial_filters\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/MultiCompanies/MultiCompanies.tsx\");\n  reactHotLoader.register(columns_keys, \"columns_keys\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/MultiCompanies/MultiCompanies.tsx\");\n  reactHotLoader.register(MultiCompanies, \"MultiCompanies\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/MultiCompanies/MultiCompanies.tsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/MultiCompanies/MultiCompanies.tsx\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/MultiCompanies/MultiCompanies.tsx"],"names":["React","useCallback","useEffect","useMemo","useRef","useState","ContainerList","HeaderActions","useColumns","MultiCompaniesTable","filterData","scapeRegex","messageError","EmptyComponent","useUserSelector","useGetMultiCompany","UnitDrawer","useDestroyUnit","message","initial_filters","search","pagination","current_page","page_size","sort","field","order","columns_keys","MultiCompanies","permissions","state","filters","setFilters","data","setData","UnitDrawerRef","loading","getMultiCompany","destroyUnit","destroying","loadPeople","error","onPressEnter","value","old_filters","handleTableChange","_filter","sorter","internal_filters","column","current","pageSize","handleOpenDrawer","id","open","locale","emptyText","company","update","handleDelete","success","prev","filter","unit","_id","afterSave","prev_unit","find","p","people","columns","handleEdit","filtered_data"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react'\nimport ContainerList from 'Components/MainList/ContainerList'\nimport HeaderActions from 'Components/MainList/HeaderActions'\nimport useColumns from './useColumns'\nimport { MultiCompaniesType } from './types'\nimport MultiCompaniesTable from './MultiCompaniesTable'\nimport { TablePaginationConfig } from 'antd/es/table'\nimport { filterData, FiltersType, scapeRegex } from 'Utils/functions'\nimport { Key } from 'antd/lib/table/interface'\nimport messageError from 'Utils/messageError'\nimport EmptyComponent from 'Components/EmptyComponent/EmptyComponent'\nimport { useUserSelector } from 'Redux/UserReducer'\nimport useGetMultiCompany from 'Pages/MultiCompanies/useGetMultiCompany'\nimport UnitDrawer, { UnitDrawerType } from 'Components/Drawers/Unit/Unit'\nimport useDestroyUnit from 'Pages/MultiCompanies/useDestroyUnit'\nimport { message } from 'antd'\n\nconst initial_filters: FiltersType = {\n  search: '',\n  pagination: {\n    current_page: 1,\n    page_size: 20,\n  },\n  sort: {\n    field: 'description',\n    order: 'ascend',\n  },\n}\n\nconst columns_keys = ['description']\n\nconst MultiCompanies: React.FC = () => {\n  const permissions = useUserSelector(state => state.permissions)\n\n  const [filters, setFilters] = useState<FiltersType>(initial_filters)\n  const [data, setData] = useState<MultiCompaniesType[]>([])\n\n  const UnitDrawerRef = useRef<UnitDrawerType>(null)\n  const [{ loading }, getMultiCompany] = useGetMultiCompany()\n  const [destroyUnit, { loading: destroying }] = useDestroyUnit()\n\n  const loadPeople = async () => {\n    try {\n      const { data } = await getMultiCompany()\n\n      setData(data)\n    } catch (error) {\n      messageError('2012060138')\n    }\n  }\n\n  useEffect(() => {\n    loadPeople()\n    // eslint-disable-next-line\n  }, [])\n\n  const onPressEnter = useCallback((value: string) => {\n    setFilters((old_filters) => ({ ...old_filters, search: scapeRegex(value) }))\n  }, [])\n\n  const handleTableChange = useCallback((\n    pagination: TablePaginationConfig,\n    _filter: Record<string, Key[] | null>,\n    sorter: any,\n  ): void => {\n    let internal_filters: FiltersType = filters\n\n    if (sorter?.column?.sorter) {\n      internal_filters = { ...internal_filters, sort: { order: sorter.order, field: sorter.field } }\n    }\n\n    internal_filters = {\n      ...internal_filters,\n      pagination: {\n        current_page: pagination.current || internal_filters!.pagination!.current_page,\n        page_size: pagination.pageSize || internal_filters!.pagination!.page_size,\n      },\n    }\n\n    setFilters(internal_filters)\n  }, [filters])\n\n  const handleOpenDrawer = (id?: string) => {\n    UnitDrawerRef.current?.open(id)\n  }\n\n  const locale = useMemo(() => ({\n    emptyText: (\n      permissions?.company.update && (\n        <EmptyComponent\n          onClick={() => handleOpenDrawer()}\n          action_text=\"Unidade\"\n        />\n      )\n    ),\n  }), [permissions])\n\n  const handleDelete = async (id: string) => {\n    try {\n      const { data } = await destroyUnit(id)\n      if (data.success) {\n        message.success('Unidade excluÃ­da com sucesso')\n        setData((prev) => prev.filter(unit => unit._id !== id))\n      }\n    } catch (error) {\n      messageError('2012060220')\n    }\n  }\n\n  const afterSave = (unit: MultiCompaniesType) => {\n    setData(prev => {\n      const prev_unit = data.find(p => p._id === unit._id)\n\n      if (prev_unit) {\n        const people = prev.filter(p => p._id !== unit._id)\n\n        return [...people, unit]\n      }\n\n      return [...prev, unit]\n    })\n  }\n\n  const columns = useColumns({ handleDelete, handleEdit: handleOpenDrawer })\n  const filtered_data = useMemo(() => filterData({ data, filters, columns_keys }), [filters, data])\n\n  return (\n    <ContainerList>\n      <HeaderActions\n        onPressEnter={onPressEnter}\n        setFilters={setFilters}\n        placeholder=\"Informe o nome da unidade\"\n        button_text=\"Nova Unidade\"\n        handleNew={handleOpenDrawer}\n        has_create_permission={permissions?.company.update}\n      />\n\n      <MultiCompaniesTable\n        columns={columns}\n        filtered_data={filtered_data}\n        filters={filters}\n        handleTableChange={handleTableChange}\n        loading={loading || destroying}\n        locale={locale}\n      />\n\n      <UnitDrawer ref={UnitDrawerRef} afterSave={afterSave}/>\n    </ContainerList>\n  )\n}\n\nexport default MultiCompanies\n"]},"metadata":{},"sourceType":"module"}