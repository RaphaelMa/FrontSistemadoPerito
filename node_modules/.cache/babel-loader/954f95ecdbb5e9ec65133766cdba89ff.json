{"ast":null,"code":"var _jsxFileName = \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/NewProcess/ExtraCard/MovementsTab/MovementsTable.tsx\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useState, useMemo } from 'react';\nimport { Table } from 'antd';\nimport useColumns from './useColumns';\nimport styled from 'styled-components';\n\nconst MovementTable = ({\n  movements\n}) => {\n  const [expanded_rows, setExpandedRows] = useState([]);\n  const expandable = useMemo(() => {\n    const config = {\n      expandedRowKeys: expanded_rows,\n      onExpandedRowsChange: setExpandedRows,\n      rowExpandable: () => true,\n      expandedRowRender: () => null\n    };\n    return config;\n  }, [expanded_rows]);\n  const columns = useColumns({\n    expanded_rows\n  });\n  return /*#__PURE__*/React.createElement(StyledTable, {\n    size: \"middle\",\n    tableLayout: \"fixed\",\n    dataSource: movements,\n    columns: columns,\n    bordered: true,\n    rowKey: \"_id\",\n    expandable: expandable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  });\n};\n\n__signature__(MovementTable, \"useState{[expanded_rows, setExpandedRows]([])}\\nuseMemo{expandable}\\nuseColumns{columns}\", () => [useColumns]);\n\nMovementTable.displayName = \"MovementTable\";\nconst _default = MovementTable;\nexport default _default;\nconst StyledTable = styled(Table).withConfig({\n  displayName: \"MovementsTable__StyledTable\",\n  componentId: \"sc-1akawz4-0\"\n})([\".ant-table-thead{th{text-align:center;}}.ant-table-expanded-row{display:none;}\"]);\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(MovementTable, \"MovementTable\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/NewProcess/ExtraCard/MovementsTab/MovementsTable.tsx\");\n  reactHotLoader.register(StyledTable, \"StyledTable\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/NewProcess/ExtraCard/MovementsTab/MovementsTable.tsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/NewProcess/ExtraCard/MovementsTab/MovementsTable.tsx\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/NewProcess/ExtraCard/MovementsTab/MovementsTable.tsx"],"names":["React","useState","useMemo","Table","useColumns","styled","MovementTable","movements","expanded_rows","setExpandedRows","expandable","config","expandedRowKeys","onExpandedRowsChange","rowExpandable","expandedRowRender","columns","StyledTable"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,OAA1B,QAAyC,OAAzC;AACA,SAASC,KAAT,QAAsB,MAAtB;AAGA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAMA,MAAMC,aAA8B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AACxD,QAAM,CAACC,aAAD,EAAgBC,eAAhB,IAAmCR,QAAQ,CAAoB,EAApB,CAAjD;AAEA,QAAMS,UAAU,GAAGR,OAAO,CAAC,MAAM;AAC/B,UAAMS,MAAsC,GAAG;AAC7CC,MAAAA,eAAe,EAAEJ,aAD4B;AAE7CK,MAAAA,oBAAoB,EAAEJ,eAFuB;AAG7CK,MAAAA,aAAa,EAAE,MAAM,IAHwB;AAI7CC,MAAAA,iBAAiB,EAAE,MAAM;AAJoB,KAA/C;AAOA,WAAOJ,MAAP;AACD,GATyB,EASvB,CAACH,aAAD,CATuB,CAA1B;AAWA,QAAMQ,OAAO,GAAGZ,UAAU,CAAC;AAAEI,IAAAA;AAAF,GAAD,CAA1B;AAEA,sBACE,oBAAC,WAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,WAAW,EAAC,OAFd;AAGE,IAAA,UAAU,EAAED,SAHd;AAIE,IAAA,OAAO,EAAES,OAJX;AAKE,IAAA,QAAQ,MALV;AAME,IAAA,MAAM,EAAC,KANT;AAOE,IAAA,UAAU,EAAEN,UAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAWD,CA3BD;;cAAMJ,a,qGAcYF,U;;AAdZE,a;iBA6BSA,a;AAAf;AAEA,MAAMW,WAAW,GAAGZ,MAAM,CAACF,KAAD,CAAT;AAAA;AAAA;AAAA,sFAAjB;;;;;;;;;;0BA/BMG,a;0BA+BAW,W","sourcesContent":["import React, { useState, useMemo } from 'react'\nimport { Table } from 'antd'\nimport { MovementType } from './types'\nimport { ExpandableConfig } from 'antd/es/table/interface'\nimport useColumns from './useColumns'\nimport styled from 'styled-components'\n\ntype Props = {\n  movements?: MovementType[],\n}\n\nconst MovementTable: React.FC<Props> = ({ movements }) => {\n  const [expanded_rows, setExpandedRows] = useState<React.ReactText[]>([])\n\n  const expandable = useMemo(() => {\n    const config: ExpandableConfig<MovementType> = {\n      expandedRowKeys: expanded_rows,\n      onExpandedRowsChange: setExpandedRows,\n      rowExpandable: () => true,\n      expandedRowRender: () => null\n    }\n\n    return config\n  }, [expanded_rows])\n\n  const columns = useColumns({ expanded_rows })\n\n  return (\n    <StyledTable\n      size=\"middle\"\n      tableLayout=\"fixed\"\n      dataSource={movements}\n      columns={columns}\n      bordered\n      rowKey=\"_id\"\n      expandable={expandable}\n    />\n  )\n}\n\nexport default MovementTable\n\nconst StyledTable = styled(Table)`\n  .ant-table-thead {\n    th {\n      text-align: center;\n    }\n  }\n\n  .ant-table-expanded-row {\n    display: none;\n  }\n` as typeof Table\n"]},"metadata":{},"sourceType":"module"}