{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport { useCallback, useMemo } from 'react';\nimport { currencyFormatter, renderDate } from 'Utils/formatters';\nimport { exportToXLS } from 'Utils/functions';\n\nconst useExportData = items => {\n  const columns = useMemo(() => [{\n    name: 'Vencimento',\n    key: 'expirationDate',\n    render: financial => renderDate(financial.expirationDate)\n  }, {\n    name: 'Pagamento',\n    key: 'paymentDate',\n    render: financial => renderDate(financial.paymentDate)\n  }, {\n    name: 'Conta',\n    key: 'financialAccount_description'\n  }, {\n    name: 'Nº do Processo',\n    key: 'process_number'\n  }, {\n    name: 'Categoria',\n    key: 'category_description'\n  }, {\n    name: 'Movimentação',\n    key: 'movement_description'\n  }, {\n    name: 'Valor',\n    key: 'value',\n    render: financial => currencyFormatter(financial.value, {\n      cents: true\n    })\n  }, {\n    name: 'Desconto',\n    key: 'discount',\n    render: financial => currencyFormatter(financial.discount, {\n      cents: true\n    })\n  }, {\n    name: 'Total',\n    key: 'total',\n    render: financial => currencyFormatter(financial.total, {\n      cents: true\n    })\n  }], []);\n  const exportFile = useCallback(() => {\n    const file_name = 'financeiro';\n    exportToXLS(file_name, items, columns);\n  }, [columns, items]);\n  return exportFile;\n};\n\n__signature__(useExportData, \"useMemo{columns: ColumnType<FinancialType>[]}\\nuseCallback{exportFile}\");\n\nconst _default = useExportData;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(useExportData, \"useExportData\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Financial/useExportData.ts\");\n  reactHotLoader.register(_default, \"default\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Financial/useExportData.ts\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Financial/useExportData.ts"],"names":["useCallback","useMemo","currencyFormatter","renderDate","exportToXLS","useExportData","items","columns","name","key","render","financial","expirationDate","paymentDate","value","cents","discount","total","exportFile","file_name"],"mappings":";;;;;;;;;AAAA,SAASA,WAAT,EAAsBC,OAAtB,QAAqC,OAArC;AACA,SAASC,iBAAT,EAA4BC,UAA5B,QAA8C,kBAA9C;AACA,SAASC,WAAT,QAAwC,iBAAxC;;AAGA,MAAMC,aAAa,GAAIC,KAAD,IAA4B;AAChD,QAAMC,OAAoC,GAAGN,OAAO,CAAC,MAAM,CACzD;AAAEO,IAAAA,IAAI,EAAE,YAAR;AAAsBC,IAAAA,GAAG,EAAE,gBAA3B;AAA6CC,IAAAA,MAAM,EAAGC,SAAD,IAAeR,UAAU,CAACQ,SAAS,CAACC,cAAX;AAA9E,GADyD,EAEzD;AAAEJ,IAAAA,IAAI,EAAE,WAAR;AAAqBC,IAAAA,GAAG,EAAE,aAA1B;AAAyCC,IAAAA,MAAM,EAAGC,SAAD,IAAeR,UAAU,CAACQ,SAAS,CAACE,WAAX;AAA1E,GAFyD,EAGzD;AAAEL,IAAAA,IAAI,EAAE,OAAR;AAAiBC,IAAAA,GAAG,EAAE;AAAtB,GAHyD,EAIzD;AAAED,IAAAA,IAAI,EAAE,gBAAR;AAA0BC,IAAAA,GAAG,EAAE;AAA/B,GAJyD,EAKzD;AAAED,IAAAA,IAAI,EAAE,WAAR;AAAqBC,IAAAA,GAAG,EAAE;AAA1B,GALyD,EAMzD;AAAED,IAAAA,IAAI,EAAE,cAAR;AAAwBC,IAAAA,GAAG,EAAE;AAA7B,GANyD,EAOzD;AAAED,IAAAA,IAAI,EAAE,OAAR;AAAiBC,IAAAA,GAAG,EAAE,OAAtB;AAA+BC,IAAAA,MAAM,EAAGC,SAAD,IAAeT,iBAAiB,CAACS,SAAS,CAACG,KAAX,EAAkB;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAlB;AAAvE,GAPyD,EAQzD;AAAEP,IAAAA,IAAI,EAAE,UAAR;AAAoBC,IAAAA,GAAG,EAAE,UAAzB;AAAqCC,IAAAA,MAAM,EAAGC,SAAD,IAAeT,iBAAiB,CAACS,SAAS,CAACK,QAAX,EAAqB;AAAED,MAAAA,KAAK,EAAE;AAAT,KAArB;AAA7E,GARyD,EASzD;AAAEP,IAAAA,IAAI,EAAE,OAAR;AAAiBC,IAAAA,GAAG,EAAE,OAAtB;AAA+BC,IAAAA,MAAM,EAAGC,SAAD,IAAeT,iBAAiB,CAACS,SAAS,CAACM,KAAX,EAAkB;AAAEF,MAAAA,KAAK,EAAE;AAAT,KAAlB;AAAvE,GATyD,CAAP,EAUjD,EAViD,CAApD;AAYA,QAAMG,UAAU,GAAGlB,WAAW,CAAC,MAAM;AACnC,UAAMmB,SAAS,GAAG,YAAlB;AAEAf,IAAAA,WAAW,CAAgBe,SAAhB,EAA2Bb,KAA3B,EAAkCC,OAAlC,CAAX;AACD,GAJ6B,EAI3B,CAACA,OAAD,EAAUD,KAAV,CAJ2B,CAA9B;AAMA,SAAOY,UAAP;AACD,CApBD;;cAAMb,a;;iBAsBSA,a;AAAf;;;;;;;;;;0BAtBMA,a","sourcesContent":["import { useCallback, useMemo } from 'react'\nimport { currencyFormatter, renderDate } from 'Utils/formatters'\nimport { exportToXLS, ColumnType } from 'Utils/functions'\nimport { FinancialType } from './types'\n\nconst useExportData = (items: FinancialType[]) => {\n  const columns: ColumnType<FinancialType>[] = useMemo(() => [\n    { name: 'Vencimento', key: 'expirationDate', render: (financial) => renderDate(financial.expirationDate) },\n    { name: 'Pagamento', key: 'paymentDate', render: (financial) => renderDate(financial.paymentDate) },\n    { name: 'Conta', key: 'financialAccount_description' },\n    { name: 'Nº do Processo', key: 'process_number' },\n    { name: 'Categoria', key: 'category_description' },\n    { name: 'Movimentação', key: 'movement_description' },\n    { name: 'Valor', key: 'value', render: (financial) => currencyFormatter(financial.value, { cents: true }) },\n    { name: 'Desconto', key: 'discount', render: (financial) => currencyFormatter(financial.discount, { cents: true }) },\n    { name: 'Total', key: 'total', render: (financial) => currencyFormatter(financial.total, { cents: true }) }\n  ], [])\n\n  const exportFile = useCallback(() => {\n    const file_name = 'financeiro'\n\n    exportToXLS<FinancialType>(file_name, items, columns)\n  }, [columns, items])\n\n  return exportFile\n}\n\nexport default useExportData\n"]},"metadata":{},"sourceType":"module"}