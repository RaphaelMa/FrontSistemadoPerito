{"ast":null,"code":"var _jsxFileName = \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/PrivateRouter.tsx\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useEffect, memo } from 'react';\nimport { useUserSelector } from 'Redux/UserReducer';\nimport { Navigate, useLocation } from 'react-router';\nimport { Route } from 'react-router-dom';\nimport { updatesTokenExpiration } from 'Utils/user_token';\nimport errorModal from 'Utils/errorModal';\nimport PermissionsContainer from 'Components/Permissions/Container';\n\nconst PrivateRoute = ({\n  plan_module,\n  permission,\n  ...props\n}) => {\n  var _company$toHire, _company$trial, _permissions$permissi;\n\n  const location = useLocation();\n  const plan_modules = useUserSelector(state => {\n    var _state$company;\n\n    return (_state$company = state.company) === null || _state$company === void 0 ? void 0 : _state$company.plan.modules;\n  });\n  const permissions = useUserSelector(state => state.permissions);\n  const {\n    is_authenticated,\n    loading,\n    account_verified,\n    company,\n    trial_rest_days,\n    has_open_payments\n  } = useUserSelector(state => state);\n  const toHire = (_company$toHire = company === null || company === void 0 ? void 0 : company.toHire) !== null && _company$toHire !== void 0 ? _company$toHire : true;\n  const trial = (_company$trial = company === null || company === void 0 ? void 0 : company.trial) !== null && _company$trial !== void 0 ? _company$trial : true;\n  useEffect(() => {\n    if (is_authenticated) updatesTokenExpiration(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  if (!is_authenticated) return /*#__PURE__*/React.createElement(Navigate, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 33\n    }\n  });\n  if (loading || !account_verified && props.path !== '/active-account') return null;\n\n  if (!toHire && !(trial && trial_rest_days > 0) && !location.pathname.includes('/plans')) {\n    errorModal({\n      content: 'Seu período de teste já chegou ao fim! Escolha um plano e contrate nossa solução!'\n    }, 3000);\n    return /*#__PURE__*/React.createElement(Navigate, {\n      to: \"/plans\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (has_open_payments && props.path !== '/billing') return null;\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, props, {\n    element:\n    /*#__PURE__*/\n    // @ts-ignore\n    React.createElement(PermissionsContainer, {\n      has_module: plan_modules === null || plan_modules === void 0 ? void 0 : plan_modules[plan_module],\n      has_permission: permissions === null || permissions === void 0 ? void 0 : (_permissions$permissi = permissions[permission]) === null || _permissions$permissi === void 0 ? void 0 : _permissions$permissi.read,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, props.element),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }));\n};\n\n__signature__(PrivateRoute, \"useLocation{location}\\nuseUserSelector{plan_modules}\\nuseUserSelector{permissions}\\nuseUserSelector{{ is_authenticated, loading, account_verified, company, trial_rest_days, has_open_payments }}\\nuseEffect{}\", () => [useLocation, useUserSelector, useUserSelector, useUserSelector]);\n\nPrivateRoute.displayName = \"PrivateRoute\";\n\nconst _default = memo(PrivateRoute);\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(PrivateRoute, \"PrivateRoute\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/PrivateRouter.tsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/PrivateRouter.tsx\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/PrivateRouter.tsx"],"names":["React","useEffect","memo","useUserSelector","Navigate","useLocation","Route","updatesTokenExpiration","errorModal","PermissionsContainer","PrivateRoute","plan_module","permission","props","location","plan_modules","state","company","plan","modules","permissions","is_authenticated","loading","account_verified","trial_rest_days","has_open_payments","toHire","trial","path","pathname","includes","content","read","element"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,IAA3B,QAAuC,OAAvC;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,SAAqBC,QAArB,EAA+BC,WAA/B,QAAkD,cAAlD;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,sBAAT,QAAuC,kBAAvC;AAEA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,oBAAP,MAAiC,kCAAjC;;AAOA,MAAMC,YAA6B,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,UAAf;AAA2B,KAAGC;AAA9B,CAAD,KAA2C;AAAA;;AAC/E,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,YAAY,GAAGZ,eAAe,CAACa,KAAK;AAAA;;AAAA,6BAAIA,KAAK,CAACC,OAAV,mDAAI,eAAeC,IAAf,CAAoBC,OAAxB;AAAA,GAAN,CAApC;AACA,QAAMC,WAAW,GAAGjB,eAAe,CAACa,KAAK,IAAIA,KAAK,CAACI,WAAhB,CAAnC;AAEA,QAAM;AAAEC,IAAAA,gBAAF;AAAoBC,IAAAA,OAApB;AAA6BC,IAAAA,gBAA7B;AAA+CN,IAAAA,OAA/C;AAAwDO,IAAAA,eAAxD;AAAyEC,IAAAA;AAAzE,MAA+FtB,eAAe,CAACa,KAAK,IAAIA,KAAV,CAApH;AACA,QAAMU,MAAM,sBAAGT,OAAH,aAAGA,OAAH,uBAAGA,OAAO,CAAES,MAAZ,6DAAsB,IAAlC;AACA,QAAMC,KAAK,qBAAGV,OAAH,aAAGA,OAAH,uBAAGA,OAAO,CAAEU,KAAZ,2DAAqB,IAAhC;AAEA1B,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIoB,gBAAJ,EAAsBd,sBAAsB,GAD9B,CAEhB;AACC,GAHQ,EAGN,EAHM,CAAT;AAKA,MAAI,CAACc,gBAAL,EAAuB,oBAAO,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACvB,MAAIC,OAAO,IAAK,CAACC,gBAAD,IAAqBV,KAAK,CAACe,IAAN,KAAe,iBAApD,EAAwE,OAAO,IAAP;;AACxE,MAAI,CAACF,MAAD,IAAW,EAAEC,KAAK,IAAIH,eAAe,GAAG,CAA7B,CAAX,IAA8C,CAACV,QAAQ,CAACe,QAAT,CAAkBC,QAAlB,CAA2B,QAA3B,CAAnD,EAAyF;AACvFtB,IAAAA,UAAU,CAAC;AAAEuB,MAAAA,OAAO,EAAE;AAAX,KAAD,EAAmG,IAAnG,CAAV;AACA,wBAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AACD,MAAIN,iBAAiB,IAAIZ,KAAK,CAACe,IAAN,KAAe,UAAxC,EAAoD,OAAO,IAAP;AAEpD,sBACE,oBAAC,KAAD,oBACMf,KADN;AAEE,IAAA,OAAO;AAAA;AACL;AACA,wBAAC,oBAAD;AAAsB,MAAA,UAAU,EAAEE,YAAF,aAAEA,YAAF,uBAAEA,YAAY,CAAGJ,WAAH,CAA9C;AAA+D,MAAA,cAAc,EAAES,WAAF,aAAEA,WAAF,gDAAEA,WAAW,CAAGR,UAAH,CAAb,0DAAE,sBAA2BoB,IAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGnB,KAAK,CAACoB,OADT,CAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAWD,CAjCD;;cAAMvB,Y,2NACaL,W,EACIF,e,EACDA,e,EAEiFA,e;;AALjGO,Y;;iBAmCSR,IAAI,CAACQ,YAAD,C;;AAAnB;;;;;;;;;;0BAnCMA,Y","sourcesContent":["import React, { useEffect, memo } from 'react'\nimport { useUserSelector } from 'Redux/UserReducer'\nimport { RouteProps, Navigate, useLocation } from 'react-router'\nimport { Route } from 'react-router-dom'\nimport { updatesTokenExpiration } from 'Utils/user_token'\nimport { ModulesType, PermissionsType } from 'Redux/Types'\nimport errorModal from 'Utils/errorModal'\nimport PermissionsContainer from 'Components/Permissions/Container'\n\ntype Props = {\n  plan_module?: keyof ModulesType,\n  permission?: keyof PermissionsType,\n} & RouteProps\n\nconst PrivateRoute: React.FC<Props> = ({ plan_module, permission, ...props }) => {\n  const location = useLocation()\n  const plan_modules = useUserSelector(state => state.company?.plan.modules)\n  const permissions = useUserSelector(state => state.permissions)\n\n  const { is_authenticated, loading, account_verified, company, trial_rest_days, has_open_payments } = useUserSelector(state => state)\n  const toHire = company?.toHire ?? true\n  const trial = company?.trial ?? true\n\n  useEffect(() => {\n    if (is_authenticated) updatesTokenExpiration()\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  if (!is_authenticated) return <Navigate to=\"/login\"/>\n  if (loading || (!account_verified && props.path !== '/active-account')) return null\n  if (!toHire && !(trial && trial_rest_days > 0) && !location.pathname.includes('/plans')) {\n    errorModal({ content: 'Seu período de teste já chegou ao fim! Escolha um plano e contrate nossa solução!' }, 3000)\n    return <Navigate to=\"/plans\"/>\n  }\n  if (has_open_payments && props.path !== '/billing') return null\n\n  return (\n    <Route\n      {...props}\n      element={\n        // @ts-ignore\n        <PermissionsContainer has_module={plan_modules?.[plan_module]} has_permission={permissions?.[permission]?.read}>\n          {props.element}\n        </PermissionsContainer>\n      }\n    />\n  )\n}\n\nexport default memo(PrivateRoute)\n"]},"metadata":{},"sourceType":"module"}