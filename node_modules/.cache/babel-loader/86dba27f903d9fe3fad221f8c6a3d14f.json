{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\n/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(hasClass, \"hasClass\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/node_modules/dom-helpers/esm/hasClass.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/node_modules/dom-helpers/esm/hasClass.js"],"names":["hasClass","element","className","classList","contains","baseVal","indexOf"],"mappings":";;;;;;;;;AAAA;;;;;;AAMA,eAAe,SAASA,QAAT,CAAkBC,OAAlB,EAA2BC,SAA3B,EAAsC;AACnD,MAAID,OAAO,CAACE,SAAZ,EAAuB,OAAO,CAAC,CAACD,SAAF,IAAeD,OAAO,CAACE,SAAR,CAAkBC,QAAlB,CAA2BF,SAA3B,CAAtB;AACvB,SAAO,CAAC,OAAOD,OAAO,CAACC,SAAR,CAAkBG,OAAlB,IAA6BJ,OAAO,CAACC,SAA5C,IAAyD,GAA1D,EAA+DI,OAA/D,CAAuE,MAAMJ,SAAN,GAAkB,GAAzF,MAAkG,CAAC,CAA1G;AACD;;;;;;;;;;0BAHuBF,Q","sourcesContent":["/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}"]},"metadata":{},"sourceType":"module"}