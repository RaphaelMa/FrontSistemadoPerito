{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\n/**\n * Extracts event handlers from a given object.\n * A prop is considered an event handler if it is a function and its name starts with `on`.\n *\n * @param object An object to extract event handlers from.\n * @param excludeKeys An array of keys to exclude from the returned object.\n */\nexport default function extractEventHandlers(object, excludeKeys = []) {\n  if (object === undefined) {\n    return {};\n  }\n\n  const result = {};\n  Object.keys(object).filter(prop => prop.match(/^on[A-Z]/) && typeof object[prop] === 'function' && !excludeKeys.includes(prop)).forEach(prop => {\n    result[prop] = object[prop];\n  });\n  return result;\n}\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(extractEventHandlers, \"extractEventHandlers\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/node_modules/@mui/base/utils/extractEventHandlers.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/node_modules/@mui/base/utils/extractEventHandlers.js"],"names":["extractEventHandlers","object","excludeKeys","undefined","result","Object","keys","filter","prop","match","includes","forEach"],"mappings":";;;;;;;;;AAAA;;;;;;;AAOA,eAAe,SAASA,oBAAT,CAA8BC,MAA9B,EAAsCC,WAAW,GAAG,EAApD,EAAwD;AACrE,MAAID,MAAM,KAAKE,SAAf,EAA0B;AACxB,WAAO,EAAP;AACD;;AAED,QAAMC,MAAM,GAAG,EAAf;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYL,MAAZ,EAAoBM,MAApB,CAA2BC,IAAI,IAAIA,IAAI,CAACC,KAAL,CAAW,UAAX,KAA0B,OAAOR,MAAM,CAACO,IAAD,CAAb,KAAwB,UAAlD,IAAgE,CAACN,WAAW,CAACQ,QAAZ,CAAqBF,IAArB,CAApG,EAAgIG,OAAhI,CAAwIH,IAAI,IAAI;AAC9IJ,IAAAA,MAAM,CAACI,IAAD,CAAN,GAAeP,MAAM,CAACO,IAAD,CAArB;AACD,GAFD;AAGA,SAAOJ,MAAP;AACD;;;;;;;;;;0BAVuBJ,oB","sourcesContent":["/**\n * Extracts event handlers from a given object.\n * A prop is considered an event handler if it is a function and its name starts with `on`.\n *\n * @param object An object to extract event handlers from.\n * @param excludeKeys An array of keys to exclude from the returned object.\n */\nexport default function extractEventHandlers(object, excludeKeys = []) {\n  if (object === undefined) {\n    return {};\n  }\n\n  const result = {};\n  Object.keys(object).filter(prop => prop.match(/^on[A-Z]/) && typeof object[prop] === 'function' && !excludeKeys.includes(prop)).forEach(prop => {\n    result[prop] = object[prop];\n  });\n  return result;\n}"]},"metadata":{},"sourceType":"module"}