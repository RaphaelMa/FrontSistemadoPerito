{"ast":null,"code":"var _jsxFileName = \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Drawers/StatusImpugnation/StatusImpugnationDrawer.tsx\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useState, forwardRef, useImperativeHandle } from 'react';\nimport { Drawer, Form, Button, Spin, message } from 'antd';\nimport useGetStatusImpugnation from './useGetStatusImpugnation';\nimport useSaveStatus from './useSaveStatus';\nimport messageError from 'Utils/messageError';\nimport StatusForm from './StatusImpguantionForm';\nimport styled from 'styled-components';\nimport successModal from 'Utils/successModal';\n\nconst StatusImpugnationDrawer = ({\n  afterSave\n}, ref) => {\n  const [form] = Form.useForm();\n  const [visible, setVisible] = useState(false);\n  const [getStatus, {\n    loading\n  }] = useGetStatusImpugnation();\n  const [saveStatus, {\n    loading: save_loading\n  }] = useSaveStatus();\n\n  const open = id => {\n    if (id) loadStatus(id);\n    setVisible(true);\n  };\n\n  const close = () => {\n    setVisible(false);\n    form.resetFields();\n  };\n\n  useImperativeHandle(ref, () => ({\n    open,\n    close\n  }));\n\n  const loadStatus = async id => {\n    let response;\n\n    try {\n      response = await getStatus(id);\n    } catch (error) {\n      messageError('202105162008');\n      return;\n    }\n\n    form.setFieldsValue(response.data.statusImpeachment);\n  };\n\n  const save = async values => {\n    let response;\n\n    try {\n      response = await saveStatus(values);\n    } catch (error) {\n      messageError('202105162005');\n      return;\n    }\n\n    const success = response.data.success;\n    const status = response.data.statusImpeachment;\n\n    if (success) {\n      successModal({\n        content: 'Status de impugnação salvo com sucesso!'\n      });\n      afterSave({ ...values,\n        _id: status._id\n      });\n      close();\n      return;\n    }\n\n    message.error(response.data.message);\n  };\n\n  const handleSave = () => {\n    form.validateFields().then(values => save(values));\n  };\n\n  return /*#__PURE__*/React.createElement(Drawer, {\n    visible: visible,\n    onClose: close,\n    title: \"Status de Impugna\\xE7\\xE3o\",\n    width: 700,\n    footer: /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: close,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }, \"Cancelar\"), /*#__PURE__*/React.createElement(Button, {\n      loading: loading || save_loading,\n      onClick: handleSave,\n      type: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }, \"Salvar\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Spin, {\n    spinning: loading || save_loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(StatusForm, {\n    form: form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  })));\n};\n\n__signature__(StatusImpugnationDrawer, \"useForm{[form]}\\nuseState{[visible, setVisible](false)}\\nuseGetStatusImpugnation{[getStatus, { loading }]}\\nuseSaveStatus{[saveStatus, { loading: save_loading }]}\\nuseImperativeHandle{}\", () => [useGetStatusImpugnation, useSaveStatus, useImperativeHandle]);\n\nStatusImpugnationDrawer.displayName = \"StatusImpugnationDrawer\";\n\nconst _default = forwardRef(StatusImpugnationDrawer);\n\nexport default _default;\nconst Footer = styled.div.withConfig({\n  displayName: \"StatusImpugnationDrawer__Footer\",\n  componentId: \"sc-4804mh-0\"\n})([\"text-align:right;button + button{margin-left:8px;}\"]);\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(StatusImpugnationDrawer, \"StatusImpugnationDrawer\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Drawers/StatusImpugnation/StatusImpugnationDrawer.tsx\");\n  reactHotLoader.register(Footer, \"Footer\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Drawers/StatusImpugnation/StatusImpugnationDrawer.tsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Drawers/StatusImpugnation/StatusImpugnationDrawer.tsx\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Drawers/StatusImpugnation/StatusImpugnationDrawer.tsx"],"names":["React","useState","forwardRef","useImperativeHandle","Drawer","Form","Button","Spin","message","useGetStatusImpugnation","useSaveStatus","messageError","StatusForm","styled","successModal","StatusImpugnationDrawer","afterSave","ref","form","useForm","visible","setVisible","getStatus","loading","saveStatus","save_loading","open","id","loadStatus","close","resetFields","response","error","setFieldsValue","data","statusImpeachment","save","values","success","status","content","_id","handleSave","validateFields","then","Footer","div"],"mappings":"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","sourcesContent":["import React, { useState, forwardRef, useImperativeHandle } from 'react'\nimport { Drawer, Form, Button, Spin, message } from 'antd'\nimport useGetStatusImpugnation from './useGetStatusImpugnation'\nimport useSaveStatus from './useSaveStatus'\nimport { StatusImpeachment } from './types'\nimport messageError from 'Utils/messageError'\nimport StatusForm from './StatusImpguantionForm'\nimport styled from 'styled-components'\nimport successModal from 'Utils/successModal'\n\ntype OpenType = (id?: string) => void\n\nexport type StatusDrawerType = {\n  open: OpenType,\n  close: () => void,\n}\n\ntype Props = {\n  afterSave: (status: Omit<StatusImpeachment, '_id'> & { _id: string }) => void,\n}\n\nconst StatusImpugnationDrawer: React.ForwardRefRenderFunction<StatusDrawerType, Props> = ({ afterSave }, ref) => {\n  const [form] = Form.useForm()\n  const [visible, setVisible] = useState(false)\n\n  const [getStatus, { loading }] = useGetStatusImpugnation()\n  const [saveStatus, { loading: save_loading }] = useSaveStatus()\n\n  const open: OpenType = (id) => {\n    if (id) loadStatus(id)\n\n    setVisible(true)\n  }\n\n  const close = () => {\n    setVisible(false)\n    form.resetFields()\n  }\n\n  useImperativeHandle(ref, () => ({ open, close }))\n\n  const loadStatus = async (id: string) => {\n    let response\n    try {\n      response = await getStatus(id)\n\n    } catch (error) {\n      messageError('202105162008')\n      return\n    }\n\n    form.setFieldsValue(response.data.statusImpeachment)\n  }\n\n  const save = async (values: StatusImpeachment) => {\n    let response\n    try {\n      response = await saveStatus(values)\n    } catch (error) {\n      messageError('202105162005')\n      return\n    }\n\n    const success = response.data.success\n    const status = response.data.statusImpeachment\n\n    if (success) {\n      successModal({ content: 'Status de impugnação salvo com sucesso!' })\n      afterSave({ ...values, _id: status._id })\n      close()\n      return\n    }\n\n    message.error(response.data.message)\n  }\n\n  const handleSave = () => {\n    form.validateFields()\n      .then(values => save(values as StatusImpeachment))\n  }\n\n  return (\n    <Drawer\n      visible={visible}\n      onClose={close}\n      title=\"Status de Impugnação\"\n      width={700}\n      footer={\n        <Footer>\n          <Button onClick={close}>Cancelar</Button>\n\n          <Button loading={loading || save_loading} onClick={handleSave} type=\"primary\">\n            Salvar\n          </Button>\n        </Footer>\n      }\n    >\n      <Spin spinning={loading || save_loading}>\n        <StatusForm form={form}/>\n      </Spin>\n    </Drawer>\n  )\n}\n\nexport default forwardRef(StatusImpugnationDrawer)\n\nconst Footer = styled.div`\n  text-align: right;\n\n  button + button {\n    margin-left: 8px;\n  }\n`\n"]},"metadata":{},"sourceType":"module"}