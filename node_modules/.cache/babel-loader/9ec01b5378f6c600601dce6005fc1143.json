{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nfunction incr32(iv) {\n  var len = iv.length;\n  var item;\n\n  while (len--) {\n    item = iv.readUInt8(len);\n\n    if (item === 255) {\n      iv.writeUInt8(0, len);\n    } else {\n      item++;\n      iv.writeUInt8(item, len);\n      break;\n    }\n  }\n}\n\nmodule.exports = incr32;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(incr32, \"incr32\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/node_modules/browserify-aes/incr32.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/node_modules/browserify-aes/incr32.js"],"names":["incr32","iv","len","length","item","readUInt8","writeUInt8","module","exports"],"mappings":";;;;;;;;;AAAA,SAASA,MAAT,CAAiBC,EAAjB,EAAqB;AACnB,MAAIC,GAAG,GAAGD,EAAE,CAACE,MAAb;AACA,MAAIC,IAAJ;;AACA,SAAOF,GAAG,EAAV,EAAc;AACZE,IAAAA,IAAI,GAAGH,EAAE,CAACI,SAAH,CAAaH,GAAb,CAAP;;AACA,QAAIE,IAAI,KAAK,GAAb,EAAkB;AAChBH,MAAAA,EAAE,CAACK,UAAH,CAAc,CAAd,EAAiBJ,GAAjB;AACD,KAFD,MAEO;AACLE,MAAAA,IAAI;AACJH,MAAAA,EAAE,CAACK,UAAH,CAAcF,IAAd,EAAoBF,GAApB;AACA;AACD;AACF;AACF;;AACDK,MAAM,CAACC,OAAP,GAAiBR,MAAjB;;;;;;;;;;0BAdSA,M","sourcesContent":["function incr32 (iv) {\n  var len = iv.length\n  var item\n  while (len--) {\n    item = iv.readUInt8(len)\n    if (item === 255) {\n      iv.writeUInt8(0, len)\n    } else {\n      item++\n      iv.writeUInt8(item, len)\n      break\n    }\n  }\n}\nmodule.exports = incr32\n"]},"metadata":{},"sourceType":"script"}