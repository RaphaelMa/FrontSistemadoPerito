{"ast":null,"code":"var _jsxFileName = \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/MultiCompanies/MultiCompaniesTable.tsx\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { memo, useRef } from 'react';\nimport { Table } from 'antd';\nimport TableContainer from 'Components/MainList/TableContainer';\nimport styled from 'styled-components';\n\nconst MultiCompanies = ({\n  columns,\n  filtered_data,\n  loading,\n  filters,\n  handleTableChange,\n  locale\n}) => {\n  var _divRef$current;\n\n  const divRef = useRef(null);\n  const height = (((_divRef$current = divRef.current) === null || _divRef$current === void 0 ? void 0 : _divRef$current.clientHeight) || 0) - 40;\n  return /*#__PURE__*/React.createElement(TableContainer, {\n    divRef: divRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(StyledTable, {\n    style: {\n      flex: 'auto',\n      width: 0\n    },\n    className: \"header-align-center\",\n    columns: columns,\n    dataSource: filtered_data,\n    loading: loading,\n    onChange: handleTableChange,\n    rowKey: \"_id\",\n    tableLayout: \"fixed\",\n    size: \"middle\",\n    bordered: true,\n    pagination: {\n      showTotal: total => `${total} no total`,\n      showSizeChanger: true,\n      pageSize: filters.pagination.page_size,\n      total: filtered_data.length,\n      current: filters.pagination.current_page,\n      pageSizeOptions: ['10', '20', '40', '50', '100'],\n      hideOnSinglePage: true\n    },\n    locale: locale,\n    scroll: {\n      y: height\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }));\n};\n\n__signature__(MultiCompanies, \"useRef{divRef}\");\n\nMultiCompanies.displayName = \"MultiCompanies\";\n\nconst _default = memo(MultiCompanies);\n\nexport default _default;\nconst StyledTable = styled(Table).withConfig({\n  displayName: \"MultiCompaniesTable__StyledTable\",\n  componentId: \"sc-13o391l-0\"\n})([\".ant-table-container,.ant-spin-nested-loading,.ant-table,.ant-spin-container{height:calc(100% - 48px);}.ant-table-thead{th{text-align:center;}}.ant-table-body{height:100%;}\"]);\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(MultiCompanies, \"MultiCompanies\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/MultiCompanies/MultiCompaniesTable.tsx\");\n  reactHotLoader.register(StyledTable, \"StyledTable\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/MultiCompanies/MultiCompaniesTable.tsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/MultiCompanies/MultiCompaniesTable.tsx\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/MultiCompanies/MultiCompaniesTable.tsx"],"names":["React","memo","useRef","Table","TableContainer","styled","MultiCompanies","columns","filtered_data","loading","filters","handleTableChange","locale","divRef","height","current","clientHeight","flex","width","showTotal","total","showSizeChanger","pageSize","pagination","page_size","length","current_page","pageSizeOptions","hideOnSinglePage","y","StyledTable"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,MAAtB,QAAoC,OAApC;AAMA,SAASC,KAAT,QAAsB,MAAtB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAeA,MAAMC,cAA6C,GAAG,CACpD;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,aAAX;AAA0BC,EAAAA,OAA1B;AAAmCC,EAAAA,OAAnC;AAA4CC,EAAAA,iBAA5C;AAA+DC,EAAAA;AAA/D,CADoD,KAEjD;AAAA;;AACH,QAAMC,MAAM,GAAGX,MAAM,CAAiB,IAAjB,CAArB;AAEA,QAAMY,MAAM,GAAG,CAAC,oBAAAD,MAAM,CAACE,OAAP,oEAAgBC,YAAhB,KAAgC,CAAjC,IAAsC,EAArD;AAEA,sBACE,oBAAC,cAAD;AAAgB,IAAA,MAAM,EAAEH,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AACE,IAAA,KAAK,EAAE;AAAEI,MAAAA,IAAI,EAAE,MAAR;AAAgBC,MAAAA,KAAK,EAAE;AAAvB,KADT;AAEE,IAAA,SAAS,EAAC,qBAFZ;AAGE,IAAA,OAAO,EAAEX,OAHX;AAIE,IAAA,UAAU,EAAEC,aAJd;AAKE,IAAA,OAAO,EAAEC,OALX;AAME,IAAA,QAAQ,EAAEE,iBANZ;AAOE,IAAA,MAAM,EAAC,KAPT;AAQE,IAAA,WAAW,EAAC,OARd;AASE,IAAA,IAAI,EAAC,QATP;AAUE,IAAA,QAAQ,MAVV;AAWE,IAAA,UAAU,EAAE;AACVQ,MAAAA,SAAS,EAAEC,KAAK,IAAK,GAAEA,KAAM,WADnB;AAEVC,MAAAA,eAAe,EAAE,IAFP;AAGVC,MAAAA,QAAQ,EAAEZ,OAAO,CAAEa,UAAT,CAAqBC,SAHrB;AAIVJ,MAAAA,KAAK,EAAEZ,aAAa,CAACiB,MAJX;AAKVV,MAAAA,OAAO,EAAEL,OAAO,CAAEa,UAAT,CAAqBG,YALpB;AAMVC,MAAAA,eAAe,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,KAAzB,CANP;AAOVC,MAAAA,gBAAgB,EAAE;AAPR,KAXd;AAoBE,IAAA,MAAM,EAAEhB,MApBV;AAqBE,IAAA,MAAM,EAAE;AAAEiB,MAAAA,CAAC,EAAEf;AAAL,KArBV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AA2BD,CAlCD;;cAAMR,c;;AAAAA,c;;iBAoCSL,IAAI,CAACK,cAAD,C;;AAAnB;AAEA,MAAMwB,WAAW,GAAGzB,MAAM,CAACF,KAAD,CAAT;AAAA;AAAA;AAAA,oLAAjB;;;;;;;;;;0BAtCMG,c;0BAsCAwB,W","sourcesContent":["import React, { memo, useRef } from 'react'\nimport { ColumnsType, TablePaginationConfig } from 'antd/es/table'\nimport { TableLocale } from 'antd/es/table/interface'\nimport { Key } from 'antd/lib/table/interface'\nimport { FiltersType } from 'Utils/functions'\nimport { MultiCompaniesType } from './types'\nimport { Table } from 'antd'\nimport TableContainer from 'Components/MainList/TableContainer'\nimport styled from 'styled-components'\n\ntype MultiCompaniesProps = {\n  columns: ColumnsType<MultiCompaniesType>,\n  filtered_data: MultiCompaniesType[],\n  loading: boolean,\n  filters: FiltersType,\n  handleTableChange: (\n    pagination: TablePaginationConfig,\n    filter: Record<string, Key[] | null>,\n    sorter: any,\n  ) => void,\n  locale: TableLocale,\n}\n\nconst MultiCompanies: React.FC<MultiCompaniesProps> = (\n  { columns, filtered_data, loading, filters, handleTableChange, locale },\n) => {\n  const divRef = useRef<HTMLDivElement>(null)\n\n  const height = (divRef.current?.clientHeight || 0) - 40\n\n  return (\n    <TableContainer divRef={divRef}>\n      <StyledTable\n        style={{ flex: 'auto', width: 0 }}\n        className=\"header-align-center\"\n        columns={columns}\n        dataSource={filtered_data}\n        loading={loading}\n        onChange={handleTableChange}\n        rowKey=\"_id\"\n        tableLayout=\"fixed\"\n        size=\"middle\"\n        bordered\n        pagination={{\n          showTotal: total => `${total} no total`,\n          showSizeChanger: true,\n          pageSize: filters!.pagination!.page_size,\n          total: filtered_data.length,\n          current: filters!.pagination!.current_page,\n          pageSizeOptions: ['10', '20', '40', '50', '100'],\n          hideOnSinglePage: true,\n        }}\n        locale={locale}\n        scroll={{ y: height }}\n      />\n    </TableContainer>\n  )\n}\n\nexport default memo(MultiCompanies)\n\nconst StyledTable = styled(Table)`\n  .ant-table-container, .ant-spin-nested-loading, .ant-table, .ant-spin-container {\n    height: calc(100% - 48px);\n  }\n\n  .ant-table-thead {\n    th {\n      text-align: center;\n    }\n  }\n\n  .ant-table-body {\n    height: 100%;\n  }\n` as typeof Table\n"]},"metadata":{},"sourceType":"module"}