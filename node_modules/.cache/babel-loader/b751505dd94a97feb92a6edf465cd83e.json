{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport computeOffsets from \"../utils/computeOffsets.js\";\n\nfunction popperOffsets(_ref) {\n  var state = _ref.state,\n      name = _ref.name; // Offsets are the actual position the popper needs to have to be\n  // properly positioned near its reference element\n  // This is the most basic placement, and will be adjusted by\n  // the modifiers in the next step\n\n  state.modifiersData[name] = computeOffsets({\n    reference: state.rects.reference,\n    element: state.rects.popper,\n    strategy: 'absolute',\n    placement: state.placement\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\nconst _default = {\n  name: 'popperOffsets',\n  enabled: true,\n  phase: 'read',\n  fn: popperOffsets,\n  data: {}\n};\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(popperOffsets, \"popperOffsets\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/node_modules/@popperjs/core/lib/modifiers/popperOffsets.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/node_modules/@popperjs/core/lib/modifiers/popperOffsets.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/node_modules/@popperjs/core/lib/modifiers/popperOffsets.js"],"names":["computeOffsets","popperOffsets","_ref","state","name","modifiersData","reference","rects","element","popper","strategy","placement","enabled","phase","fn","data"],"mappings":";;;;;;;;;AAAA,OAAOA,cAAP,MAA2B,4BAA3B;;AAEA,SAASC,aAAT,CAAuBC,IAAvB,EAA6B;AAC3B,MAAIC,KAAK,GAAGD,IAAI,CAACC,KAAjB;AAAA,MACIC,IAAI,GAAGF,IAAI,CAACE,IADhB,CAD2B,CAG3B;AACA;AACA;AACA;;AACAD,EAAAA,KAAK,CAACE,aAAN,CAAoBD,IAApB,IAA4BJ,cAAc,CAAC;AACzCM,IAAAA,SAAS,EAAEH,KAAK,CAACI,KAAN,CAAYD,SADkB;AAEzCE,IAAAA,OAAO,EAAEL,KAAK,CAACI,KAAN,CAAYE,MAFoB;AAGzCC,IAAAA,QAAQ,EAAE,UAH+B;AAIzCC,IAAAA,SAAS,EAAER,KAAK,CAACQ;AAJwB,GAAD,CAA1C;AAMD,C,CAAC;;;iBAGa;AACbP,EAAAA,IAAI,EAAE,eADO;AAEbQ,EAAAA,OAAO,EAAE,IAFI;AAGbC,EAAAA,KAAK,EAAE,MAHM;AAIbC,EAAAA,EAAE,EAAEb,aAJS;AAKbc,EAAAA,IAAI,EAAE;AALO,C;AAAf;;;;;;;;;;0BAhBSd,a","sourcesContent":["import computeOffsets from \"../utils/computeOffsets.js\";\n\nfunction popperOffsets(_ref) {\n  var state = _ref.state,\n      name = _ref.name;\n  // Offsets are the actual position the popper needs to have to be\n  // properly positioned near its reference element\n  // This is the most basic placement, and will be adjusted by\n  // the modifiers in the next step\n  state.modifiersData[name] = computeOffsets({\n    reference: state.rects.reference,\n    element: state.rects.popper,\n    strategy: 'absolute',\n    placement: state.placement\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'popperOffsets',\n  enabled: true,\n  phase: 'read',\n  fn: popperOffsets,\n  data: {}\n};"]},"metadata":{},"sourceType":"module"}