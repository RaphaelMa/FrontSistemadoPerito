{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport useAxios from 'axios-hooks';\n\nconst useGetDeadlines = () => useAxios({\n  url: '/deadline',\n  method: 'GET'\n}, {\n  manual: false,\n  useCache: false\n});\n\n__signature__(useGetDeadlines, \"useAxios{}\", () => [useAxios]);\n\nconst _default = useGetDeadlines;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(useGetDeadlines, \"useGetDeadlines\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Deadlines/useGetDeadlines.ts\");\n  reactHotLoader.register(_default, \"default\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Deadlines/useGetDeadlines.ts\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Deadlines/useGetDeadlines.ts"],"names":["useAxios","useGetDeadlines","url","method","manual","useCache"],"mappings":";;;;;;;;;AAAA,OAAOA,QAAP,MAAqB,aAArB;;AAaA,MAAMC,eAAe,GAAG,MACtBD,QAAQ,CAAe;AAAEE,EAAAA,GAAG,EAAE,WAAP;AAAoBC,EAAAA,MAAM,EAAE;AAA5B,CAAf,EAAoD;AAAEC,EAAAA,MAAM,EAAE,KAAV;AAAiBC,EAAAA,QAAQ,EAAE;AAA3B,CAApD,CADV;;cAAMJ,e,uBACJD,Q;;iBAEaC,e;AAAf;;;;;;;;;;0BAHMA,e","sourcesContent":["import useAxios from 'axios-hooks'\nimport { IndicatorsType, DeadlineType } from './types'\n\ntype QueryPayload = {\n  indicators: IndicatorsType,\n  arrayOverDue: DeadlineType[],\n  arrayFiveDays: DeadlineType[],\n  arrayTenDays: DeadlineType[],\n  arrayFifteenDays: DeadlineType[],\n  arrayTwentyDays: DeadlineType[],\n  arrayDone: DeadlineType[],\n}\n\nconst useGetDeadlines = () => (\n  useAxios<QueryPayload>({ url: '/deadline', method: 'GET' }, { manual: false, useCache: false })\n)\nexport default useGetDeadlines\n"]},"metadata":{},"sourceType":"module"}