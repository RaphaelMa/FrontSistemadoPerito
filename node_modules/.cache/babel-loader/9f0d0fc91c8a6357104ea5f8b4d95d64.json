{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport OriginModal, { destroyFns } from './Modal';\nimport confirm, { withWarn, withInfo, withSuccess, withError, withConfirm, globalConfig } from './confirm';\n\nfunction modalWarn(props) {\n  return confirm(withWarn(props));\n}\n\nvar Modal = OriginModal;\n\nModal.info = function infoFn(props) {\n  return confirm(withInfo(props));\n};\n\nModal.success = function successFn(props) {\n  return confirm(withSuccess(props));\n};\n\nModal.error = function errorFn(props) {\n  return confirm(withError(props));\n};\n\nModal.warning = modalWarn;\nModal.warn = modalWarn;\n\nModal.confirm = function confirmFn(props) {\n  return confirm(withConfirm(props));\n};\n\nModal.destroyAll = function destroyAllFn() {\n  while (destroyFns.length) {\n    var close = destroyFns.pop();\n\n    if (close) {\n      close();\n    }\n  }\n};\n\nModal.config = globalConfig;\nconst _default = Modal;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(modalWarn, \"modalWarn\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/node_modules/antd/es/modal/index.js\");\n  reactHotLoader.register(Modal, \"Modal\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/node_modules/antd/es/modal/index.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/node_modules/antd/es/modal/index.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/node_modules/antd/es/modal/index.js"],"names":["OriginModal","destroyFns","confirm","withWarn","withInfo","withSuccess","withError","withConfirm","globalConfig","modalWarn","props","Modal","info","infoFn","success","successFn","error","errorFn","warning","warn","confirmFn","destroyAll","destroyAllFn","length","close","pop","config"],"mappings":";;;;;;;;;AAAA,OAAOA,WAAP,IAAsBC,UAAtB,QAAwC,SAAxC;AACA,OAAOC,OAAP,IAAkBC,QAAlB,EAA4BC,QAA5B,EAAsCC,WAAtC,EAAmDC,SAAnD,EAA8DC,WAA9D,EAA2EC,YAA3E,QAA+F,WAA/F;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,SAAOR,OAAO,CAACC,QAAQ,CAACO,KAAD,CAAT,CAAd;AACD;;AAED,IAAIC,KAAK,GAAGX,WAAZ;;AAEAW,KAAK,CAACC,IAAN,GAAa,SAASC,MAAT,CAAgBH,KAAhB,EAAuB;AAClC,SAAOR,OAAO,CAACE,QAAQ,CAACM,KAAD,CAAT,CAAd;AACD,CAFD;;AAIAC,KAAK,CAACG,OAAN,GAAgB,SAASC,SAAT,CAAmBL,KAAnB,EAA0B;AACxC,SAAOR,OAAO,CAACG,WAAW,CAACK,KAAD,CAAZ,CAAd;AACD,CAFD;;AAIAC,KAAK,CAACK,KAAN,GAAc,SAASC,OAAT,CAAiBP,KAAjB,EAAwB;AACpC,SAAOR,OAAO,CAACI,SAAS,CAACI,KAAD,CAAV,CAAd;AACD,CAFD;;AAIAC,KAAK,CAACO,OAAN,GAAgBT,SAAhB;AACAE,KAAK,CAACQ,IAAN,GAAaV,SAAb;;AAEAE,KAAK,CAACT,OAAN,GAAgB,SAASkB,SAAT,CAAmBV,KAAnB,EAA0B;AACxC,SAAOR,OAAO,CAACK,WAAW,CAACG,KAAD,CAAZ,CAAd;AACD,CAFD;;AAIAC,KAAK,CAACU,UAAN,GAAmB,SAASC,YAAT,GAAwB;AACzC,SAAOrB,UAAU,CAACsB,MAAlB,EAA0B;AACxB,QAAIC,KAAK,GAAGvB,UAAU,CAACwB,GAAX,EAAZ;;AAEA,QAAID,KAAJ,EAAW;AACTA,MAAAA,KAAK;AACN;AACF;AACF,CARD;;AAUAb,KAAK,CAACe,MAAN,GAAelB,YAAf;iBACeG,K;AAAf;;;;;;;;;;0BApCSF,S;0BAILE,K","sourcesContent":["import OriginModal, { destroyFns } from './Modal';\nimport confirm, { withWarn, withInfo, withSuccess, withError, withConfirm, globalConfig } from './confirm';\n\nfunction modalWarn(props) {\n  return confirm(withWarn(props));\n}\n\nvar Modal = OriginModal;\n\nModal.info = function infoFn(props) {\n  return confirm(withInfo(props));\n};\n\nModal.success = function successFn(props) {\n  return confirm(withSuccess(props));\n};\n\nModal.error = function errorFn(props) {\n  return confirm(withError(props));\n};\n\nModal.warning = modalWarn;\nModal.warn = modalWarn;\n\nModal.confirm = function confirmFn(props) {\n  return confirm(withConfirm(props));\n};\n\nModal.destroyAll = function destroyAllFn() {\n  while (destroyFns.length) {\n    var close = destroyFns.pop();\n\n    if (close) {\n      close();\n    }\n  }\n};\n\nModal.config = globalConfig;\nexport default Modal;"]},"metadata":{},"sourceType":"module"}