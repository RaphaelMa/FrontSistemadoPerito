{"ast":null,"code":"var _jsxFileName = \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Drawers/AnnotationDrawer/AnnotationDrawer.tsx\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useState, forwardRef, useImperativeHandle } from 'react';\nimport { Drawer, Button, Input } from 'antd';\nimport styled from 'styled-components';\nimport moment from 'moment';\n\nconst ProcessNature = ({\n  save\n}, ref) => {\n  const [annotation, setAnnotation] = useState();\n  const [visible, setVisible] = useState(false);\n\n  const open = old_annotation => {\n    if (old_annotation) setAnnotation(old_annotation);\n    setVisible(true);\n  };\n\n  const close = () => {\n    setVisible(false);\n    setTimeout(() => setAnnotation(undefined), 300);\n  };\n\n  useImperativeHandle(ref, () => ({\n    open,\n    close\n  }));\n\n  const handleChangeAnnotation = event => {\n    const value = event.target.value;\n    setAnnotation(prev => {\n      if (prev) return { ...prev,\n        description: value\n      };\n      return {\n        annotationDate: moment().subtract(3, 'hours').toString(),\n        key: Date.now(),\n        description: value\n      };\n    });\n  };\n\n  const handleSave = () => {\n    if (annotation) save(annotation);\n    close();\n  };\n\n  return /*#__PURE__*/React.createElement(Drawer, {\n    visible: visible,\n    onClose: close,\n    title: \"Anota\\xE7\\xE3o\",\n    width: 700,\n    footer: /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: close,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, \"Cancelar\"), /*#__PURE__*/React.createElement(Button, {\n      disabled: !(annotation === null || annotation === void 0 ? void 0 : annotation.description),\n      onClick: handleSave,\n      type: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, \"Salvar\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Input.TextArea, {\n    autoSize: {\n      minRows: 2\n    },\n    value: annotation === null || annotation === void 0 ? void 0 : annotation.description,\n    onChange: handleChangeAnnotation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }));\n};\n\n__signature__(ProcessNature, \"useState{[annotation, setAnnotation]}\\nuseState{[visible, setVisible](false)}\\nuseImperativeHandle{}\", () => [useImperativeHandle]);\n\nProcessNature.displayName = \"ProcessNature\";\n\nconst _default = forwardRef(ProcessNature);\n\nexport default _default;\nconst Footer = styled.div.withConfig({\n  displayName: \"AnnotationDrawer__Footer\",\n  componentId: \"sc-4kzvge-0\"\n})([\"text-align:right;button + button{margin-left:8px;}\"]);\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(ProcessNature, \"ProcessNature\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Drawers/AnnotationDrawer/AnnotationDrawer.tsx\");\n  reactHotLoader.register(Footer, \"Footer\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Drawers/AnnotationDrawer/AnnotationDrawer.tsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Drawers/AnnotationDrawer/AnnotationDrawer.tsx\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Drawers/AnnotationDrawer/AnnotationDrawer.tsx"],"names":["React","useState","forwardRef","useImperativeHandle","Drawer","Button","Input","styled","moment","ProcessNature","save","ref","annotation","setAnnotation","visible","setVisible","open","old_annotation","close","setTimeout","undefined","handleChangeAnnotation","event","value","target","prev","description","annotationDate","subtract","toString","key","Date","now","handleSave","minRows","Footer","div"],"mappings":"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","sourcesContent":["import React, { useState, forwardRef, useImperativeHandle } from 'react'\nimport { Drawer, Button, Input } from 'antd'\nimport styled from 'styled-components'\nimport moment from 'moment'\n\ntype AnnotatioType = {\n  key: React.Key,\n  annotationDate: string,\n  description: string\n}\n\ntype OpenType = (annotation?: AnnotatioType) => void\n\nexport type AnnotationDrawerRefType = {\n  open: OpenType,\n  close: () => void,\n}\n\ntype Props = {\n  save: (annotation: AnnotatioType) => void,\n}\n\nconst ProcessNature: React.ForwardRefRenderFunction<AnnotationDrawerRefType, Props> = ({ save }, ref) => {\n  const [annotation, setAnnotation] = useState<AnnotatioType>()\n  const [visible, setVisible] = useState(false)\n\n  const open: OpenType = (old_annotation) => {\n    if (old_annotation) setAnnotation(old_annotation)\n    setVisible(true)\n  }\n\n  const close = () => {\n    setVisible(false)\n    setTimeout(() => setAnnotation(undefined), 300)\n  }\n\n  useImperativeHandle(ref, () => ({ open, close }))\n\n  const handleChangeAnnotation = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    const value = event.target.value\n\n    setAnnotation((prev) => {\n      if (prev) return { ...prev, description: value }\n\n      return { annotationDate: moment().subtract(3, 'hours').toString(), key: Date.now(), description: value }\n    })\n  }\n\n  const handleSave = () => {\n    if (annotation) save(annotation)\n    close()\n  }\n\n  return (\n    <Drawer\n      visible={visible}\n      onClose={close}\n      title=\"Anotação\"\n      width={700}\n      footer={\n        <Footer>\n          <Button onClick={close}>Cancelar</Button>\n          <Button disabled={!annotation?.description} onClick={handleSave} type=\"primary\">Salvar</Button>\n        </Footer>\n      }\n    >\n      <Input.TextArea autoSize={{ minRows: 2 }} value={annotation?.description} onChange={handleChangeAnnotation}/>\n    </Drawer>\n  )\n}\n\nexport default forwardRef(ProcessNature)\n\nconst Footer = styled.div`\n  text-align: right;\n\n  button + button {\n    margin-left: 8px;\n  }\n`\n"]},"metadata":{},"sourceType":"module"}