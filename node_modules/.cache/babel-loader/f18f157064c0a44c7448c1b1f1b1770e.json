{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport useAxios from 'axios-hooks';\nimport { removeFalsyValues } from 'Utils/functions';\n\nconst useSaveCompany = () => {\n  const [{\n    loading\n  }, execute] = useAxios({\n    url: '/company',\n    method: 'PUT'\n  }, {\n    manual: true\n  });\n\n  const mutation = raw_data => {\n    const data = removeFalsyValues(raw_data);\n    if (data._id) return execute({\n      data\n    });\n    return execute({\n      data\n    });\n  };\n\n  return [mutation, {\n    loading\n  }];\n};\n\n__signature__(useSaveCompany, \"useAxios{[{ loading }, execute]}\", () => [useAxios]);\n\nconst _default = useSaveCompany;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(useSaveCompany, \"useSaveCompany\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Company/useSaveCompany.ts\");\n  reactHotLoader.register(_default, \"default\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Company/useSaveCompany.ts\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Company/useSaveCompany.ts"],"names":["useAxios","removeFalsyValues","useSaveCompany","loading","execute","url","method","manual","mutation","raw_data","data","_id"],"mappings":";;;;;;;;;AAAA,OAAOA,QAAP,MAAqB,aAArB;AAEA,SAASC,iBAAT,QAAkC,iBAAlC;;AAyBA,MAAMC,cAAkC,GAAG,MAAM;AAC/C,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAcC,OAAd,IAAyBJ,QAAQ,CAAe;AAAEK,IAAAA,GAAG,EAAE,UAAP;AAAmBC,IAAAA,MAAM,EAAE;AAA3B,GAAf,EAAkD;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAlD,CAAvC;;AAEA,QAAMC,QAAQ,GAAKC,QAAD,IAA2B;AAC3C,UAAMC,IAAI,GAAGT,iBAAiB,CAACQ,QAAD,CAA9B;AAEA,QAAIC,IAAI,CAACC,GAAT,EAAc,OAAOP,OAAO,CAAC;AAAEM,MAAAA;AAAF,KAAD,CAAd;AAEd,WAAON,OAAO,CAAC;AAAEM,MAAAA;AAAF,KAAD,CAAd;AACD,GAND;;AAQA,SAAO,CAACF,QAAD,EAAW;AAAEL,IAAAA;AAAF,GAAX,CAAP;AACD,CAZD;;cAAMD,c,6CAC2BF,Q;;iBAalBE,c;AAAf;;;;;;;;;;0BAdMA,c","sourcesContent":["import useAxios from 'axios-hooks'\nimport { AxiosPromise } from 'axios'\nimport { removeFalsyValues } from 'Utils/functions'\nimport { CompanyType } from 'Redux/Types'\n\ntype QueryPayload = {\n  success: boolean,\n  message?: string,\n  company: CompanyType\n}\n\nexport type CompanyForm = {\n\tname: string,\n\temail: string,\n\tcellPhone: number,\n\tdocument: number,\n\tactive: boolean,\n\tkindCompany_id: string,\n}\n\ntype ReturnType = [\n  (data: CompanyForm) => AxiosPromise<QueryPayload>,\n  { loading: boolean }\n]\n\ntype useSaveCompanyType = () => ReturnType\n\nconst useSaveCompany: useSaveCompanyType = () => {\n  const [{ loading }, execute] = useAxios<QueryPayload>({ url: '/company', method: 'PUT'}, { manual: true })\n\n  const mutation =  (raw_data: CompanyForm) => {\n    const data = removeFalsyValues(raw_data)\n\n    if (data._id) return execute({ data })\n\n    return execute({ data })\n  }\n\n  return [mutation, { loading }]\n}\n\nexport default useSaveCompany\n"]},"metadata":{},"sourceType":"module"}