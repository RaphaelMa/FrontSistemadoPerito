{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nvar createHash = require('create-hash');\n\nvar Buffer = require('safe-buffer').Buffer;\n\nmodule.exports = function (seed, len) {\n  var t = Buffer.alloc(0);\n  var i = 0;\n  var c;\n\n  while (t.length < len) {\n    c = i2ops(i++);\n    t = Buffer.concat([t, createHash('sha1').update(seed).update(c).digest()]);\n  }\n\n  return t.slice(0, len);\n};\n\nfunction i2ops(c) {\n  var out = Buffer.allocUnsafe(4);\n  out.writeUInt32BE(c, 0);\n  return out;\n}\n\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Buffer, \"Buffer\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/node_modules/public-encrypt/mgf.js\");\n  reactHotLoader.register(i2ops, \"i2ops\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/node_modules/public-encrypt/mgf.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/node_modules/public-encrypt/mgf.js"],"names":["createHash","require","Buffer","module","exports","seed","len","t","alloc","i","c","length","i2ops","concat","update","digest","slice","out","allocUnsafe","writeUInt32BE"],"mappings":";;;;;;;;;AAAA,IAAIA,UAAU,GAAGC,OAAO,CAAC,aAAD,CAAxB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,aAAD,CAAP,CAAuBC,MAApC;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,IAAV,EAAgBC,GAAhB,EAAqB;AACpC,MAAIC,CAAC,GAAGL,MAAM,CAACM,KAAP,CAAa,CAAb,CAAR;AACA,MAAIC,CAAC,GAAG,CAAR;AACA,MAAIC,CAAJ;;AACA,SAAOH,CAAC,CAACI,MAAF,GAAWL,GAAlB,EAAuB;AACrBI,IAAAA,CAAC,GAAGE,KAAK,CAACH,CAAC,EAAF,CAAT;AACAF,IAAAA,CAAC,GAAGL,MAAM,CAACW,MAAP,CAAc,CAACN,CAAD,EAAIP,UAAU,CAAC,MAAD,CAAV,CAAmBc,MAAnB,CAA0BT,IAA1B,EAAgCS,MAAhC,CAAuCJ,CAAvC,EAA0CK,MAA1C,EAAJ,CAAd,CAAJ;AACD;;AACD,SAAOR,CAAC,CAACS,KAAF,CAAQ,CAAR,EAAWV,GAAX,CAAP;AACD,CATD;;AAWA,SAASM,KAAT,CAAgBF,CAAhB,EAAmB;AACjB,MAAIO,GAAG,GAAGf,MAAM,CAACgB,WAAP,CAAmB,CAAnB,CAAV;AACAD,EAAAA,GAAG,CAACE,aAAJ,CAAkBT,CAAlB,EAAqB,CAArB;AACA,SAAOO,GAAP;AACD;;;;;;;;;;;0BAjBGf,M;0BAaKU,K","sourcesContent":["var createHash = require('create-hash')\nvar Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function (seed, len) {\n  var t = Buffer.alloc(0)\n  var i = 0\n  var c\n  while (t.length < len) {\n    c = i2ops(i++)\n    t = Buffer.concat([t, createHash('sha1').update(seed).update(c).digest()])\n  }\n  return t.slice(0, len)\n}\n\nfunction i2ops (c) {\n  var out = Buffer.allocUnsafe(4)\n  out.writeUInt32BE(c, 0)\n  return out\n}\n"]},"metadata":{},"sourceType":"script"}