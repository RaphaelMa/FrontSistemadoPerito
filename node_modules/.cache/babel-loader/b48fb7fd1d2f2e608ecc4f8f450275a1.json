{"ast":null,"code":"var _jsxFileName = \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Inputs/PersonInput/PersonInput.tsx\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useEffect, useRef, memo } from 'react';\nimport { Select, Divider, Tag } from 'antd';\nimport { UnstyledButton } from 'Components/SistemaDoPerito';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { deburr, isEqual } from 'lodash';\nimport useGetPeople from './useGetPeople';\nimport useGetUsers from './useGetUsers';\nimport PersonDrawer from 'Components/Drawers/Person/Person';\nimport { useUserSelector } from 'Redux/UserReducer';\n\n// TODO: Ajustar props\nconst PeopleInput = props => {\n  const {\n    with_users = false,\n    query_options,\n    show_create_button,\n    person_options,\n    fetch_options = true,\n    refetch,\n    external_loading,\n    ...rest\n  } = props;\n  const plan_modules = useUserSelector(state => {\n    var _state$company;\n\n    return (_state$company = state.company) === null || _state$company === void 0 ? void 0 : _state$company.plan.modules;\n  });\n  const permissions = useUserSelector(state => state.permissions);\n  const personDrawerRef = useRef(null);\n  const [{\n    data: people = [],\n    loading: people_loading\n  }, getPeople] = useGetPeople();\n  const [{\n    data: users = [],\n    loading: users_loading\n  }, getUsers] = useGetUsers();\n  const all_data = [...(person_options || [])];\n  people.forEach(person => all_data.push({ ...person,\n    type: 'people'\n  }));\n  users.forEach(user => all_data.push({ ...user,\n    type: 'user'\n  }));\n  useEffect(() => {\n    if (fetch_options) {\n      getPeople();\n      if (with_users) getUsers();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [with_users]);\n\n  const onCreateClick = () => {\n    var _personDrawerRef$curr;\n\n    (_personDrawerRef$curr = personDrawerRef.current) === null || _personDrawerRef$curr === void 0 ? void 0 : _personDrawerRef$curr.open();\n  };\n\n  const afterSave = people => {\n    if (fetch_options || typeof refetch === 'undefined') {\n      getPeople();\n      console.log('[PersonInput] Normal');\n    } else {\n      refetch();\n      console.log('[PersonInput] Refetch');\n    }\n\n    const value = props.mode === 'multiple' || props.mode === 'tags' ? [...props.value, people._id] : people._id;\n    if (props.onChange) props.onChange(value, {\n      children: people.name,\n      value: people._id\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Select, Object.assign({\n    style: {\n      width: '100%'\n    },\n    loading: people_loading || users_loading || external_loading,\n    placeholder: \"Pessoa\",\n    showSearch: true,\n    filterOption: (raw_value, option) => {\n      const value = deburr(raw_value).toLowerCase();\n      const option_value = deburr(option === null || option === void 0 ? void 0 : option.name).toLowerCase();\n      return option_value.indexOf(value) >= 0;\n    },\n    dropdownRender: menu => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }, menu, show_create_button && (plan_modules === null || plan_modules === void 0 ? void 0 : plan_modules.Register) && (permissions === null || permissions === void 0 ? void 0 : permissions.people.create) && /*#__PURE__*/React.createElement(UnstyledButton, {\n      style: {\n        display: 'block',\n        padding: 8\n      },\n      className: \"no-decoration\",\n      onClick: onCreateClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(PlusOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }), \" Nova pessoa\"))\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }), all_data.map(person => /*#__PURE__*/React.createElement(Select.Option, {\n    key: person._id,\n    value: person._id,\n    name: person.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    title: person.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, with_users && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Tag, {\n    color: person.type === 'people' ? 'blue' : 'red',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 19\n    }\n  }, person.type === 'people' ? 'Pessoa' : 'UsuÃ¡rio'), /*#__PURE__*/React.createElement(Divider, {\n    type: \"vertical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 19\n    }\n  })), person.name)))), /*#__PURE__*/React.createElement(PersonDrawer, {\n    ref: personDrawerRef,\n    afterSave: afterSave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }));\n};\n\n__signature__(PeopleInput, \"useUserSelector{plan_modules}\\nuseUserSelector{permissions}\\nuseRef{personDrawerRef}\\nuseGetPeople{[{ data: people = [], loading: people_loading }, getPeople]}\\nuseGetUsers{[{ data: users = [], loading: users_loading }, getUsers]}\\nuseEffect{}\", () => [useUserSelector, useUserSelector, useGetPeople, useGetUsers]);\n\nconst _default = memo(PeopleInput, isEqual);\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(PeopleInput, \"PeopleInput\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Inputs/PersonInput/PersonInput.tsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Inputs/PersonInput/PersonInput.tsx\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Inputs/PersonInput/PersonInput.tsx"],"names":["React","useEffect","useRef","memo","Select","Divider","Tag","UnstyledButton","PlusOutlined","deburr","isEqual","useGetPeople","useGetUsers","PersonDrawer","useUserSelector","PeopleInput","props","with_users","query_options","show_create_button","person_options","fetch_options","refetch","external_loading","rest","plan_modules","state","company","plan","modules","permissions","personDrawerRef","data","people","loading","people_loading","getPeople","users","users_loading","getUsers","all_data","forEach","person","push","type","user","onCreateClick","current","open","afterSave","console","log","value","mode","_id","onChange","children","name","width","raw_value","option","toLowerCase","option_value","indexOf","menu","Register","create","display","padding","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, memo } from 'react'\nimport { Select, Divider, Tag } from 'antd'\nimport { SelectProps } from 'antd/lib/select'\nimport { UnstyledButton } from 'Components/SistemaDoPerito'\nimport { PlusOutlined } from '@ant-design/icons'\nimport { deburr, isEqual } from 'lodash'\nimport { PersonType } from 'Components/Drawers/Person/useSavePerson'\nimport useGetPeople from './useGetPeople'\nimport useGetUsers from './useGetUsers'\nimport PersonDrawer, { PersonDrawerType } from 'Components/Drawers/Person/Person'\nimport { useUserSelector } from 'Redux/UserReducer'\nimport { Options } from 'axios-hooks'\n\nexport type AllDataType = {\n  _id: string,\n  active?: boolean,\n  name: string,\n  email?: string,\n  cellPhone?: string,\n  areaId?: string,\n  areaDescription?: string,\n  type: 'people' | 'user',\n}\n\ntype Props = {\n  with_users?: boolean,\n  show_create_button?: boolean,\n  // As props abaixo sÃ£o usadas para quando as opÃ§Ãµes vem de fora\n  person_options?: AllDataType[], // OpÃ§Ãµes externas\n  fetch_options?: boolean, // Se Ã© para fazer a busca dentro do componente ou nÃ£o\n  refetch?: () => void, // Refaz a busca das opÃ§Ãµes externas\n  external_loading?: boolean, // Loading externo\n  query_options?: Options\n} & SelectProps<any | any[]>\n\n// TODO: Ajustar props\nconst PeopleInput: React.FC<Props> = (props) => {\n  const {\n    with_users = false,\n    query_options,\n    show_create_button,\n    person_options,\n    fetch_options = true,\n    refetch,\n    external_loading,\n    ...rest\n  } = props\n\n  const plan_modules = useUserSelector(state => state.company?.plan.modules)\n  const permissions = useUserSelector(state => state.permissions)\n\n  const personDrawerRef = useRef<PersonDrawerType>(null)\n\n  const [{ data: people = [], loading: people_loading }, getPeople] = useGetPeople()\n  const [{ data: users = [], loading: users_loading }, getUsers] = useGetUsers()\n\n  const all_data: AllDataType[] = [...(person_options || [])]\n  people.forEach(person => all_data.push({ ...person, type: 'people' }))\n  users.forEach(user => all_data.push({ ...user, type: 'user' }))\n\n  useEffect(() => {\n    if (fetch_options) {\n      getPeople()\n\n      if (with_users) getUsers()\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [with_users])\n\n  const onCreateClick = () => {\n    personDrawerRef.current?.open()\n  }\n\n  const afterSave = (people: PersonType) => {\n    if (fetch_options || typeof refetch === 'undefined') {\n      getPeople()\n      console.log('[PersonInput] Normal')\n    } else {\n      refetch()\n      console.log('[PersonInput] Refetch')\n    }\n    const value = props.mode === 'multiple' || props.mode === 'tags' ? [...props.value, people._id] : people._id\n    if (props.onChange) props.onChange(value, { children: people.name, value: people._id! })\n  }\n\n  return (\n    <>\n      <Select\n        style={{ width: '100%' }}\n        loading={people_loading || users_loading || external_loading}\n        placeholder=\"Pessoa\"\n        showSearch\n        filterOption={(raw_value, option) => {\n          const value = deburr(raw_value).toLowerCase()\n          const option_value = deburr(option?.name).toLowerCase()\n\n          return option_value.indexOf(value) >= 0\n        }}\n        dropdownRender={menu =>\n          <div>\n            {menu}\n            {show_create_button && plan_modules?.Register && permissions?.people.create &&\n              <UnstyledButton\n                style={{ display: 'block', padding: 8 }}\n                className=\"no-decoration\"\n                onClick={onCreateClick}\n              >\n                <PlusOutlined/> Nova pessoa\n              </UnstyledButton>\n            }\n          </div>\n        }\n        {...rest}\n      >\n        {all_data.map(person => (\n          <Select.Option key={person._id} value={person._id} name={person.name}>\n            <div title={person.name}>\n              {with_users &&\n                <>\n                  <Tag color={person.type === 'people' ? 'blue' : 'red'}>\n                    {person.type === 'people' ? 'Pessoa' : 'UsuÃ¡rio'}\n                  </Tag>\n                  <Divider type=\"vertical\"/>\n                </>\n              }\n              {person.name}\n            </div>\n          </Select.Option>\n        ))}\n      </Select>\n      <PersonDrawer ref={personDrawerRef} afterSave={afterSave}/>\n    </>\n  )\n}\n\nexport default memo(PeopleInput, isEqual)\n"]},"metadata":{},"sourceType":"module"}