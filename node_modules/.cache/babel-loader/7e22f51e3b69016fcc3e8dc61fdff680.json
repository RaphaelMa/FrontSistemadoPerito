{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport useAxios from \"axios-hooks\";\n\nconst useGetTasks = id => useAxios({\n  url: `/processtabs/module=task/id=${id}`,\n  method: 'GET'\n}, {\n  manual: true\n});\n\n__signature__(useGetTasks, \"useAxios{}\", () => [useAxios]);\n\nconst _default = useGetTasks;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(useGetTasks, \"useGetTasks\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/NewProcess/Tabs/ProcessTasks/useGetProcessTasks.ts\");\n  reactHotLoader.register(_default, \"default\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/NewProcess/Tabs/ProcessTasks/useGetProcessTasks.ts\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/NewProcess/Tabs/ProcessTasks/useGetProcessTasks.ts"],"names":["useAxios","useGetTasks","id","url","method","manual"],"mappings":";;;;;;;;;AAAA,OAAOA,QAAP,MAAqB,aAArB;;AAyBA,MAAMC,WAAW,GAAIC,EAAD,IAClBF,QAAQ,CACN;AACEG,EAAAA,GAAG,EAAG,+BAA8BD,EAAG,EADzC;AAEEE,EAAAA,MAAM,EAAE;AAFV,CADM,EAKN;AAAEC,EAAAA,MAAM,EAAE;AAAV,CALM,CADV;;cAAMJ,W,uBACJD,Q;;iBASaC,W;AAAf;;;;;;;;;;0BAVMA,W","sourcesContent":["import useAxios from \"axios-hooks\"\n\nexport type TaskType = {\n  _id: string,\n  finished: boolean,\n  process_number: string,\n  user_name: string,\n  description: string,\n  deliveryDateTask: string,\n  createdAt?: string,\n  updatedAt?: string,\n  finishedDate?: string,\n  deliveryDate?: string,\n  title: string,\n  column: string,\n  column_description: string,\n  process_id: string,\n  user_id: string\n}\n\ntype DataPayload = {\n  message?: TaskType[],\n  success?: boolean,\n}\n\nconst useGetTasks = (id: string) => (\n  useAxios<DataPayload>(\n    {\n      url: `/processtabs/module=task/id=${id}`,\n      method: 'GET'\n    },\n    { manual: true }\n  )\n)\n\nexport default useGetTasks\n"]},"metadata":{},"sourceType":"module"}