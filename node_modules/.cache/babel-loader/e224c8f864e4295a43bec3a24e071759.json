{"ast":null,"code":"var _jsxFileName = \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/PersonKind/PersonKindList.tsx\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport ContainerList from 'Components/MainList/ContainerList';\nimport HeaderActions from 'Components/MainList/HeaderActions';\nimport { filterData, scapeRegex } from 'Utils/functions';\nimport KindPersonTable from './PersonKindTable';\nimport EmptyComponent from 'Components/EmptyComponent/EmptyComponent';\nimport useColumns from './useColumns';\nimport useGetPersonKind from './useGetPersonKind';\nimport messageError from 'Utils/messageError';\nimport PersonKindDrawer from 'Components/Drawers/PersonKind/PersonKind';\nimport useDestroyPersonKind from 'Pages/PersonKind/useDestroyPersonKind';\nimport { message } from 'antd';\nimport { useUserSelector } from 'Redux/UserReducer';\nimport useExportData from './useExportData';\nconst initial_filters = {\n  search: '',\n  pagination: {\n    current_page: 1,\n    page_size: 10\n  },\n  sort: {\n    field: 'description',\n    order: 'ascend'\n  }\n};\nconst columns_keys = ['description'];\n\nconst PersonKindList = () => {\n  const permissions = useUserSelector(state => state.permissions);\n  const PersonKindRef = useRef(null);\n  const [filters, setFilters] = useState(initial_filters);\n  const [people, setPeople] = useState([]);\n  const [destroyPersonKind, destroying] = useDestroyPersonKind();\n  const [{\n    loading\n  }, getPeopleKind] = useGetPersonKind();\n\n  const fetchPeopleKind = async () => {\n    try {\n      const {\n        data\n      } = await getPeopleKind();\n      setPeople(data);\n    } catch (error) {\n      messageError('2508202310');\n    }\n  };\n\n  useEffect(() => {\n    fetchPeopleKind(); // eslint-disable-next-line\n  }, []);\n  const filtered_data = useMemo(() => filterData({\n    data: people,\n    filters,\n    columns_keys\n  }), [filters, people]);\n  const onPressEnter = useCallback(value => {\n    setFilters(old_filters => ({ ...old_filters,\n      search: scapeRegex(value)\n    }));\n  }, []);\n\n  const handleOpenDrawer = id => {\n    var _PersonKindRef$curren;\n\n    (_PersonKindRef$curren = PersonKindRef.current) === null || _PersonKindRef$curren === void 0 ? void 0 : _PersonKindRef$curren.open(id);\n  };\n\n  const handleDelete = async id => {\n    try {\n      const {\n        data\n      } = await destroyPersonKind(id);\n\n      if (!(data === null || data === void 0 ? void 0 : data.success)) {\n        message.error(data.message);\n        return;\n      }\n\n      message.success('Tipo de pessoa excluÃ­da com sucesso');\n      fetchPeopleKind();\n    } catch (e) {\n      messageError('2608202053');\n    }\n  };\n\n  const handleTableChange = useCallback((pagination, _filter, sorter) => {\n    var _sorter$column;\n\n    let internal_filters = filters;\n\n    if (sorter === null || sorter === void 0 ? void 0 : (_sorter$column = sorter.column) === null || _sorter$column === void 0 ? void 0 : _sorter$column.sorter) {\n      internal_filters = { ...internal_filters,\n        sort: {\n          order: sorter.order,\n          field: sorter.field\n        }\n      };\n    }\n\n    internal_filters = { ...internal_filters,\n      pagination: {\n        current_page: pagination.current || internal_filters.pagination.current_page,\n        page_size: pagination.pageSize || internal_filters.pagination.page_size\n      }\n    };\n    setFilters(internal_filters);\n  }, [filters]);\n  const locale = useMemo(() => ({\n    emptyText: (permissions === null || permissions === void 0 ? void 0 : permissions.kindPeople.create) && /*#__PURE__*/React.createElement(EmptyComponent, {\n      onClick: () => handleOpenDrawer(),\n      action_text: \"Tipo de Pessoa\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    })\n  }), [permissions]);\n  const columns = useColumns({\n    destroying,\n    handleDelete,\n    handleEdit: handleOpenDrawer\n  });\n\n  const afterSave = () => {\n    fetchPeopleKind();\n  };\n\n  const exportToXLS = useExportData(filtered_data);\n  return /*#__PURE__*/React.createElement(ContainerList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(HeaderActions, {\n    onPressEnter: onPressEnter,\n    setFilters: setFilters,\n    placeholder: \"Informe o tipo de pessoa\",\n    button_text: \"Novo Tipo\",\n    handleNew: handleOpenDrawer,\n    has_create_permission: permissions === null || permissions === void 0 ? void 0 : permissions.kindPeople.create,\n    exportToXLS: exportToXLS,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(KindPersonTable, {\n    columns: columns,\n    filtered_data: filtered_data,\n    filters: filters,\n    handleTableChange: handleTableChange,\n    loading: loading,\n    locale: locale,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(PersonKindDrawer, {\n    afterSave: afterSave,\n    ref: PersonKindRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }));\n};\n\n__signature__(PersonKindList, \"useUserSelector{permissions}\\nuseRef{PersonKindRef}\\nuseState{[filters, setFilters](initial_filters)}\\nuseState{[people, setPeople]([])}\\nuseDestroyPersonKind{[destroyPersonKind, destroying]}\\nuseGetPersonKind{[{ loading }, getPeopleKind]}\\nuseEffect{}\\nuseMemo{filtered_data}\\nuseCallback{onPressEnter}\\nuseCallback{handleTableChange}\\nuseMemo{locale}\\nuseColumns{columns: ColumnsType<PersonKindType>}\\nuseExportData{exportToXLS}\", () => [useUserSelector, useDestroyPersonKind, useGetPersonKind, useColumns, useExportData]);\n\nPersonKindList.displayName = \"PersonKindList\";\nconst _default = PersonKindList;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(initial_filters, \"initial_filters\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/PersonKind/PersonKindList.tsx\");\n  reactHotLoader.register(columns_keys, \"columns_keys\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/PersonKind/PersonKindList.tsx\");\n  reactHotLoader.register(PersonKindList, \"PersonKindList\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/PersonKind/PersonKindList.tsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/PersonKind/PersonKindList.tsx\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/PersonKind/PersonKindList.tsx"],"names":["React","useCallback","useEffect","useMemo","useRef","useState","ContainerList","HeaderActions","filterData","scapeRegex","KindPersonTable","EmptyComponent","useColumns","useGetPersonKind","messageError","PersonKindDrawer","useDestroyPersonKind","message","useUserSelector","useExportData","initial_filters","search","pagination","current_page","page_size","sort","field","order","columns_keys","PersonKindList","permissions","state","PersonKindRef","filters","setFilters","people","setPeople","destroyPersonKind","destroying","loading","getPeopleKind","fetchPeopleKind","data","error","filtered_data","onPressEnter","value","old_filters","handleOpenDrawer","id","current","open","handleDelete","success","e","handleTableChange","_filter","sorter","internal_filters","column","pageSize","locale","emptyText","kindPeople","create","columns","handleEdit","afterSave","exportToXLS"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react'\nimport { ColumnsType, TablePaginationConfig } from 'antd/es/table'\nimport ContainerList from 'Components/MainList/ContainerList'\nimport HeaderActions from 'Components/MainList/HeaderActions'\nimport { filterData, FiltersType, scapeRegex } from 'Utils/functions'\nimport { PersonKindType } from './types'\nimport KindPersonTable from './PersonKindTable'\nimport EmptyComponent from 'Components/EmptyComponent/EmptyComponent'\nimport useColumns from './useColumns'\nimport { Key } from 'antd/lib/table/interface'\nimport useGetPersonKind from './useGetPersonKind'\nimport messageError from 'Utils/messageError'\nimport PersonKindDrawer, { PersonKindDrawerType } from 'Components/Drawers/PersonKind/PersonKind'\nimport useDestroyPersonKind from 'Pages/PersonKind/useDestroyPersonKind'\nimport { message } from 'antd'\nimport { useUserSelector } from 'Redux/UserReducer'\nimport useExportData from './useExportData'\n\nconst initial_filters: FiltersType = {\n  search: '',\n  pagination: {\n    current_page: 1,\n    page_size: 10,\n  },\n  sort: {\n    field: 'description',\n    order: 'ascend',\n  },\n}\n\nconst columns_keys = ['description']\n\ntype KindPersonListProps = {}\n\nconst PersonKindList: React.FC<KindPersonListProps> = () => {\n  const permissions = useUserSelector(state => state.permissions)\n\n  const PersonKindRef = useRef<PersonKindDrawerType>(null)\n  const [filters, setFilters] = useState<FiltersType>(initial_filters)\n  const [people, setPeople] = useState<PersonKindType[]>([])\n  const [destroyPersonKind, destroying] = useDestroyPersonKind()\n  const [{ loading }, getPeopleKind] = useGetPersonKind()\n\n  const fetchPeopleKind = async () => {\n    try {\n      const { data } = await getPeopleKind()\n      setPeople(data)\n    } catch (error) {\n      messageError('2508202310')\n    }\n  }\n\n  useEffect(() => {\n    fetchPeopleKind()\n    // eslint-disable-next-line\n  }, [])\n\n  const filtered_data = useMemo(() => filterData({ data: people, filters, columns_keys }), [filters, people])\n\n  const onPressEnter = useCallback((value: string) => {\n    setFilters((old_filters) => ({ ...old_filters, search: scapeRegex(value) }))\n  }, [])\n\n  const handleOpenDrawer = (id?: string) => {\n    PersonKindRef.current?.open(id)\n  }\n\n  const handleDelete = async (id: string) => {\n    try {\n      const { data } = await destroyPersonKind(id)\n\n      if (!data?.success) {\n        message.error(data.message)\n        return\n      }\n\n      message.success('Tipo de pessoa excluÃ­da com sucesso')\n      fetchPeopleKind()\n    } catch (e) {\n      messageError('2608202053')\n    }\n  }\n\n  const handleTableChange = useCallback((\n    pagination: TablePaginationConfig,\n    _filter: Record<string, Key[] | null>,\n    sorter: any,\n  ): void => {\n    let internal_filters: FiltersType = filters\n\n    if (sorter?.column?.sorter) {\n      internal_filters = { ...internal_filters, sort: { order: sorter.order, field: sorter.field } }\n    }\n\n    internal_filters = {\n      ...internal_filters,\n      pagination: {\n        current_page: pagination.current || internal_filters!.pagination!.current_page,\n        page_size: pagination.pageSize || internal_filters!.pagination!.page_size,\n      },\n    }\n\n    setFilters(internal_filters)\n  }, [filters])\n\n  const locale = useMemo(() => ({\n    emptyText: (\n      permissions?.kindPeople.create && (\n        <EmptyComponent\n          onClick={() => handleOpenDrawer()}\n          action_text=\"Tipo de Pessoa\"\n        />\n      )\n    ),\n  }), [permissions])\n\n  const columns: ColumnsType<PersonKindType> = useColumns({ destroying, handleDelete, handleEdit: handleOpenDrawer })\n\n  const afterSave = () => {\n    fetchPeopleKind()\n  }\n\n  const exportToXLS = useExportData(filtered_data)\n\n  return (\n    <ContainerList>\n      <HeaderActions\n        onPressEnter={onPressEnter}\n        setFilters={setFilters}\n        placeholder=\"Informe o tipo de pessoa\"\n        button_text=\"Novo Tipo\"\n        handleNew={handleOpenDrawer}\n        has_create_permission={permissions?.kindPeople.create}\n        exportToXLS={exportToXLS}\n      />\n\n      <KindPersonTable\n        columns={columns}\n        filtered_data={filtered_data}\n        filters={filters}\n        handleTableChange={handleTableChange}\n        loading={loading}\n        locale={locale}\n      />\n\n      <PersonKindDrawer afterSave={afterSave} ref={PersonKindRef}/>\n    </ContainerList>\n  )\n}\n\nexport default PersonKindList\n"]},"metadata":{},"sourceType":"module"}