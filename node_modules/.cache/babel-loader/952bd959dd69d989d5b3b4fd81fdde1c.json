{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport getThemeProps from './getThemeProps';\nimport useTheme from '../useTheme';\nexport default function useThemeProps({\n  props,\n  name,\n  defaultTheme\n}) {\n  const theme = useTheme(defaultTheme);\n  const mergedProps = getThemeProps({\n    theme,\n    name,\n    props\n  });\n  return mergedProps;\n}\n\n__signature__(useThemeProps, \"useTheme{theme}\", () => [useTheme]);\n\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(useThemeProps, \"useThemeProps\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/node_modules/@mui/system/esm/useThemeProps/useThemeProps.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/node_modules/@mui/system/esm/useThemeProps/useThemeProps.js"],"names":["getThemeProps","useTheme","useThemeProps","props","name","defaultTheme","theme","mergedProps"],"mappings":";;;;;;;;;AAAA,OAAOA,aAAP,MAA0B,iBAA1B;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,eAAe,SAASC,aAAT,CAAuB;AACpCC,EAAAA,KADoC;AAEpCC,EAAAA,IAFoC;AAGpCC,EAAAA;AAHoC,CAAvB,EAIZ;AACD,QAAMC,KAAK,GAAGL,QAAQ,CAACI,YAAD,CAAtB;AACA,QAAME,WAAW,GAAGP,aAAa,CAAC;AAChCM,IAAAA,KADgC;AAEhCF,IAAAA,IAFgC;AAGhCD,IAAAA;AAHgC,GAAD,CAAjC;AAKA,SAAOI,WAAP;AACD;;cAZuBL,a,4BAKRD,Q;;;;;;;;;;;0BALQC,a","sourcesContent":["import getThemeProps from './getThemeProps';\nimport useTheme from '../useTheme';\nexport default function useThemeProps({\n  props,\n  name,\n  defaultTheme\n}) {\n  const theme = useTheme(defaultTheme);\n  const mergedProps = getThemeProps({\n    theme,\n    name,\n    props\n  });\n  return mergedProps;\n}"]},"metadata":{},"sourceType":"module"}