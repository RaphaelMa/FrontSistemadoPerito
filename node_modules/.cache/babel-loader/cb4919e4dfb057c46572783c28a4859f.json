{"ast":null,"code":"var _jsxFileName = \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/NewProcess/ExtraCard/AnnotationTab/useColumns.tsx\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useMemo } from 'react';\nimport { Button } from 'antd';\nimport { DeleteOutlined, EditOutlined } from '@ant-design/icons';\nimport { theme } from 'Styles/theme';\nimport moment from 'moment';\n\nconst useColumns = ({\n  handleDelete,\n  handleEdit\n}) => {\n  return useMemo(() => [{\n    title: 'Data',\n    dataIndex: 'annotationDate',\n    defaultSortOrder: 'descend',\n    key: 'annotationDate',\n    width: 100,\n    align: 'center',\n    sorter: (a, b) => {\n      if (a.annotationDate < b.annotationDate) return -1;\n      if (a.annotationDate > b.annotationDate) return 1;\n      return 0;\n    },\n    render: date => {\n      if (!date) return null;\n      return moment(date).utc().format('DD/MM/YYYY HH:mm');\n    }\n  }, {\n    title: 'Anotação',\n    dataIndex: 'description',\n    key: 'description',\n    ellipsis: true\n  }, {\n    title: 'Ações',\n    key: 'actions',\n    align: 'center',\n    width: 90,\n    render: annotation => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n      type: \"text\",\n      icon: /*#__PURE__*/React.createElement(DeleteOutlined, {\n        style: {\n          color: theme.colors.red\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 19\n        }\n      }),\n      onClick: () => handleDelete(annotation.key),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"text\",\n      icon: /*#__PURE__*/React.createElement(EditOutlined, {\n        style: {\n          color: theme.colors.primary\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 19\n        }\n      }),\n      onClick: () => handleEdit(annotation.key),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }))\n  }], [handleDelete, handleEdit]);\n};\n\n__signature__(useColumns, \"useMemo{}\");\n\nconst _default = useColumns;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(useColumns, \"useColumns\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/NewProcess/ExtraCard/AnnotationTab/useColumns.tsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/NewProcess/ExtraCard/AnnotationTab/useColumns.tsx\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/NewProcess/ExtraCard/AnnotationTab/useColumns.tsx"],"names":["React","useMemo","Button","DeleteOutlined","EditOutlined","theme","moment","useColumns","handleDelete","handleEdit","title","dataIndex","defaultSortOrder","key","width","align","sorter","a","b","annotationDate","render","date","utc","format","ellipsis","annotation","color","colors","red","primary"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,SAASC,cAAT,EAAyBC,YAAzB,QAA6C,mBAA7C;AACA,SAASC,KAAT,QAAsB,cAAtB;AAGA,OAAOC,MAAP,MAAmB,QAAnB;;AAOA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAAD,KAAgF;AACjG,SAAOR,OAAO,CAAC,MAAO,CACpB;AACES,IAAAA,KAAK,EAAE,MADT;AAEEC,IAAAA,SAAS,EAAE,gBAFb;AAGEC,IAAAA,gBAAgB,EAAE,SAHpB;AAIEC,IAAAA,GAAG,EAAE,gBAJP;AAKEC,IAAAA,KAAK,EAAE,GALT;AAMEC,IAAAA,KAAK,EAAE,QANT;AAOEC,IAAAA,MAAM,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAChB,UAAID,CAAC,CAACE,cAAF,GAAmBD,CAAC,CAACC,cAAzB,EAAyC,OAAO,CAAC,CAAR;AACzC,UAAIF,CAAC,CAACE,cAAF,GAAmBD,CAAC,CAACC,cAAzB,EAAyC,OAAO,CAAP;AAEzC,aAAO,CAAP;AACD,KAZH;AAaEC,IAAAA,MAAM,EAAGC,IAAD,IAAU;AAChB,UAAI,CAACA,IAAL,EAAW,OAAO,IAAP;AAEX,aAAOf,MAAM,CAACe,IAAD,CAAN,CAAaC,GAAb,GAAmBC,MAAnB,CAA0B,kBAA1B,CAAP;AACD;AAjBH,GADoB,EAoBpB;AACEb,IAAAA,KAAK,EAAE,UADT;AAEEC,IAAAA,SAAS,EAAE,aAFb;AAGEE,IAAAA,GAAG,EAAE,aAHP;AAIEW,IAAAA,QAAQ,EAAE;AAJZ,GApBoB,EA0BpB;AACEd,IAAAA,KAAK,EAAE,OADT;AAEEG,IAAAA,GAAG,EAAE,SAFP;AAGEE,IAAAA,KAAK,EAAE,QAHT;AAIED,IAAAA,KAAK,EAAE,EAJT;AAKEM,IAAAA,MAAM,EAAGK,UAAD,iBACN,uDACE,oBAAC,MAAD;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,eAAE,oBAAC,cAAD;AAAgB,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAErB,KAAK,CAACsB,MAAN,CAAaC;AAAtB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFR;AAGE,MAAA,OAAO,EAAE,MAAMpB,YAAY,CAACiB,UAAU,CAACZ,GAAZ,CAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAME,oBAAC,MAAD;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,eAAE,oBAAC,YAAD;AAAc,QAAA,KAAK,EAAE;AAAEa,UAAAA,KAAK,EAAErB,KAAK,CAACsB,MAAN,CAAaE;AAAtB,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFR;AAGE,MAAA,OAAO,EAAE,MAAMpB,UAAU,CAACgB,UAAU,CAACZ,GAAZ,CAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF;AANJ,GA1BoB,CAAR,EA8CV,CAACL,YAAD,EAAeC,UAAf,CA9CU,CAAd;AA+CD,CAhDD;;cAAMF,U;;iBAkDSA,U;AAAf;;;;;;;;;;0BAlDMA,U","sourcesContent":["import React, { useMemo } from 'react'\nimport { Button } from 'antd'\nimport { DeleteOutlined, EditOutlined } from '@ant-design/icons'\nimport { theme } from 'Styles/theme'\nimport { AnnotationType } from './types'\nimport { ColumnsType } from 'antd/es/table'\nimport moment from 'moment'\n\ntype UseColumnsProps = {\n  handleDelete: (key: React.Key) => void,\n  handleEdit: (key: React.Key) => void,\n}\n\nconst useColumns = ({ handleDelete, handleEdit }: UseColumnsProps): ColumnsType<AnnotationType> => {\n  return useMemo(() => ([\n    {\n      title: 'Data',\n      dataIndex: 'annotationDate',\n      defaultSortOrder: 'descend',\n      key: 'annotationDate',\n      width: 100,\n      align: 'center',\n      sorter: (a, b) => {\n        if (a.annotationDate < b.annotationDate) return -1\n        if (a.annotationDate > b.annotationDate) return 1\n\n        return 0\n      },\n      render: (date) => {\n        if (!date) return null\n\n        return moment(date).utc().format('DD/MM/YYYY HH:mm')\n      }\n    },\n    {\n      title: 'Anotação',\n      dataIndex: 'description',\n      key: 'description',\n      ellipsis: true,\n    },\n    {\n      title: 'Ações',\n      key: 'actions',\n      align: 'center',\n      width: 90,\n      render: (annotation: AnnotationType) => (\n        <>\n          <Button\n            type=\"text\"\n            icon={<DeleteOutlined style={{ color: theme.colors.red }}/>}\n            onClick={() => handleDelete(annotation.key)}\n          />\n          <Button\n            type=\"text\"\n            icon={<EditOutlined style={{ color: theme.colors.primary }}/>}\n            onClick={() => handleEdit(annotation.key)}\n          />\n        </>\n      ),\n    },\n  ]), [handleDelete, handleEdit])\n}\n\nexport default useColumns\n"]},"metadata":{},"sourceType":"module"}