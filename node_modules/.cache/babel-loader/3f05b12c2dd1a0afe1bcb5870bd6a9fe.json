{"ast":null,"code":"'use strict';\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nvar elliptic = exports;\nelliptic.version = require('../package.json').version;\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves'); // Protocols\n\nelliptic.ec = require('./elliptic/ec');\nelliptic.eddsa = require('./elliptic/eddsa');\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(elliptic, \"elliptic\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/node_modules/elliptic/lib/elliptic.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/node_modules/elliptic/lib/elliptic.js"],"names":["elliptic","exports","version","require","utils","rand","curve","curves","ec","eddsa"],"mappings":"AAAA;;;;;;;;;;;AAEA,IAAIA,QAAQ,GAAGC,OAAf;AAEAD,QAAQ,CAACE,OAAT,GAAmBC,OAAO,CAAC,iBAAD,CAAP,CAA2BD,OAA9C;AACAF,QAAQ,CAACI,KAAT,GAAiBD,OAAO,CAAC,kBAAD,CAAxB;AACAH,QAAQ,CAACK,IAAT,GAAgBF,OAAO,CAAC,SAAD,CAAvB;AACAH,QAAQ,CAACM,KAAT,GAAiBH,OAAO,CAAC,kBAAD,CAAxB;AACAH,QAAQ,CAACO,MAAT,GAAkBJ,OAAO,CAAC,mBAAD,CAAzB,C,CAEA;;AACAH,QAAQ,CAACQ,EAAT,GAAcL,OAAO,CAAC,eAAD,CAArB;AACAH,QAAQ,CAACS,KAAT,GAAiBN,OAAO,CAAC,kBAAD,CAAxB;;;;;;;;;;0BAVIH,Q","sourcesContent":["'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = require('../package.json').version;\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves');\n\n// Protocols\nelliptic.ec = require('./elliptic/ec');\nelliptic.eddsa = require('./elliptic/eddsa');\n"]},"metadata":{},"sourceType":"script"}