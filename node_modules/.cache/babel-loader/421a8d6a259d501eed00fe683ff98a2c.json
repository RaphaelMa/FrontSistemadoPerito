{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport FileSaver from 'file-saver';\nimport XLSX from 'xlsx';\nexport const sortBy = (arr, sort_by, options = {\n  order: 'ascend'\n}) => {\n  return [...arr].sort((a, b) => {\n    const keyA = a[sort_by];\n    const keyB = b[sort_by];\n\n    if (options.order === 'ascend') {\n      if (keyA < keyB) return -1;\n      if (keyA > keyB) return 1;\n    } else {\n      if (keyA > keyB) return -1;\n      if (keyA < keyB) return 1;\n    }\n\n    return 0;\n  });\n}; // remove +()' ' do telefone\n\nexport const normalizePhone = phone => phone.replace(/[^\\d+]+/g, '');\nexport const scapeRegex = value => value.replace(/[,.]/g, '');\nexport const filterData = ({\n  data,\n  filters,\n  columns_keys\n}) => {\n  let filtered_data = data;\n\n  if (filters.search) {\n    const search_lowercase = filters.search.toLowerCase();\n    filtered_data = data.filter(item => {\n      // @ts-ignore\n      const value_matched = columns_keys.find(column_key => {\n        var _item$column_key;\n\n        return (_item$column_key = item[column_key]) === null || _item$column_key === void 0 ? void 0 : _item$column_key.toLowerCase().match(search_lowercase);\n      });\n      return value_matched ? item : null;\n    });\n  }\n\n  return sortBy(filtered_data, filters.sort.field, {\n    order: filters.sort.order\n  });\n};\nexport const removeFalsyValues = object => {\n  const not_falsys = [false, 0];\n  return Object.entries(object).reduce((reduced, [key, value]) => {\n    if (value && typeof value === 'object') {\n      reduced[key] = removeFalsyValues(value);\n    } else if (Boolean(value) || not_falsys.includes(value)) {\n      reduced[key] = value;\n    }\n\n    return reduced;\n  }, {});\n}; // normalize remove acentos\n\nexport const normalizeString = str => str.toLowerCase().trim().normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\nconst FILE_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\nconst FILE_EXTENSION = '.xlsx';\nexport const exportToXLS = (filename, items, columns) => {\n  const data = items.map(item => {\n    return columns.reduce((acc, column) => {\n      // @ts-ignore\n      const value = item[column.key];\n      if (typeof column.render === 'function') return { ...acc,\n        [column.name]: column.render(item)\n      };\n      return { ...acc,\n        [column.name]: value\n      };\n    }, {});\n  });\n  const work_sheet = XLSX.utils.json_to_sheet(data);\n  const work_book = {\n    Sheets: {\n      'data': work_sheet\n    },\n    SheetNames: ['data']\n  };\n  const excel_buffer = XLSX.write(work_book, {\n    bookType: 'xlsx',\n    type: 'array'\n  });\n  const file = new Blob([excel_buffer], {\n    type: FILE_TYPE\n  });\n  FileSaver.saveAs(file, filename + FILE_EXTENSION);\n};\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(sortBy, \"sortBy\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Utils/functions.ts\");\n  reactHotLoader.register(normalizePhone, \"normalizePhone\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Utils/functions.ts\");\n  reactHotLoader.register(scapeRegex, \"scapeRegex\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Utils/functions.ts\");\n  reactHotLoader.register(filterData, \"filterData\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Utils/functions.ts\");\n  reactHotLoader.register(removeFalsyValues, \"removeFalsyValues\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Utils/functions.ts\");\n  reactHotLoader.register(normalizeString, \"normalizeString\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Utils/functions.ts\");\n  reactHotLoader.register(FILE_TYPE, \"FILE_TYPE\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Utils/functions.ts\");\n  reactHotLoader.register(FILE_EXTENSION, \"FILE_EXTENSION\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Utils/functions.ts\");\n  reactHotLoader.register(exportToXLS, \"exportToXLS\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Utils/functions.ts\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Utils/functions.ts"],"names":["FileSaver","XLSX","sortBy","arr","sort_by","options","order","sort","a","b","keyA","keyB","normalizePhone","phone","replace","scapeRegex","value","filterData","data","filters","columns_keys","filtered_data","search","search_lowercase","toLowerCase","filter","item","value_matched","find","column_key","match","field","removeFalsyValues","object","not_falsys","Object","entries","reduce","reduced","key","Boolean","includes","normalizeString","str","trim","normalize","FILE_TYPE","FILE_EXTENSION","exportToXLS","filename","items","columns","map","acc","column","render","name","work_sheet","utils","json_to_sheet","work_book","Sheets","SheetNames","excel_buffer","write","bookType","type","file","Blob","saveAs"],"mappings":"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","sourcesContent":["import FileSaver from 'file-saver'\nimport XLSX from 'xlsx'\n\nexport const sortBy = <ArrType extends any[]>(\n  arr: ArrType,\n  sort_by: string | number,\n  options: { order?: 'ascend' | 'descend' } = { order: 'ascend' }\n) => {\n  return [...arr].sort((a, b) => {\n    const keyA = a[sort_by]\n    const keyB = b[sort_by]\n\n    if (options.order === 'ascend') {\n      if (keyA < keyB) return -1\n      if (keyA > keyB) return 1\n    } else {\n      if (keyA > keyB) return -1\n      if (keyA < keyB) return 1\n    }\n\n    return 0\n  })\n}\n\n// remove +()' ' do telefone\nexport const normalizePhone = (phone: string): string => phone.replace(/[^\\d+]+/g, '')\n\nexport const scapeRegex = (value: string): string => value.replace(/[,.]/g, '')\n\nexport type FiltersType = {\n  search?: string,\n  pagination: {\n    current_page: number,\n    page_size: number,\n  },\n  sort: {\n    field: string,\n    order: 'ascend' | 'descend',\n  }\n}\n\ntype FilterData = {\n  filters: FiltersType,\n  columns_keys: string[]\n}\n\nexport const filterData = <T extends object>({ data, filters, columns_keys }: { data: T[] } & FilterData): T[] => {\n  let filtered_data: T[] = data\n\n  if (filters.search) {\n    const search_lowercase = filters.search.toLowerCase()\n\n    filtered_data = data.filter(item => {\n      // @ts-ignore\n      const value_matched = columns_keys.find(column_key => item[column_key]?.toLowerCase().match(search_lowercase))\n\n      return value_matched ? item : null\n    })\n  }\n\n  return sortBy(filtered_data, filters.sort.field, { order: filters.sort.order })\n}\n\nexport const removeFalsyValues = (object: Record<string | number, any>) => {\n  const not_falsys = [false, 0]\n\n  return (\n    Object.entries(object)\n      .reduce((reduced, [key, value]) => {\n        if (value && typeof value === 'object') {\n          reduced[key] = removeFalsyValues(value)\n        } else if (Boolean(value) || not_falsys.includes(value)) {\n          reduced[key] = value\n        }\n\n        return reduced\n      }, {} as Record<string | number, any>)\n  )\n}\n\n// normalize remove acentos\nexport const normalizeString = (str: string) => (\n  str.toLowerCase().trim().normalize('NFD').replace(/[\\u0300-\\u036f]/g, '')\n)\n\nexport type ColumnType<ItemType> = {\n  name: string;\n  key: string;\n  render?: (item: ItemType) => string | undefined;\n}\n\nconst FILE_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8'\n\nconst FILE_EXTENSION = '.xlsx'\n\nexport const exportToXLS = <ItemType>(filename: string, items: ItemType[], columns: ColumnType<ItemType>[]) => {\n  const data = items.map((item) => {\n    return columns.reduce((acc, column) => {\n      // @ts-ignore\n      const value = item[column.key]\n\n      if (typeof column.render === 'function') return { ...acc, [column.name]: column.render(item) }\n\n      return { ...acc, [column.name]: value }\n    }, {})\n  })\n\n  const work_sheet = XLSX.utils.json_to_sheet(data)\n\n  const work_book = { Sheets: { 'data': work_sheet }, SheetNames: ['data'] }\n\n  const excel_buffer = XLSX.write(work_book, { bookType: 'xlsx', type: 'array' })\n\n  const file = new Blob([excel_buffer], {type: FILE_TYPE})\n\n  FileSaver.saveAs(file, filename + FILE_EXTENSION)\n}\n"]},"metadata":{},"sourceType":"module"}