{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport useAxios from \"axios-hooks\";\n\nconst useGetFinancial = id => useAxios({\n  url: `/processtabs/module=financial/id=${id}`,\n  method: 'GET'\n}, {\n  manual: true\n});\n\n__signature__(useGetFinancial, \"useAxios{}\", () => [useAxios]);\n\nconst _default = useGetFinancial;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(useGetFinancial, \"useGetFinancial\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/NewProcess/Tabs/FinanceProcess/useGetProcessFianancial.ts\");\n  reactHotLoader.register(_default, \"default\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/NewProcess/Tabs/FinanceProcess/useGetProcessFianancial.ts\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/NewProcess/Tabs/FinanceProcess/useGetProcessFianancial.ts"],"names":["useAxios","useGetFinancial","id","url","method","manual"],"mappings":";;;;;;;;;AAAA,OAAOA,QAAP,MAAqB,aAArB;;AAYA,MAAMC,eAAe,GAAIC,EAAD,IACtBF,QAAQ,CACN;AACEG,EAAAA,GAAG,EAAG,oCAAmCD,EAAG,EAD9C;AAEEE,EAAAA,MAAM,EAAE;AAFV,CADM,EAKN;AAAEC,EAAAA,MAAM,EAAE;AAAV,CALM,CADV;;cAAMJ,e,uBACJD,Q;;iBASaC,e;AAAf;;;;;;;;;;0BAVMA,e","sourcesContent":["import useAxios from \"axios-hooks\";\nimport { FinancialType } from \"Pages/Financial/types\";\n\ntype DataPayload = {\n  message?: {\n    dataFinancial: FinancialType[],\n    totalReceive: number,\n    totalPay: number,\n  }\n  success?: boolean,\n}\n\nconst useGetFinancial = (id: string) => (\n  useAxios<DataPayload>(\n    {\n      url: `/processtabs/module=financial/id=${id}`,\n      method: 'GET'\n    },\n    { manual: true }\n  )\n)\n\nexport default useGetFinancial\n"]},"metadata":{},"sourceType":"module"}