{"ast":null,"code":"var _jsxFileName = \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Drawers/Unit/Unit.tsx\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { forwardRef, useImperativeHandle, useState } from 'react';\nimport { Button, Drawer, Form, message, Spin } from 'antd';\nimport useGetUnit from './useGetUnit';\nimport useSaveUnit from './useSaveUnit';\nimport messageError from 'Utils/messageError';\nimport UnitForm from './UnitForm';\nimport styled from 'styled-components';\nimport successModal from 'Utils/successModal';\n\nconst Unit = ({\n  afterSave\n}, ref) => {\n  const [form] = Form.useForm();\n  const [visible, setVisible] = useState(false);\n  const [getUnit, {\n    loading\n  }] = useGetUnit();\n  const [saveUnit, {\n    loading: save_loading\n  }] = useSaveUnit();\n\n  const open = id => {\n    if (id) loadUnit(id);\n    setVisible(true);\n  };\n\n  const close = () => {\n    setVisible(false);\n    form.resetFields();\n  };\n\n  useImperativeHandle(ref, () => ({\n    open,\n    close\n  }));\n\n  const loadUnit = async id => {\n    let response;\n\n    try {\n      response = await getUnit(id);\n    } catch (error) {\n      messageError('2012060159');\n      return;\n    }\n\n    const data = response.data.multicompany;\n    form.setFieldsValue(data);\n  };\n\n  const save = async values => {\n    let response;\n\n    try {\n      response = await saveUnit(values);\n    } catch (error) {\n      messageError('2012060157');\n      return;\n    }\n\n    const success = response.data.success;\n    const unit = response.data.multicompany;\n\n    if (!success) {\n      message.error(response.data.message);\n      return;\n    }\n\n    successModal({\n      content: 'Unidade salva com sucesso',\n      duration: 2000\n    });\n    afterSave({ ...values,\n      _id: unit._id\n    });\n    close();\n  };\n\n  const handleSave = () => {\n    form.validateFields().then(values => save(values));\n  };\n\n  return /*#__PURE__*/React.createElement(Drawer, {\n    visible: visible,\n    onClose: close,\n    title: \"Unidade\",\n    width: 500,\n    footer: /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: close,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }, \"Cancelar\"), /*#__PURE__*/React.createElement(Button, {\n      loading: loading || save_loading,\n      onClick: handleSave,\n      type: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, \"Salvar\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Spin, {\n    spinning: loading || save_loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(UnitForm, {\n    form: form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  })));\n};\n\n__signature__(Unit, \"useForm{[form]}\\nuseState{[visible, setVisible](false)}\\nuseGetUnit{[getUnit, { loading }]}\\nuseSaveUnit{[saveUnit, { loading: save_loading }]}\\nuseImperativeHandle{}\", () => [useGetUnit, useSaveUnit, useImperativeHandle]);\n\nUnit.displayName = \"Unit\";\n\nconst _default = forwardRef(Unit);\n\nexport default _default;\nconst Footer = styled.div.withConfig({\n  displayName: \"Unit__Footer\",\n  componentId: \"sc-1jpv46e-0\"\n})([\"text-align:right;button + button{margin-left:8px;}\"]);\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Unit, \"Unit\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Drawers/Unit/Unit.tsx\");\n  reactHotLoader.register(Footer, \"Footer\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Drawers/Unit/Unit.tsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Drawers/Unit/Unit.tsx\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Drawers/Unit/Unit.tsx"],"names":["React","forwardRef","useImperativeHandle","useState","Button","Drawer","Form","message","Spin","useGetUnit","useSaveUnit","messageError","UnitForm","styled","successModal","Unit","afterSave","ref","form","useForm","visible","setVisible","getUnit","loading","saveUnit","save_loading","open","id","loadUnit","close","resetFields","response","error","data","multicompany","setFieldsValue","save","values","success","unit","content","duration","_id","handleSave","validateFields","then","Footer","div"],"mappings":"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","sourcesContent":["import React, { forwardRef, useImperativeHandle, useState } from 'react'\nimport { Button, Drawer, Form, message, Spin } from 'antd'\nimport useGetUnit from './useGetUnit'\nimport useSaveUnit from './useSaveUnit'\nimport messageError from 'Utils/messageError'\nimport UnitForm from './UnitForm'\nimport styled from 'styled-components'\nimport successModal from 'Utils/successModal'\nimport { MultiCompaniesType } from 'Pages/MultiCompanies/types'\n\ntype OpenType = (id?: string) => void\n\nexport type UnitDrawerType = {\n  open: OpenType,\n  close: () => void,\n}\n\ntype Props = {\n  afterSave: (unit: Omit<MultiCompaniesType, '_id'> & { _id: string }) => void,\n}\n\nconst Unit: React.ForwardRefRenderFunction<UnitDrawerType, Props> = ({ afterSave }, ref) => {\n  const [form] = Form.useForm()\n  const [visible, setVisible] = useState(false)\n\n  const [getUnit, { loading }] = useGetUnit()\n  const [saveUnit, { loading: save_loading }] = useSaveUnit()\n\n  const open: OpenType = (id) => {\n    if (id) loadUnit(id)\n\n    setVisible(true)\n  }\n\n  const close = () => {\n    setVisible(false)\n    form.resetFields()\n  }\n\n  useImperativeHandle(ref, () => ({ open, close }))\n\n  const loadUnit = async (id: string) => {\n    let response\n    try {\n      response = await getUnit(id)\n\n    } catch (error) {\n      messageError('2012060159')\n      return\n    }\n\n    const data = response.data.multicompany\n\n    form.setFieldsValue(data)\n  }\n\n  const save = async (values: MultiCompaniesType) => {\n    let response\n    try {\n      response = await saveUnit(values)\n    } catch (error) {\n      messageError('2012060157')\n      return\n    }\n\n    const success = response.data.success\n    const unit = response.data.multicompany\n\n    if (!success) {\n      message.error(response.data.message)\n      return\n    }\n\n    successModal({ content: 'Unidade salva com sucesso', duration: 2000 })\n    afterSave({ ...values, _id: unit._id })\n    close()\n  }\n\n  const handleSave = () => {\n    form.validateFields()\n      .then(values => save(values as MultiCompaniesType))\n  }\n\n  return (\n    <Drawer\n      visible={visible}\n      onClose={close}\n      title=\"Unidade\"\n      width={500}\n      footer={\n        <Footer>\n          <Button onClick={close}>Cancelar</Button>\n          <Button loading={loading || save_loading} onClick={handleSave} type=\"primary\">Salvar</Button>\n        </Footer>\n      }\n    >\n      <Spin spinning={loading || save_loading}>\n        <UnitForm form={form}/>\n      </Spin>\n    </Drawer>\n  )\n}\n\nexport default forwardRef(Unit)\n\nconst Footer = styled.div`\n  text-align: right;\n\n  button + button {\n    margin-left: 8px;\n  }\n`\n"]},"metadata":{},"sourceType":"module"}