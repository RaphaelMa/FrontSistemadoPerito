{"ast":null,"code":"var _jsxFileName = \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Tasks/Kanban/Column/List.tsx\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { memo } from 'react';\nimport { colors } from '../Constants';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport { isEqual } from 'lodash';\nimport Item from '../Task/Item';\nimport styled from 'styled-components';\nconst CONTAINER_MIN_HEIGHT = 150;\n\nconst List = props => {\n  const {\n    list_id,\n    tasks,\n    title,\n    list_type,\n    openTaskModal\n  } = props;\n  return /*#__PURE__*/React.createElement(Droppable, {\n    droppableId: list_id,\n    type: list_type,\n    ignoreContainerClipping: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, (dropProvided, dropSnapshot) => /*#__PURE__*/React.createElement(Wrapper, Object.assign({}, dropProvided.droppableProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ScrollContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InnerList, {\n    tasks: tasks,\n    title: title,\n    dropProvided: dropProvided,\n    openTaskModal: openTaskModal,\n    column_id: list_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }))));\n};\n\nList.displayName = \"List\";\nconst InnerList = memo(props => {\n  const {\n    tasks,\n    dropProvided,\n    column_id,\n    openTaskModal\n  } = props;\n  const title = props.title ? /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 31\n    }\n  }, props.title) : null;\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, title, /*#__PURE__*/React.createElement(DropZone, {\n    ref: dropProvided.innerRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, tasks.map((task, index) => /*#__PURE__*/React.createElement(Draggable, {\n    key: task._id,\n    draggableId: task._id,\n    index: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, (dragProvided, dragSnapshot) => /*#__PURE__*/React.createElement(Item, {\n    key: task._id,\n    task: task,\n    isDragging: dragSnapshot.isDragging,\n    provided: dragProvided,\n    index: index,\n    openTaskModal: openTaskModal,\n    column_id: column_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }))), dropProvided.placeholder));\n}, isEqual); // Não adicionar o isEqual pois senão quando a tarefa é alterada pelo modal não remove\n// o item da lista\n\nconst _default = memo(List);\n\nexport default _default;\nconst Container = styled.div.withConfig({\n  displayName: \"List__Container\",\n  componentId: \"sc-1xzoatz-0\"\n})([\"\"]);\nconst DropZone = styled.div.withConfig({\n  displayName: \"List__DropZone\",\n  componentId: \"sc-1xzoatz-1\"\n})([\"min-height:\", \"px;padding-bottom:10px;\"], CONTAINER_MIN_HEIGHT);\nconst ScrollContainer = styled.div.withConfig({\n  displayName: \"List__ScrollContainer\",\n  componentId: \"sc-1xzoatz-2\"\n})([\"overflow-x:hidden;overflow-y:scroll;max-height:calc(100vh - 50px - 42px - 10px - 50.5px - 12px);&::-webkit-scrollbar{width:7px;}&::-webkit-scrollbar-track{background:transparent;}&::-webkit-scrollbar-thumb{background-color:\", \";border-radius:20px;}scrollbar-width:thin;scrollbar-color:\", \" \", \";\"], p => p.theme.colors.light_gray, p => p.theme.colors.light_gray, colors.N30);\nconst Wrapper = styled.div.withConfig({\n  displayName: \"List__Wrapper\",\n  componentId: \"sc-1xzoatz-3\"\n})([\"background-color:\", \";display:flex;flex-direction:column;border:10px;padding-bottom:0;transition:background-color 0.2s ease,opacity 0.1s ease;user-select:none;width:300px;padding-right:2px;\"], colors.N30);\nconst Title = styled.h4.withConfig({\n  displayName: \"List__Title\",\n  componentId: \"sc-1xzoatz-4\"\n})([\"font-size:15px;font-weight:bold;padding:10px;transition:background-color ease 0.2s;flex-grow:1;user-select:none;position:relative;\"]);\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(CONTAINER_MIN_HEIGHT, \"CONTAINER_MIN_HEIGHT\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Tasks/Kanban/Column/List.tsx\");\n  reactHotLoader.register(List, \"List\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Tasks/Kanban/Column/List.tsx\");\n  reactHotLoader.register(InnerList, \"InnerList\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Tasks/Kanban/Column/List.tsx\");\n  reactHotLoader.register(Container, \"Container\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Tasks/Kanban/Column/List.tsx\");\n  reactHotLoader.register(DropZone, \"DropZone\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Tasks/Kanban/Column/List.tsx\");\n  reactHotLoader.register(ScrollContainer, \"ScrollContainer\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Tasks/Kanban/Column/List.tsx\");\n  reactHotLoader.register(Wrapper, \"Wrapper\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Tasks/Kanban/Column/List.tsx\");\n  reactHotLoader.register(Title, \"Title\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Tasks/Kanban/Column/List.tsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Tasks/Kanban/Column/List.tsx\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Tasks/Kanban/Column/List.tsx"],"names":["React","memo","colors","Droppable","Draggable","isEqual","Item","styled","CONTAINER_MIN_HEIGHT","List","props","list_id","tasks","title","list_type","openTaskModal","dropProvided","dropSnapshot","droppableProps","InnerList","column_id","innerRef","map","task","index","_id","dragProvided","dragSnapshot","isDragging","placeholder","Container","div","DropZone","ScrollContainer","p","theme","light_gray","N30","Wrapper","Title","h4"],"mappings":"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","sourcesContent":["import React, { memo } from 'react'\nimport { TaskType } from '../Types'\nimport { colors } from '../Constants'\nimport { Droppable, Draggable } from 'react-beautiful-dnd'\nimport { DroppableProvided, DroppableStateSnapshot, DraggableProvided, DraggableStateSnapshot } from 'react-beautiful-dnd'\nimport { isEqual } from 'lodash'\nimport { TaskModalType } from 'Components/Modals/TaskModal/TaskModal'\nimport Item from '../Task/Item'\nimport styled from 'styled-components'\n\nconst CONTAINER_MIN_HEIGHT: number = 150\n\ntype Props = {\n  list_id: string,\n  list_type: string,\n  tasks: TaskType[],\n  title?: string,\n  openTaskModal: TaskModalType['open']\n}\n\nconst List: React.FC<Props> = (props) => {\n  const { list_id, tasks, title, list_type, openTaskModal } = props\n\n  return (\n    <Droppable droppableId={list_id} type={list_type} ignoreContainerClipping={true}>\n      {(dropProvided: DroppableProvided, dropSnapshot: DroppableStateSnapshot) => (\n        <Wrapper {...dropProvided.droppableProps}>\n          <ScrollContainer>\n            <InnerList\n              tasks={tasks}\n              title={title}\n              dropProvided={dropProvided}\n              openTaskModal={openTaskModal}\n              column_id={list_id}\n            />\n          </ScrollContainer>\n        </Wrapper>\n      )}\n    </Droppable>\n  )\n}\n\ntype InnerListProps = {\n  dropProvided: DroppableProvided,\n  tasks: TaskType[],\n  title?: string,\n  openTaskModal: TaskModalType['open'],\n  column_id: string,\n}\n\nconst InnerList: React.FC<InnerListProps> = memo((props: InnerListProps) => {\n  const { tasks, dropProvided, column_id, openTaskModal } = props;\n  const title = props.title ? <Title>{props.title}</Title> : null;\n\n  return (\n    <Container>\n      {title}\n      <DropZone ref={dropProvided.innerRef}>\n        {tasks.map((task: TaskType, index: number) => (\n          <Draggable key={task._id} draggableId={task._id} index={index}>\n            {(dragProvided: DraggableProvided, dragSnapshot: DraggableStateSnapshot) => (\n              <Item\n                key={task._id}\n                task={task}\n                isDragging={dragSnapshot.isDragging}\n                provided={dragProvided}\n                index={index}\n                openTaskModal={openTaskModal}\n                column_id={column_id}\n              />\n            )}\n          </Draggable>\n        ))}\n        {dropProvided.placeholder}\n      </DropZone>\n    </Container>\n  )\n}, isEqual)\n\n// Não adicionar o isEqual pois senão quando a tarefa é alterada pelo modal não remove\n// o item da lista\nexport default memo(List)\n\nconst Container = styled.div``\n\nconst DropZone = styled.div`\n  min-height: ${CONTAINER_MIN_HEIGHT}px;\n  padding-bottom: 10px;\n`\n\nconst ScrollContainer = styled.div`\n  overflow-x: hidden;\n  overflow-y: scroll;\n  /* 50px do header, 42px do header do board, 10 da margin das colunas, 50.5 do header da coluna, 12 da margin embaixo */\n  max-height: calc(100vh - 50px - 42px - 10px - 50.5px - 12px);\n\n  &::-webkit-scrollbar {\n    width: 7px;               /* width of the entire scrollbar */\n  }\n\n  &::-webkit-scrollbar-track {\n    background: transparent;        /* color of the tracking area */\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: ${p => p.theme.colors.light_gray};    /* color of the scroll thumb */\n    border-radius: 20px;       /* roundness of the scroll thumb */\n  }\n\n  /* Scrollbars in Firefox */\n  scrollbar-width: thin;\n  scrollbar-color: ${p => p.theme.colors.light_gray} ${colors.N30};\n`\n\nconst Wrapper = styled.div`\n  background-color: ${colors.N30};\n  display: flex;\n  flex-direction: column;\n  border: 10px;\n  padding-bottom: 0;\n  transition: background-color 0.2s ease, opacity 0.1s ease;\n  user-select: none;\n  width: 300px;\n  padding-right: 2px; // Pra barra de rolagem não ficar colada\n`\n\nconst Title = styled.h4`\n  font-size: 15px;\n  font-weight: bold;\n  padding: 10px;\n  transition: background-color ease 0.2s;\n  flex-grow: 1;\n  user-select: none;\n  position: relative;\n`\n"]},"metadata":{},"sourceType":"module"}