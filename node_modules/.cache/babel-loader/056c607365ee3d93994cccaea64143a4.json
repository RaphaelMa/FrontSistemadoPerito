{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nvar baseSlice = require('./_baseSlice');\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\n\n\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return !start && end >= length ? array : baseSlice(array, start, end);\n}\n\nmodule.exports = castSlice;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(castSlice, \"castSlice\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/node_modules/lodash/_castSlice.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/node_modules/lodash/_castSlice.js"],"names":["baseSlice","require","castSlice","array","start","end","length","undefined","module","exports"],"mappings":";;;;;;;;;AAAA,IAAIA,SAAS,GAAGC,OAAO,CAAC,cAAD,CAAvB;AAEA;;;;;;;;;;;AASA,SAASC,SAAT,CAAmBC,KAAnB,EAA0BC,KAA1B,EAAiCC,GAAjC,EAAsC;AACpC,MAAIC,MAAM,GAAGH,KAAK,CAACG,MAAnB;AACAD,EAAAA,GAAG,GAAGA,GAAG,KAAKE,SAAR,GAAoBD,MAApB,GAA6BD,GAAnC;AACA,SAAQ,CAACD,KAAD,IAAUC,GAAG,IAAIC,MAAlB,GAA4BH,KAA5B,GAAoCH,SAAS,CAACG,KAAD,EAAQC,KAAR,EAAeC,GAAf,CAApD;AACD;;AAEDG,MAAM,CAACC,OAAP,GAAiBP,SAAjB;;;;;;;;;;0BANSA,S","sourcesContent":["var baseSlice = require('./_baseSlice');\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\nmodule.exports = castSlice;\n"]},"metadata":{},"sourceType":"script"}