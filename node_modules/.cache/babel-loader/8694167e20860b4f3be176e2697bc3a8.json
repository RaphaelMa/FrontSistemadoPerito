{"ast":null,"code":"var _jsxFileName = \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Drawers/ProcessSituation/ProcessSituation.tsx\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useState, forwardRef, useImperativeHandle } from 'react';\nimport { Drawer, Form, Button, Spin, message } from 'antd';\nimport messageError from 'Utils/messageError';\nimport styled from 'styled-components';\nimport successModal from 'Utils/successModal';\nimport ProcessSituationForm from './ProcessSituationForm';\nimport useGetProcessSituation from './useGetProcessSituation';\nimport useSaveProcessSituation from './useSaveProcessSituation';\n\nconst ProcessSituation = ({\n  afterSave\n}, ref) => {\n  const [form] = Form.useForm();\n  const [visible, setVisible] = useState(false);\n  const [getProcessSituation, {\n    loading\n  }] = useGetProcessSituation();\n  const [saveProcessSituation, {\n    loading: save_loading\n  }] = useSaveProcessSituation();\n\n  const open = id => {\n    if (id) loadProcessSituation(id);\n    setVisible(true);\n  };\n\n  const close = () => {\n    setVisible(false);\n    setTimeout(() => form.resetFields(), 300);\n  };\n\n  useImperativeHandle(ref, () => ({\n    open,\n    close\n  }));\n\n  const loadProcessSituation = async id => {\n    try {\n      const response = await getProcessSituation(id);\n      const situation = response.data.situation;\n      form.setFieldsValue(situation);\n    } catch (error) {\n      messageError('202008222208');\n      return;\n    }\n  };\n\n  const save = async values => {\n    let response;\n\n    try {\n      response = await saveProcessSituation(values);\n    } catch (error) {\n      messageError('202008222139');\n      return;\n    }\n\n    const success = response.data.success;\n    const situation = response.data.situation;\n\n    if (success) {\n      successModal({\n        content: 'Situação salva com sucesso'\n      });\n      afterSave({ ...values,\n        _id: situation._id\n      });\n      close();\n      return;\n    }\n\n    message.error(response.data.message);\n  };\n\n  const handleSave = () => {\n    form.validateFields().then(values => save(values));\n  };\n\n  return /*#__PURE__*/React.createElement(Drawer, {\n    visible: visible,\n    onClose: close,\n    title: \"Situa\\xE7\\xE3o do Processo\",\n    width: 500,\n    footer: /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: close,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, \"Cancelar\"), /*#__PURE__*/React.createElement(Button, {\n      loading: loading || save_loading,\n      onClick: handleSave,\n      type: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }, \"Salvar\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Spin, {\n    spinning: loading || save_loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ProcessSituationForm, {\n    form: form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  })));\n};\n\n__signature__(ProcessSituation, \"useForm{[form]}\\nuseState{[visible, setVisible](false)}\\nuseGetProcessSituation{[getProcessSituation, { loading }]}\\nuseSaveProcessSituation{[saveProcessSituation, { loading: save_loading }]}\\nuseImperativeHandle{}\", () => [useGetProcessSituation, useSaveProcessSituation, useImperativeHandle]);\n\nProcessSituation.displayName = \"ProcessSituation\";\n\nconst _default = forwardRef(ProcessSituation);\n\nexport default _default;\nconst Footer = styled.div.withConfig({\n  displayName: \"ProcessSituation__Footer\",\n  componentId: \"sc-1nuhaog-0\"\n})([\"text-align:right;button + button{margin-left:8px;}\"]);\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(ProcessSituation, \"ProcessSituation\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Drawers/ProcessSituation/ProcessSituation.tsx\");\n  reactHotLoader.register(Footer, \"Footer\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Drawers/ProcessSituation/ProcessSituation.tsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Drawers/ProcessSituation/ProcessSituation.tsx\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Drawers/ProcessSituation/ProcessSituation.tsx"],"names":["React","useState","forwardRef","useImperativeHandle","Drawer","Form","Button","Spin","message","messageError","styled","successModal","ProcessSituationForm","useGetProcessSituation","useSaveProcessSituation","ProcessSituation","afterSave","ref","form","useForm","visible","setVisible","getProcessSituation","loading","saveProcessSituation","save_loading","open","id","loadProcessSituation","close","setTimeout","resetFields","response","situation","data","setFieldsValue","error","save","values","success","content","_id","handleSave","validateFields","then","Footer","div"],"mappings":"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","sourcesContent":["import React, { useState, forwardRef, useImperativeHandle } from 'react'\nimport { Drawer, Form, Button, Spin, message } from 'antd'\nimport messageError from 'Utils/messageError'\nimport styled from 'styled-components'\nimport successModal from 'Utils/successModal'\nimport { ProcessSituationType } from './types'\nimport ProcessSituationForm from './ProcessSituationForm'\nimport useGetProcessSituation from './useGetProcessSituation'\nimport useSaveProcessSituation from './useSaveProcessSituation'\n\ntype OpenType = (id?: string) => void\n\nexport type ProcessSituationDrawerRefType = {\n  open: OpenType,\n  close: () => void,\n}\n\ntype Props = {\n  afterSave: (situation: Omit<ProcessSituationType, '_id'> & { _id: string }) => void,\n}\n\nconst ProcessSituation: React.ForwardRefRenderFunction<ProcessSituationDrawerRefType, Props> = ({ afterSave }, ref) => {\n  const [form] = Form.useForm()\n  const [visible, setVisible] = useState(false)\n\n  const [getProcessSituation, { loading }] = useGetProcessSituation()\n  const [saveProcessSituation, { loading: save_loading }] = useSaveProcessSituation()\n\n  const open: OpenType = (id) => {\n    if (id) loadProcessSituation(id)\n\n    setVisible(true)\n  }\n\n  const close = () => {\n    setVisible(false)\n    setTimeout(() => form.resetFields(), 300)\n  }\n\n  useImperativeHandle(ref, () => ({ open, close }))\n\n  const loadProcessSituation = async (id: string) => {\n    try {\n      const response = await getProcessSituation(id)\n      const situation = response.data.situation\n\n      form.setFieldsValue(situation)\n    } catch (error) {\n      messageError('202008222208')\n      return\n    }\n  }\n\n  const save = async (values: ProcessSituationType) => {\n    let response\n    try {\n      response = await saveProcessSituation(values)\n    } catch (error) {\n      messageError('202008222139')\n      return\n    }\n\n    const success = response.data.success\n    const situation = response.data.situation\n\n    if (success) {\n      successModal({ content: 'Situação salva com sucesso' })\n      afterSave({ ...values, _id: situation._id })\n      close()\n      return\n    }\n\n    message.error(response.data.message)\n  }\n\n  const handleSave = () => {\n    form.validateFields()\n      .then(values => save(values as ProcessSituationType))\n  }\n\n  return (\n    <Drawer\n      visible={visible}\n      onClose={close}\n      title=\"Situação do Processo\"\n      width={500}\n      footer={\n        <Footer>\n          <Button onClick={close}>Cancelar</Button>\n          <Button loading={loading || save_loading} onClick={handleSave} type=\"primary\">Salvar</Button>\n        </Footer>\n      }\n    >\n      <Spin spinning={loading || save_loading}>\n        <ProcessSituationForm form={form}/>\n      </Spin>\n    </Drawer>\n  )\n}\n\nexport default forwardRef(ProcessSituation)\n\nconst Footer = styled.div`\n  text-align: right;\n\n  button + button {\n    margin-left: 8px;\n  }\n`\n"]},"metadata":{},"sourceType":"module"}