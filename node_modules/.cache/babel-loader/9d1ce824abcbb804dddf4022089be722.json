{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nvar BN = require('bn.js');\n\nvar Buffer = require('safe-buffer').Buffer;\n\nfunction withPublic(paddedMsg, key) {\n  return Buffer.from(paddedMsg.toRed(BN.mont(key.modulus)).redPow(new BN(key.publicExponent)).fromRed().toArray());\n}\n\nmodule.exports = withPublic;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Buffer, \"Buffer\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/node_modules/public-encrypt/withPublic.js\");\n  reactHotLoader.register(withPublic, \"withPublic\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/node_modules/public-encrypt/withPublic.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/node_modules/public-encrypt/withPublic.js"],"names":["BN","require","Buffer","withPublic","paddedMsg","key","from","toRed","mont","modulus","redPow","publicExponent","fromRed","toArray","module","exports"],"mappings":";;;;;;;;;AAAA,IAAIA,EAAE,GAAGC,OAAO,CAAC,OAAD,CAAhB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,aAAD,CAAP,CAAuBC,MAApC;;AAEA,SAASC,UAAT,CAAqBC,SAArB,EAAgCC,GAAhC,EAAqC;AACnC,SAAOH,MAAM,CAACI,IAAP,CAAYF,SAAS,CACzBG,KADgB,CACVP,EAAE,CAACQ,IAAH,CAAQH,GAAG,CAACI,OAAZ,CADU,EAEhBC,MAFgB,CAET,IAAIV,EAAJ,CAAOK,GAAG,CAACM,cAAX,CAFS,EAGhBC,OAHgB,GAIhBC,OAJgB,EAAZ,CAAP;AAKD;;AAEDC,MAAM,CAACC,OAAP,GAAiBZ,UAAjB;;;;;;;;;;0BAVID,M;0BAEKC,U","sourcesContent":["var BN = require('bn.js')\nvar Buffer = require('safe-buffer').Buffer\n\nfunction withPublic (paddedMsg, key) {\n  return Buffer.from(paddedMsg\n    .toRed(BN.mont(key.modulus))\n    .redPow(new BN(key.publicExponent))\n    .fromRed()\n    .toArray())\n}\n\nmodule.exports = withPublic\n"]},"metadata":{},"sourceType":"script"}