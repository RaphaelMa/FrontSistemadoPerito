{"ast":null,"code":"var _jsxFileName = \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Financial/Financial.tsx\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { filterData, scapeRegex } from 'Utils/functions';\nimport styled from 'styled-components';\nimport moment, { defaultFormat } from 'moment';\nimport { Form, message } from 'antd';\nimport FinancialDrawer from 'Components/Drawers/Financial/FinancialDrawer';\nimport messageError from 'Utils/messageError';\nimport useGetFinancial from './useGetFinancial';\nimport FinancialTable from './FinancialTable';\nimport Header from './Header';\nimport useExportData from './useExportData';\nconst initial_filters = {\n  search: '',\n  pagination: {\n    current_page: 1,\n    page_size: 20\n  },\n  sort: {\n    field: 'expirationDate',\n    order: 'ascend'\n  }\n};\nexport const initial_headers_filters = {\n  start_date: moment().startOf('month'),\n  end_date: moment().endOf('month'),\n  isPaid: undefined,\n  movement_description: undefined,\n  financialAccount_id: undefined\n};\nconst columns_keys = ['process_number', 'people_name', 'category_description'];\nconst initial_general_financial = {\n  total: 0,\n  receive: 0,\n  pay: 0\n};\n\nconst Financial = () => {\n  const [general_financial, setGeneralFinancial] = useState(initial_general_financial);\n  const [header_filters, setHeaderFilters] = useState(initial_headers_filters);\n  const [filters, setFilters] = useState(initial_filters);\n  const [financials, setFinancials] = useState([]);\n  const [header_key, setHeaderKey] = useState('');\n  const [form] = Form.useForm();\n  const financialModalRef = useRef(null);\n  const [{\n    loading\n  }, getFinancial] = useGetFinancial();\n\n  const fetchData = async () => {\n    try {\n      const {\n        data\n      } = await getFinancial();\n\n      if (!data.success) {\n        message.error(data.message);\n        return;\n      }\n\n      setFinancials(data.financial);\n      setGeneralFinancial(data.generalFinancial);\n    } catch (e) {\n      messageError('202012191938');\n    }\n  };\n\n  useEffect(() => {\n    fetchData(); // eslint-disable-next-line\n  }, []);\n  const onPressEnter = useCallback(value => {\n    setFilters(old_filters => ({ ...old_filters,\n      search: scapeRegex(value)\n    }));\n  }, []);\n\n  const handleOpenDrawer = options => {\n    var _financialModalRef$cu;\n\n    (_financialModalRef$cu = financialModalRef.current) === null || _financialModalRef$cu === void 0 ? void 0 : _financialModalRef$cu.open(options);\n  };\n\n  const handleTableChange = useCallback((pagination, _filter, sorter) => {\n    var _sorter$column;\n\n    let internal_filters = filters;\n\n    if (sorter === null || sorter === void 0 ? void 0 : (_sorter$column = sorter.column) === null || _sorter$column === void 0 ? void 0 : _sorter$column.sorter) {\n      internal_filters = { ...internal_filters,\n        sort: {\n          order: sorter.order,\n          field: sorter.field\n        }\n      };\n    }\n\n    internal_filters = { ...internal_filters,\n      pagination: {\n        current_page: pagination.current || internal_filters.pagination.current_page,\n        page_size: pagination.pageSize || internal_filters.pagination.page_size\n      }\n    };\n    setFilters(old_filters => ({ ...old_filters,\n      ...internal_filters\n    }));\n  }, [filters]);\n\n  const handleFormChange = changedFields => {\n    if (!changedFields.length) return;\n    const field = changedFields[0];\n    let value = field.value;\n\n    if (field.name[0] === 'isPaid' && typeof field.value === 'string') {\n      value = field.value === 'true';\n    }\n\n    setHeaderFilters(old_filters => ({ ...old_filters,\n      [field.name]: value\n    }));\n  };\n\n  const afterSave = data => {\n    setHeaderKey(String(Math.floor(Math.random() * 100)));\n    if (!data) return;\n    const {\n      financial,\n      generalFinancial\n    } = data;\n    setFinancials(prev => {\n      const prev_financial = prev.find(f => f._id === financial._id);\n\n      if (prev_financial) {\n        const financials = prev.filter(f => f._id !== financial._id);\n        return [...financials, financial];\n      }\n\n      return [...prev, financial];\n    });\n    setGeneralFinancial(generalFinancial);\n  };\n\n  const filtered_data_by_header_filters = useMemo(() => {\n    const {\n      start_date,\n      end_date,\n      isPaid,\n      movement_description,\n      financialAccount_id\n    } = header_filters;\n    return financials.filter(movement => {\n      let has_filter = true;\n\n      if (typeof isPaid === 'boolean') {\n        has_filter = movement.isPaid === isPaid;\n      }\n\n      if (!has_filter) return false;\n\n      if (typeof financialAccount_id === 'string') {\n        has_filter = movement.financialAccount_id === financialAccount_id;\n      }\n\n      if (!has_filter) return false;\n\n      if (typeof movement_description === 'string') {\n        has_filter = movement.movement_description === movement_description;\n      }\n\n      if (!has_filter) return false;\n      return moment(movement === null || movement === void 0 ? void 0 : movement.expirationDate, defaultFormat).isBetween(start_date, end_date, 'days', '[]');\n    });\n  }, [header_filters, financials]);\n  const filtered_data = useMemo(() => filterData({\n    data: filtered_data_by_header_filters,\n    filters,\n    columns_keys\n  }), [filters, filtered_data_by_header_filters]);\n  const exportToXLS = useExportData(filtered_data);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    key: header_key,\n    general_financial: general_financial,\n    handleFormChange: handleFormChange,\n    form: form,\n    onPressEnter: onPressEnter,\n    setFilters: setFilters,\n    handleOpenDrawer: handleOpenDrawer,\n    exportToXLS: exportToXLS,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FinancialTable, {\n    loading: loading,\n    financials: filtered_data,\n    setFinancials: setFinancials,\n    setGeneralFinancial: setGeneralFinancial,\n    handleTableChange: handleTableChange,\n    handleOpenDrawer: handleOpenDrawer,\n    afterSave: afterSave,\n    header_height: 124.797,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FinancialDrawer, {\n    afterSave: afterSave,\n    ref: financialModalRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }\n  }));\n};\n\n__signature__(Financial, \"useState{[general_financial, setGeneralFinancial](initial_general_financial)}\\nuseState{[header_filters, setHeaderFilters](initial_headers_filters)}\\nuseState{[filters, setFilters](initial_filters)}\\nuseState{[financials, setFinancials]([])}\\nuseState{[header_key, setHeaderKey]('')}\\nuseForm{[form]}\\nuseRef{financialModalRef}\\nuseGetFinancial{[{ loading }, getFinancial]}\\nuseEffect{}\\nuseCallback{onPressEnter}\\nuseCallback{handleTableChange}\\nuseMemo{filtered_data_by_header_filters}\\nuseMemo{filtered_data}\\nuseExportData{exportToXLS}\", () => [useGetFinancial, useExportData]);\n\nFinancial.displayName = \"Financial\";\nconst _default = Financial;\nexport default _default;\nconst Container = styled.div.withConfig({\n  displayName: \"Financial__Container\",\n  componentId: \"sc-1jb4uqs-0\"\n})([\"width:100%;padding:2rem;height:calc(100vh - 4rem);\"]);\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(initial_filters, \"initial_filters\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Financial/Financial.tsx\");\n  reactHotLoader.register(initial_headers_filters, \"initial_headers_filters\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Financial/Financial.tsx\");\n  reactHotLoader.register(columns_keys, \"columns_keys\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Financial/Financial.tsx\");\n  reactHotLoader.register(initial_general_financial, \"initial_general_financial\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Financial/Financial.tsx\");\n  reactHotLoader.register(Financial, \"Financial\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Financial/Financial.tsx\");\n  reactHotLoader.register(Container, \"Container\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Financial/Financial.tsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Financial/Financial.tsx\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Financial/Financial.tsx"],"names":["React","useCallback","useEffect","useMemo","useRef","useState","filterData","scapeRegex","styled","moment","defaultFormat","Form","message","FinancialDrawer","messageError","useGetFinancial","FinancialTable","Header","useExportData","initial_filters","search","pagination","current_page","page_size","sort","field","order","initial_headers_filters","start_date","startOf","end_date","endOf","isPaid","undefined","movement_description","financialAccount_id","columns_keys","initial_general_financial","total","receive","pay","Financial","general_financial","setGeneralFinancial","header_filters","setHeaderFilters","filters","setFilters","financials","setFinancials","header_key","setHeaderKey","form","useForm","financialModalRef","loading","getFinancial","fetchData","data","success","error","financial","generalFinancial","e","onPressEnter","value","old_filters","handleOpenDrawer","options","current","open","handleTableChange","_filter","sorter","internal_filters","column","pageSize","handleFormChange","changedFields","length","name","afterSave","String","Math","floor","random","prev","prev_financial","find","f","_id","filter","filtered_data_by_header_filters","movement","has_filter","expirationDate","isBetween","filtered_data","exportToXLS","Container","div"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react'\nimport { filterData, FiltersType, scapeRegex } from 'Utils/functions'\nimport { TablePaginationConfig } from 'antd/es/table'\nimport { Key } from 'antd/lib/table/interface'\nimport styled from 'styled-components'\nimport moment, { defaultFormat, Moment } from 'moment'\nimport { Form, message } from 'antd'\nimport { FinancialType, GeneralFinancial } from './types'\nimport { Store } from 'antd/lib/form/interface'\nimport FinancialDrawer, { FinancialDrawerType } from 'Components/Drawers/Financial/FinancialDrawer'\nimport messageError from 'Utils/messageError'\nimport useGetFinancial from './useGetFinancial'\nimport FinancialTable from './FinancialTable'\nimport Header from './Header'\nimport useExportData from './useExportData'\n\ntype InternalFiltersType = {\n  start_date: Moment,\n  end_date: Moment,\n  isPaid?: boolean,\n  movement_description?: string,\n  financialAccount_id?: string\n}\n\nconst initial_filters: FiltersType = {\n  search: '',\n  pagination: {\n    current_page: 1,\n    page_size: 20\n  },\n  sort: {\n    field: 'expirationDate',\n    order: 'ascend'\n  }\n}\n\nexport const initial_headers_filters: InternalFiltersType = {\n  start_date: moment().startOf('month'),\n  end_date: moment().endOf('month'),\n  isPaid: undefined,\n  movement_description: undefined,\n  financialAccount_id: undefined\n}\n\nconst columns_keys = ['process_number', 'people_name', 'category_description']\n\nconst initial_general_financial = {\n  total: 0,\n  receive: 0,\n  pay: 0\n}\n\nconst Financial: React.FC = () => {\n  const [general_financial, setGeneralFinancial] = useState<GeneralFinancial>(initial_general_financial)\n  const [header_filters, setHeaderFilters] = useState<InternalFiltersType>(initial_headers_filters)\n  const [filters, setFilters] = useState<FiltersType>(initial_filters)\n  const [financials, setFinancials] = useState<FinancialType[]>([])\n  const [header_key, setHeaderKey] = useState('')\n\n  const [form] = Form.useForm()\n\n  const financialModalRef = useRef<FinancialDrawerType>(null)\n\n  const [{ loading }, getFinancial] = useGetFinancial()\n\n  const fetchData = async () => {\n    try {\n      const { data } = await getFinancial()\n\n      if (!data.success) {\n        message.error(data.message)\n        return\n      }\n\n      setFinancials(data.financial)\n      setGeneralFinancial(data.generalFinancial)\n    } catch (e) {\n      messageError('202012191938')\n    }\n  }\n\n  useEffect(() => {\n    fetchData()\n    // eslint-disable-next-line\n  }, [])\n\n  const onPressEnter = useCallback((value: string) => {\n    setFilters((old_filters) => ({ ...old_filters, search: scapeRegex(value) }))\n  }, [])\n\n  const handleOpenDrawer: FinancialDrawerType['open'] = (options) => {\n    financialModalRef.current?.open(options)\n  }\n\n  const handleTableChange = useCallback((\n    pagination: TablePaginationConfig,\n    _filter: Record<string, Key[] | null>,\n    sorter: any\n  ): void => {\n    let internal_filters: FiltersType = filters\n\n    if (sorter?.column?.sorter) {\n      internal_filters = { ...internal_filters, sort: { order: sorter.order, field: sorter.field } }\n    }\n\n    internal_filters = {\n      ...internal_filters,\n      pagination: {\n        current_page: pagination.current || internal_filters!.pagination!.current_page,\n        page_size: pagination.pageSize || internal_filters!.pagination!.page_size\n      }\n    }\n\n    setFilters((old_filters) => ({ ...old_filters, ...internal_filters }))\n  }, [filters])\n\n  const handleFormChange = (changedFields: Store[]) => {\n    if (!changedFields.length) return\n\n    const field = changedFields[0]\n    let value = field.value\n\n    if (field.name[0] === 'isPaid' && typeof field.value === 'string') {\n      value = field.value === 'true'\n    }\n\n    setHeaderFilters(old_filters => ({ ...old_filters, [field.name]: value }))\n  }\n\n  const afterSave = (data?: { financial: FinancialType, generalFinancial: GeneralFinancial }) => {\n    setHeaderKey(String(Math.floor(Math.random() * 100)))\n\n    if (!data) return\n\n    const { financial, generalFinancial } = data\n    setFinancials(prev => {\n      const prev_financial = prev.find(f => f._id === financial._id)\n\n      if (prev_financial) {\n        const financials = prev.filter(f => f._id !== financial._id)\n\n        return [...financials, financial]\n      }\n\n      return [...prev, financial]\n    })\n\n    setGeneralFinancial(generalFinancial)\n  }\n\n  const filtered_data_by_header_filters = useMemo(() => {\n    const { start_date, end_date, isPaid, movement_description, financialAccount_id } = header_filters\n\n    return financials.filter(movement => {\n      let has_filter = true\n\n      if (typeof isPaid === 'boolean') {\n        has_filter = movement.isPaid === isPaid\n      }\n\n      if (!has_filter) return false\n\n      if (typeof financialAccount_id === 'string') {\n        has_filter = movement.financialAccount_id === financialAccount_id\n      }\n\n      if (!has_filter) return false\n\n      if (typeof movement_description === 'string') {\n        has_filter = movement.movement_description === movement_description\n      }\n\n      if (!has_filter) return false\n\n      return moment(movement?.expirationDate, defaultFormat).isBetween(start_date, end_date, 'days', '[]')\n    })\n  }, [header_filters, financials])\n\n  const filtered_data = useMemo(() => (\n    filterData({ data: filtered_data_by_header_filters, filters, columns_keys })\n  ), [filters, filtered_data_by_header_filters])\n\n  const exportToXLS = useExportData(filtered_data)\n\n  return (\n    <Container>\n      <Header\n        key={header_key}\n        general_financial={general_financial}\n        handleFormChange={handleFormChange}\n        form={form}\n        onPressEnter={onPressEnter}\n        setFilters={setFilters}\n        handleOpenDrawer={handleOpenDrawer}\n        exportToXLS={exportToXLS}\n      />\n\n      <FinancialTable\n        loading={loading}\n        financials={filtered_data}\n        setFinancials={setFinancials}\n        setGeneralFinancial={setGeneralFinancial}\n        handleTableChange={handleTableChange}\n        handleOpenDrawer={handleOpenDrawer}\n        afterSave={afterSave}\n        header_height={124.797}\n      />\n\n      <FinancialDrawer afterSave={afterSave} ref={financialModalRef}/>\n    </Container>\n  )\n}\n\nexport default Financial\n\nconst Container = styled.div`\n  width: 100%;\n  padding: 2rem;\n  height: calc(100vh - 4rem);\n`\n"]},"metadata":{},"sourceType":"module"}