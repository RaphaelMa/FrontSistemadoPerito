{"ast":null,"code":"var _jsxFileName = \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Keyword/KeywordList.tsx\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport HeaderActions from 'Components/MainList/HeaderActions';\nimport ContainerList from 'Components/MainList/ContainerList';\nimport { filterData, scapeRegex } from 'Utils/functions';\nimport Table from './KeywordTable';\nimport useColumns from './useColumns';\nimport EmptyComponent from 'Components/EmptyComponent/EmptyComponent';\nimport useGetKeywords from './useGetKeywords';\nimport messageError from 'Utils/messageError';\nimport KeywordDrawer from 'Components/Drawers/Keyword/Keyword';\nimport useDestroyKeyword from './useDestroyKeyword';\nimport { useUserSelector } from 'Redux/UserReducer';\nimport { message } from 'antd';\nimport useExportData from './useExportData';\nconst initial_filters = {\n  search: '',\n  pagination: {\n    current_page: 1,\n    page_size: 20\n  },\n  sort: {\n    field: 'description',\n    order: 'ascend'\n  }\n};\nconst columns_keys = ['description'];\n\nconst KeyWordList = () => {\n  const permissions = useUserSelector(state => state.permissions);\n  const [filters, setFilters] = useState(initial_filters);\n  const [data, setData] = useState([]);\n  const [{\n    loading\n  }, getKeywords] = useGetKeywords();\n  const [destroyKeyword, {\n    loading: destroy_loading\n  }] = useDestroyKeyword();\n  const keywordDrawerRef = useRef(null);\n\n  const loadKeywords = async () => {\n    try {\n      const response = await getKeywords();\n      setData(response.data);\n    } catch (error) {\n      messageError('202008252245');\n    }\n  };\n\n  useEffect(() => {\n    loadKeywords(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const onPressEnter = useCallback(value => {\n    setFilters(old_filters => ({ ...old_filters,\n      search: scapeRegex(value)\n    }));\n  }, []);\n\n  const handleOpenDrawer = id => {\n    var _keywordDrawerRef$cur;\n\n    (_keywordDrawerRef$cur = keywordDrawerRef.current) === null || _keywordDrawerRef$cur === void 0 ? void 0 : _keywordDrawerRef$cur.open(id);\n  };\n\n  const handleDelete = async id => {\n    try {\n      const response = await destroyKeyword(id);\n\n      if (response.data.success) {\n        message.success('Palavra chave excluÃ­da com sucesso');\n        setData(prev => prev.filter(keyword => keyword._id !== id));\n      }\n    } catch (error) {\n      messageError('202008262002');\n    }\n  };\n\n  const handleTableChange = useCallback((pagination, filter, sorter) => {\n    var _sorter$column;\n\n    let internal_filters = filters;\n\n    if (sorter === null || sorter === void 0 ? void 0 : (_sorter$column = sorter.column) === null || _sorter$column === void 0 ? void 0 : _sorter$column.sorter) {\n      internal_filters = { ...internal_filters,\n        sort: {\n          order: sorter.order,\n          field: sorter.field\n        }\n      };\n    }\n\n    internal_filters = { ...internal_filters,\n      pagination: {\n        current_page: pagination.current || internal_filters.pagination.current_page,\n        page_size: pagination.pageSize || internal_filters.pagination.page_size\n      }\n    };\n    console.log('[KeywordList] ', internal_filters);\n    setFilters(internal_filters);\n  }, [filters]);\n  const locale = useMemo(() => ({\n    emptyText: (permissions === null || permissions === void 0 ? void 0 : permissions.keyWord.create) && /*#__PURE__*/React.createElement(EmptyComponent, {\n      onClick: () => handleOpenDrawer(),\n      action_text: \"Palavra Chave\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    })\n  }), [permissions]);\n\n  const afterSave = keyword => {\n    setData(prev => {\n      const prev_keyword = data.find(key => key._id === keyword._id);\n\n      if (prev_keyword) {\n        const keywords = prev.filter(key => key._id !== keyword._id);\n        return [...keywords, keyword];\n      }\n\n      return [...prev, keyword];\n    });\n  };\n\n  const columns = useColumns({\n    handleDelete,\n    handleEdit: handleOpenDrawer\n  });\n  const filtered_data = useMemo(() => filterData({\n    data,\n    filters,\n    columns_keys\n  }), [filters, data]);\n  const exportToXLS = useExportData(filtered_data);\n  return /*#__PURE__*/React.createElement(ContainerList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(HeaderActions, {\n    onPressEnter: onPressEnter,\n    setFilters: setFilters,\n    placeholder: \"Informe palavra chave\",\n    button_text: \"Nova Palavra\",\n    handleNew: handleOpenDrawer,\n    has_create_permission: permissions === null || permissions === void 0 ? void 0 : permissions.keyWord.create,\n    exportToXLS: exportToXLS,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Table, {\n    columns: columns,\n    filtered_data: filtered_data,\n    filters: filters,\n    handleTableChange: handleTableChange,\n    loading: loading || destroy_loading,\n    locale: locale,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(KeywordDrawer, {\n    ref: keywordDrawerRef,\n    afterSave: afterSave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }));\n};\n\n__signature__(KeyWordList, \"useUserSelector{permissions}\\nuseState{[filters, setFilters](initial_filters)}\\nuseState{[data, setData]([])}\\nuseGetKeywords{[{ loading }, getKeywords]}\\nuseDestroyKeyword{[destroyKeyword, { loading: destroy_loading }]}\\nuseRef{keywordDrawerRef}\\nuseEffect{}\\nuseCallback{onPressEnter}\\nuseCallback{handleTableChange}\\nuseMemo{locale}\\nuseColumns{columns}\\nuseMemo{filtered_data}\\nuseExportData{exportToXLS}\", () => [useUserSelector, useGetKeywords, useDestroyKeyword, useColumns, useExportData]);\n\nKeyWordList.displayName = \"KeyWordList\";\nconst _default = KeyWordList;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(initial_filters, \"initial_filters\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Keyword/KeywordList.tsx\");\n  reactHotLoader.register(columns_keys, \"columns_keys\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Keyword/KeywordList.tsx\");\n  reactHotLoader.register(KeyWordList, \"KeyWordList\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Keyword/KeywordList.tsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Keyword/KeywordList.tsx\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Keyword/KeywordList.tsx"],"names":["React","useCallback","useEffect","useMemo","useRef","useState","HeaderActions","ContainerList","filterData","scapeRegex","Table","useColumns","EmptyComponent","useGetKeywords","messageError","KeywordDrawer","useDestroyKeyword","useUserSelector","message","useExportData","initial_filters","search","pagination","current_page","page_size","sort","field","order","columns_keys","KeyWordList","permissions","state","filters","setFilters","data","setData","loading","getKeywords","destroyKeyword","destroy_loading","keywordDrawerRef","loadKeywords","response","error","onPressEnter","value","old_filters","handleOpenDrawer","id","current","open","handleDelete","success","prev","filter","keyword","_id","handleTableChange","sorter","internal_filters","column","pageSize","console","log","locale","emptyText","keyWord","create","afterSave","prev_keyword","find","key","keywords","columns","handleEdit","filtered_data","exportToXLS"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,OAAxC,EAAiDC,MAAjD,EAAyDC,QAAzD,QAAyE,OAAzE;AAEA,OAAOC,aAAP,MAA0B,mCAA1B;AACA,OAAOC,aAAP,MAA0B,mCAA1B;AACA,SAASC,UAAT,EAAkCC,UAAlC,QAAoD,iBAApD;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,OAAOC,cAAP,MAA2B,0CAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,OAAOC,aAAP,MAAoD,oCAApD;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,SAASC,OAAT,QAAwB,MAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,MAAMC,eAA4B,GAAG;AACnCC,EAAAA,MAAM,EAAE,EAD2B;AAEnCC,EAAAA,UAAU,EAAE;AACVC,IAAAA,YAAY,EAAE,CADJ;AAEVC,IAAAA,SAAS,EAAE;AAFD,GAFuB;AAMnCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,aADH;AAEJC,IAAAA,KAAK,EAAE;AAFH;AAN6B,CAArC;AAYA,MAAMC,YAAY,GAAG,CAAC,aAAD,CAArB;;AAEA,MAAMC,WAAqB,GAAG,MAAM;AAClC,QAAMC,WAAW,GAAGb,eAAe,CAACc,KAAK,IAAIA,KAAK,CAACD,WAAhB,CAAnC;AAEA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwB5B,QAAQ,CAAce,eAAd,CAAtC;AACA,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAkB9B,QAAQ,CAAgB,EAAhB,CAAhC;AACA,QAAM,CAAC;AAAE+B,IAAAA;AAAF,GAAD,EAAcC,WAAd,IAA6BxB,cAAc,EAAjD;AACA,QAAM,CAACyB,cAAD,EAAiB;AAAEF,IAAAA,OAAO,EAAEG;AAAX,GAAjB,IAAiDvB,iBAAiB,EAAxE;AACA,QAAMwB,gBAAgB,GAAGpC,MAAM,CAAuB,IAAvB,CAA/B;;AAEA,QAAMqC,YAAY,GAAG,YAAY;AAC/B,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAML,WAAW,EAAlC;AACAF,MAAAA,OAAO,CAACO,QAAQ,CAACR,IAAV,CAAP;AACD,KAHD,CAGE,OAAOS,KAAP,EAAc;AACd7B,MAAAA,YAAY,CAAC,cAAD,CAAZ;AACD;AACF,GAPD;;AASAZ,EAAAA,SAAS,CAAC,MAAM;AACduC,IAAAA,YAAY,GADE,CAEhB;AACC,GAHQ,EAGN,EAHM,CAAT;AAKA,QAAMG,YAAY,GAAG3C,WAAW,CAAE4C,KAAD,IAAmB;AAClDZ,IAAAA,UAAU,CAAEa,WAAD,KAAkB,EAAE,GAAGA,WAAL;AAAkBzB,MAAAA,MAAM,EAAEZ,UAAU,CAACoC,KAAD;AAApC,KAAlB,CAAD,CAAV;AACD,GAF+B,EAE7B,EAF6B,CAAhC;;AAIA,QAAME,gBAAgB,GAAIC,EAAD,IAAiB;AAAA;;AACxC,6BAAAR,gBAAgB,CAACS,OAAjB,gFAA0BC,IAA1B,CAA+BF,EAA/B;AACD,GAFD;;AAIA,QAAMG,YAAY,GAAG,MAAOH,EAAP,IAAsB;AACzC,QAAI;AACF,YAAMN,QAAQ,GAAG,MAAMJ,cAAc,CAACU,EAAD,CAArC;;AACA,UAAIN,QAAQ,CAACR,IAAT,CAAckB,OAAlB,EAA2B;AACzBlC,QAAAA,OAAO,CAACkC,OAAR,CAAgB,oCAAhB;AACAjB,QAAAA,OAAO,CAAEkB,IAAD,IAAUA,IAAI,CAACC,MAAL,CAAYC,OAAO,IAAIA,OAAO,CAACC,GAAR,KAAgBR,EAAvC,CAAX,CAAP;AACD;AACF,KAND,CAME,OAAOL,KAAP,EAAc;AACd7B,MAAAA,YAAY,CAAC,cAAD,CAAZ;AACD;AACF,GAVD;;AAYA,QAAM2C,iBAAiB,GAAGxD,WAAW,CAAC,CACpCqB,UADoC,EAEpCgC,MAFoC,EAGpCI,MAHoC,KAI3B;AAAA;;AACT,QAAIC,gBAA6B,GAAG3B,OAApC;;AAEA,QAAI0B,MAAJ,aAAIA,MAAJ,yCAAIA,MAAM,CAAEE,MAAZ,mDAAI,eAAgBF,MAApB,EAA4B;AAC1BC,MAAAA,gBAAgB,GAAG,EAAE,GAAGA,gBAAL;AAAuBlC,QAAAA,IAAI,EAAE;AAAEE,UAAAA,KAAK,EAAE+B,MAAM,CAAC/B,KAAhB;AAAuBD,UAAAA,KAAK,EAAEgC,MAAM,CAAChC;AAArC;AAA7B,OAAnB;AACD;;AAEDiC,IAAAA,gBAAgB,GAAG,EACjB,GAAGA,gBADc;AAEjBrC,MAAAA,UAAU,EAAE;AACVC,QAAAA,YAAY,EAAED,UAAU,CAAC2B,OAAX,IAAsBU,gBAAgB,CAAErC,UAAlB,CAA8BC,YADxD;AAEVC,QAAAA,SAAS,EAAEF,UAAU,CAACuC,QAAX,IAAuBF,gBAAgB,CAAErC,UAAlB,CAA8BE;AAFtD;AAFK,KAAnB;AAOAsC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BJ,gBAA9B;AACA1B,IAAAA,UAAU,CAAC0B,gBAAD,CAAV;AACD,GApBoC,EAoBlC,CAAC3B,OAAD,CApBkC,CAArC;AAsBA,QAAMgC,MAAM,GAAG7D,OAAO,CAAC,OAAO;AAC5B8D,IAAAA,SAAS,EACP,CAAAnC,WAAW,SAAX,IAAAA,WAAW,WAAX,YAAAA,WAAW,CAAEoC,OAAb,CAAqBC,MAArB,kBACE,oBAAC,cAAD;AACE,MAAA,OAAO,EAAE,MAAMpB,gBAAgB,EADjC;AAEE,MAAA,WAAW,EAAC,eAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHwB,GAAP,CAAD,EASlB,CAACjB,WAAD,CATkB,CAAtB;;AAWA,QAAMsC,SAAS,GAAIb,OAAD,IAA0B;AAC1CpB,IAAAA,OAAO,CAACkB,IAAI,IAAI;AACd,YAAMgB,YAAY,GAAGnC,IAAI,CAACoC,IAAL,CAAUC,GAAG,IAAIA,GAAG,CAACf,GAAJ,KAAYD,OAAO,CAACC,GAArC,CAArB;;AAEA,UAAIa,YAAJ,EAAkB;AAChB,cAAMG,QAAQ,GAAGnB,IAAI,CAACC,MAAL,CAAYiB,GAAG,IAAIA,GAAG,CAACf,GAAJ,KAAYD,OAAO,CAACC,GAAvC,CAAjB;AAEA,eAAO,CAAC,GAAGgB,QAAJ,EAAcjB,OAAd,CAAP;AACD;;AAED,aAAO,CAAC,GAAGF,IAAJ,EAAUE,OAAV,CAAP;AACD,KAVM,CAAP;AAWD,GAZD;;AAcA,QAAMkB,OAAO,GAAG9D,UAAU,CAAC;AAAEwC,IAAAA,YAAF;AAAgBuB,IAAAA,UAAU,EAAE3B;AAA5B,GAAD,CAA1B;AACA,QAAM4B,aAAa,GAAGxE,OAAO,CAAC,MAAMK,UAAU,CAAC;AAAE0B,IAAAA,IAAF;AAAQF,IAAAA,OAAR;AAAiBJ,IAAAA;AAAjB,GAAD,CAAjB,EAAoD,CAACI,OAAD,EAAUE,IAAV,CAApD,CAA7B;AAEA,QAAM0C,WAAW,GAAGzD,aAAa,CAACwD,aAAD,CAAjC;AAEA,sBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AACE,IAAA,YAAY,EAAE/B,YADhB;AAEE,IAAA,UAAU,EAAEX,UAFd;AAGE,IAAA,WAAW,EAAC,uBAHd;AAIE,IAAA,WAAW,EAAC,cAJd;AAKE,IAAA,SAAS,EAAEc,gBALb;AAME,IAAA,qBAAqB,EAAEjB,WAAF,aAAEA,WAAF,uBAAEA,WAAW,CAAEoC,OAAb,CAAqBC,MAN9C;AAOE,IAAA,WAAW,EAAES,WAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAUE,oBAAC,KAAD;AACE,IAAA,OAAO,EAAEH,OADX;AAEE,IAAA,aAAa,EAAEE,aAFjB;AAGE,IAAA,OAAO,EAAE3C,OAHX;AAIE,IAAA,iBAAiB,EAAEyB,iBAJrB;AAKE,IAAA,OAAO,EAAErB,OAAO,IAAIG,eALtB;AAME,IAAA,MAAM,EAAEyB,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,eAkBE,oBAAC,aAAD;AAAe,IAAA,GAAG,EAAExB,gBAApB;AAAsC,IAAA,SAAS,EAAE4B,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBF,CADF;AAsBD,CArHD;;cAAMvC,W,qaACgBZ,e,EAIeJ,c,EACoBG,iB,EAoFvCL,U,EAGIQ,a;;AA7FhBU,W;iBAuHSA,W;AAAf;;;;;;;;;;0BArIMT,e;0BAYAQ,Y;0BAEAC,W","sourcesContent":["import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react'\nimport { TablePaginationConfig } from 'antd/es/table'\nimport HeaderActions from 'Components/MainList/HeaderActions'\nimport ContainerList from 'Components/MainList/ContainerList'\nimport { filterData, FiltersType, scapeRegex } from 'Utils/functions'\nimport Table from './KeywordTable'\nimport useColumns from './useColumns'\nimport { KeywordType } from './types'\nimport EmptyComponent from 'Components/EmptyComponent/EmptyComponent'\nimport useGetKeywords from './useGetKeywords'\nimport messageError from 'Utils/messageError'\nimport KeywordDrawer, { KeywordDrawerRefType } from 'Components/Drawers/Keyword/Keyword'\nimport useDestroyKeyword from './useDestroyKeyword'\nimport { useUserSelector } from 'Redux/UserReducer'\nimport { message } from 'antd'\nimport useExportData from './useExportData'\n\nconst initial_filters: FiltersType = {\n  search: '',\n  pagination: {\n    current_page: 1,\n    page_size: 20,\n  },\n  sort: {\n    field: 'description',\n    order: 'ascend',\n  },\n}\n\nconst columns_keys = ['description']\n\nconst KeyWordList: React.FC = () => {\n  const permissions = useUserSelector(state => state.permissions)\n\n  const [filters, setFilters] = useState<FiltersType>(initial_filters)\n  const [data, setData] = useState<KeywordType[]>([])\n  const [{ loading }, getKeywords] = useGetKeywords()\n  const [destroyKeyword, { loading: destroy_loading }] = useDestroyKeyword()\n  const keywordDrawerRef = useRef<KeywordDrawerRefType>(null)\n\n  const loadKeywords = async () => {\n    try {\n      const response = await getKeywords()\n      setData(response.data)\n    } catch (error) {\n      messageError('202008252245')\n    }\n  }\n\n  useEffect(() => {\n    loadKeywords()\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const onPressEnter = useCallback((value: string) => {\n    setFilters((old_filters) => ({ ...old_filters, search: scapeRegex(value) }))\n  }, [])\n\n  const handleOpenDrawer = (id?: string) => {\n    keywordDrawerRef.current?.open(id)\n  }\n\n  const handleDelete = async (id: string) => {\n    try {\n      const response = await destroyKeyword(id)\n      if (response.data.success) {\n        message.success('Palavra chave excluÃ­da com sucesso')\n        setData((prev) => prev.filter(keyword => keyword._id !== id))\n      }\n    } catch (error) {\n      messageError('202008262002')\n    }\n  }\n\n  const handleTableChange = useCallback((\n    pagination: TablePaginationConfig,\n    filter: Record<string, React.Key[] | null>,\n    sorter: any,\n  ): void => {\n    let internal_filters: FiltersType = filters\n\n    if (sorter?.column?.sorter) {\n      internal_filters = { ...internal_filters, sort: { order: sorter.order, field: sorter.field } }\n    }\n\n    internal_filters = {\n      ...internal_filters,\n      pagination: {\n        current_page: pagination.current || internal_filters!.pagination!.current_page,\n        page_size: pagination.pageSize || internal_filters!.pagination!.page_size,\n      },\n    }\n    console.log('[KeywordList] ', internal_filters)\n    setFilters(internal_filters)\n  }, [filters])\n\n  const locale = useMemo(() => ({\n    emptyText: (\n      permissions?.keyWord.create && (\n        <EmptyComponent\n          onClick={() => handleOpenDrawer()}\n          action_text=\"Palavra Chave\"\n        />\n      )\n    ),\n  }), [permissions])\n\n  const afterSave = (keyword: KeywordType) => {\n    setData(prev => {\n      const prev_keyword = data.find(key => key._id === keyword._id)\n\n      if (prev_keyword) {\n        const keywords = prev.filter(key => key._id !== keyword._id)\n\n        return [...keywords, keyword]\n      }\n\n      return [...prev, keyword]\n    })\n  }\n\n  const columns = useColumns({ handleDelete, handleEdit: handleOpenDrawer })\n  const filtered_data = useMemo(() => filterData({ data, filters, columns_keys }), [filters, data])\n\n  const exportToXLS = useExportData(filtered_data)\n\n  return (\n    <ContainerList>\n      <HeaderActions\n        onPressEnter={onPressEnter}\n        setFilters={setFilters}\n        placeholder=\"Informe palavra chave\"\n        button_text=\"Nova Palavra\"\n        handleNew={handleOpenDrawer}\n        has_create_permission={permissions?.keyWord.create}\n        exportToXLS={exportToXLS}\n      />\n      <Table\n        columns={columns}\n        filtered_data={filtered_data}\n        filters={filters}\n        handleTableChange={handleTableChange}\n        loading={loading || destroy_loading}\n        locale={locale}\n      />\n      <KeywordDrawer ref={keywordDrawerRef} afterSave={afterSave}/>\n    </ContainerList>\n  )\n}\n\nexport default KeyWordList\n"]},"metadata":{},"sourceType":"module"}