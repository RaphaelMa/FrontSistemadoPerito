{"ast":null,"code":"var _jsxFileName = \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/NewProcess/PeopleCard.tsx\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React from 'react';\nimport { Form, Divider, Row, Col, Button } from 'antd';\nimport Card from './Card';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport { theme } from 'Styles/theme';\nimport PersonInput from 'Components/Inputs/PersonInput/PersonInput';\nimport PersonKindInput from 'Components/Inputs/PersonKindInput/PersonKindInput';\n\nconst PeopleCard = ({\n  title,\n  field_name,\n  options,\n  refetch,\n  loading\n}) => /*#__PURE__*/React.createElement(Card, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Divider, {\n  orientation: \"left\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }\n}, title), /*#__PURE__*/React.createElement(Form.List, {\n  name: field_name,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }\n}, (fields, {\n  add,\n  remove\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, fields.map(field => /*#__PURE__*/React.createElement(Row, {\n    key: field.fieldKey,\n    gutter: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    noStyle: true,\n    shouldUpdate: (prev_values, cur_values) => {\n      var _prev_values$field_na, _cur_values$field_nam, _prev_values$field_na2, _cur_values$field_nam2;\n\n      const prev_kind = (_prev_values$field_na = prev_values[field_name][field.fieldKey]) === null || _prev_values$field_na === void 0 ? void 0 : _prev_values$field_na.kindPeopleId;\n      const cur_kind = (_cur_values$field_nam = cur_values[field_name][field.fieldKey]) === null || _cur_values$field_nam === void 0 ? void 0 : _cur_values$field_nam.kindPeopleId;\n      const prev_people = (_prev_values$field_na2 = prev_values[field_name][field.fieldKey]) === null || _prev_values$field_na2 === void 0 ? void 0 : _prev_values$field_na2.peopleId;\n      const cur_people = (_cur_values$field_nam2 = cur_values[field_name][field.fieldKey]) === null || _cur_values$field_nam2 === void 0 ? void 0 : _cur_values$field_nam2.peopleId;\n      return prev_kind !== cur_kind || prev_people !== cur_people;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, ({\n    getFieldValue\n  }) => {\n    const has_kind_people = !!getFieldValue([field_name, field.fieldKey, 'kindPeopleId']);\n    const has_people = !!getFieldValue([field_name, field.fieldKey, 'peopleId']);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Col, {\n      span: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, field, {\n      name: [field.name, 'kindPeopleId'],\n      fieldKey: [field.fieldKey, 'kindPeopleId'],\n      rules: [{\n        required: has_people,\n        message: 'Campo obrigatório'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(PersonKindInput, {\n      show_create_button: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      span: 14,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, field, {\n      name: [field.name, 'peopleId'],\n      fieldKey: [field.fieldKey, 'peopleId'],\n      rules: [{\n        required: has_kind_people,\n        message: 'Campo obrigatório'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(PersonInput, {\n      with_users: true,\n      show_create_button: true,\n      person_options: options,\n      fetch_options: false,\n      refetch: refetch,\n      external_loading: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 29\n      }\n    }))));\n  }), /*#__PURE__*/React.createElement(Col, {\n    span: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DeleteOutlined, {\n    style: {\n      marginTop: '8px',\n      color: theme.colors.red\n    },\n    onClick: () => remove(field.name),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    onClick: () => add(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, \"Nova Pessoa\"));\n}));\n\nPeopleCard.displayName = \"PeopleCard\";\nconst _default = PeopleCard;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(PeopleCard, \"PeopleCard\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/NewProcess/PeopleCard.tsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/NewProcess/PeopleCard.tsx\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/NewProcess/PeopleCard.tsx"],"names":["React","Form","Divider","Row","Col","Button","Card","DeleteOutlined","theme","PersonInput","PersonKindInput","PeopleCard","title","field_name","options","refetch","loading","fields","add","remove","map","field","fieldKey","prev_values","cur_values","prev_kind","kindPeopleId","cur_kind","prev_people","peopleId","cur_people","getFieldValue","has_kind_people","has_people","name","required","message","marginTop","color","colors","red"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Form, Divider, Row, Col, Button } from 'antd'\nimport Card from './Card'\nimport { DeleteOutlined } from '@ant-design/icons'\nimport { theme } from 'Styles/theme'\nimport { AllDataType as PersonDataType } from 'Components/Inputs/PersonInput/PersonInput'\nimport PersonInput from 'Components/Inputs/PersonInput/PersonInput'\nimport PersonKindInput from 'Components/Inputs/PersonKindInput/PersonKindInput'\n\ntype Props = {\n  title: string,\n  field_name: 'responsibles' | 'peoples' | 'activePole' | 'passivePole',\n  options?: PersonDataType[],\n  refetch: () => void,\n  loading: boolean,\n}\n\nconst PeopleCard: React.FC<Props> = ({ title, field_name, options, refetch, loading }) => (\n  <Card>\n    <Divider orientation=\"left\">{title}</Divider>\n    <Form.List name={field_name}>\n      {(fields, { add, remove }) => {\n        return (\n          <div>\n            {fields.map((field) => (\n              <Row key={field.fieldKey} gutter={8}>\n                <Form.Item\n                  noStyle\n                  shouldUpdate={(prev_values, cur_values) => {\n                    const prev_kind = prev_values[field_name][field.fieldKey]?.kindPeopleId\n                    const cur_kind = cur_values[field_name][field.fieldKey]?.kindPeopleId\n                    const prev_people = prev_values[field_name][field.fieldKey]?.peopleId\n                    const cur_people = cur_values[field_name][field.fieldKey]?.peopleId\n\n                    return prev_kind !== cur_kind || prev_people !== cur_people\n                  }}\n                >\n                  {({ getFieldValue }) => {\n                    const has_kind_people = !!getFieldValue([field_name, field.fieldKey, 'kindPeopleId'])\n                    const has_people = !!getFieldValue([field_name, field.fieldKey, 'peopleId'])\n\n                    return (\n                      <>\n                        <Col span={8}>\n                          <Form.Item\n                            {...field}\n                            name={[field.name, 'kindPeopleId']}\n                            fieldKey={[field.fieldKey, 'kindPeopleId']}\n                            rules={[{ required: has_people, message: 'Campo obrigatório' }]}\n                          >\n                            <PersonKindInput show_create_button/>\n                          </Form.Item>\n                        </Col>\n\n                        <Col span={14}>\n                          <Form.Item\n                            {...field}\n                            name={[field.name, 'peopleId']}\n                            fieldKey={[field.fieldKey, 'peopleId']}\n                            rules={[{ required: has_kind_people, message: 'Campo obrigatório' }]}\n                          >\n                            <PersonInput\n                              with_users={true}\n                              show_create_button\n                              person_options={options}\n                              fetch_options={false}\n                              refetch={refetch}\n                              external_loading={loading}\n                            />\n                          </Form.Item>\n                        </Col>\n                      </>\n                    )\n                  }}\n                </Form.Item>\n\n                <Col span={2}>\n                  <DeleteOutlined\n                    style={{ marginTop: '8px', color: theme.colors.red }}\n                    onClick={() => remove(field.name)}\n                  />\n                </Col>\n              </Row>\n            ))}\n            <Button type=\"primary\" onClick={() => add()}>Nova Pessoa</Button>\n          </div>\n        )\n      }}\n    </Form.List>\n  </Card>\n)\n\nexport default PeopleCard\n"]},"metadata":{},"sourceType":"module"}