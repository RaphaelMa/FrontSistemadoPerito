{"ast":null,"code":"var _jsxFileName = \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Modals/PaymentMethod/PaymentMethodModal.tsx\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { Card, Checkbox, Divider, Form, message, Modal, Spin, Tooltip } from 'antd';\nimport { useUserDispatch, useUserSelector } from 'Redux/UserReducer';\nimport { useGetPaymentType, useSaveHire } from './useHelpers';\nimport { useNavigate } from 'react-router-dom';\nimport useSaveCompany from 'Pages/Company/useSaveCompany';\nimport CompanyForm from 'Pages/Company/CompanyForm';\nimport successModal from 'Utils/successModal';\nimport messageError from 'Utils/messageError';\nimport styled from 'styled-components';\nimport Cards from 'Assets/cards.png';\nimport Boleto from 'Assets/boleto.png';\n\n// eslint-disable-next-line no-empty-pattern\nconst PaymentMethodModal = ({}, ref) => {\n  const [visible, setVisible] = useState(false);\n  const [plan, setPlan] = useState(null);\n  const [payment_type, setPaymentType] = useState([]);\n  const navigate = useNavigate();\n  const {\n    company\n  } = useUserSelector(state => state);\n  const [saveCompany, {\n    loading: saving\n  }] = useSaveCompany();\n  const [{\n    loading: payment_type_loading\n  }, getPaymentType] = useGetPaymentType();\n  const [{\n    loading: saving_hire\n  }, saveHire] = useSaveHire();\n  const dispatch = useUserDispatch();\n  const [form] = Form.useForm();\n\n  const fetchPaymentType = async () => {\n    try {\n      const {\n        data\n      } = await getPaymentType();\n      if (!(data === null || data === void 0 ? void 0 : data.length)) return;\n      setPaymentType(data);\n    } catch (e) {\n      messageError('2011140057');\n    }\n  };\n\n  useEffect(() => {\n    if (visible) fetchPaymentType(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [visible]);\n\n  const open = async ({\n    plan\n  }) => {\n    const company_data = {\n      _id: company === null || company === void 0 ? void 0 : company._id,\n      active: true,\n      name: company === null || company === void 0 ? void 0 : company.name,\n      email: company === null || company === void 0 ? void 0 : company.email,\n      kindCompany_id: company === null || company === void 0 ? void 0 : company.kindCompany_id,\n      cellPhone: company === null || company === void 0 ? void 0 : company.cellPhone,\n      document: company === null || company === void 0 ? void 0 : company.document,\n      cep: company === null || company === void 0 ? void 0 : company.cep,\n      state: company === null || company === void 0 ? void 0 : company.state,\n      city: company === null || company === void 0 ? void 0 : company.city,\n      neighborhood: company === null || company === void 0 ? void 0 : company.neighborhood,\n      address: company === null || company === void 0 ? void 0 : company.address,\n      addressNumber: company === null || company === void 0 ? void 0 : company.addressNumber\n    };\n    form.setFieldsValue(company_data);\n    setPlan({ ...plan\n    });\n    setVisible(true);\n  };\n\n  const close = () => setVisible(false);\n\n  useImperativeHandle(ref, () => ({\n    open,\n    close\n  }));\n\n  const handleSaveHire = async () => {\n    const typePayment_id = payment_type.find(payment => payment.description === 'Boleto');\n\n    try {\n      const {\n        data\n      } = await saveHire({\n        data: {\n          typePayment_id\n        }\n      });\n\n      if (!(data === null || data === void 0 ? void 0 : data.success)) {\n        message.error(data.message);\n        return;\n      }\n\n      successModal({\n        content: /*#__PURE__*/React.createElement(TextContainer, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }\n        }, \"Contrata\\xE7\\xE3o realizada com sucesso\"), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }\n        }, \"Dentro de alguns minutos voc\\xEA receber\\xE1 o boleto para pagamento em seu e-mail!\")),\n        duration: 5000,\n        onEndDuration: () => {\n          close();\n          return navigate('/');\n        }\n      });\n    } catch (e) {\n      messageError('2011140157');\n    }\n  };\n\n  const handleSaveCompany = async raw_values => {\n    try {\n      const values = { ...raw_values,\n        plan_id: plan === null || plan === void 0 ? void 0 : plan._id,\n        annual: plan === null || plan === void 0 ? void 0 : plan.annual\n      };\n      const {\n        data\n      } = await saveCompany(values);\n\n      if (!(data === null || data === void 0 ? void 0 : data.success)) {\n        message.error(data.message);\n        return;\n      }\n\n      dispatch({\n        type: 'UPDATE_COMPANY',\n        payload: data.company\n      });\n      handleSaveHire();\n    } catch (_e) {\n      messageError('2011140156');\n    }\n  };\n\n  const handleHire = () => {\n    form.validateFields().then(values => handleSaveCompany(values));\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    visible: visible,\n    closable: false,\n    okText: \"Finalizar\",\n    cancelText: \"Fechar\",\n    onOk: handleHire,\n    onCancel: close,\n    centered: true,\n    width: \"90%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Spin, {\n    spinning: saving || payment_type_loading || saving_hire,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    form: form,\n    layout: \"vertical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CompanyForm, {\n    width: 49,\n    setFieldsValue: form.setFieldsValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(StyledCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Divider, {\n    orientation: \"left\",\n    style: {\n      marginBottom: 40\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 15\n    }\n  }, \"Forma de Pagamento\"), /*#__PURE__*/React.createElement(PaymentMethodContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(MethodCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: Boleto,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(CheckboxStyled, {\n    checked: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Em breve\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(MethodCard, {\n    style: {\n      cursor: 'not-allowed'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: Cards,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(CheckboxStyled, {\n    disabled: true,\n    checked: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 21\n    }\n  })))))))));\n};\n\n__signature__(PaymentMethodModal, \"useState{[visible, setVisible](false)}\\nuseState{[plan, setPlan](null)}\\nuseState{[payment_type, setPaymentType]([])}\\nuseNavigate{navigate}\\nuseUserSelector{{ company }}\\nuseSaveCompany{[saveCompany, { loading: saving }]}\\nuseGetPaymentType{[{ loading: payment_type_loading }, getPaymentType]}\\nuseSaveHire{[{ loading: saving_hire }, saveHire]}\\nuseUserDispatch{dispatch}\\nuseForm{[form]}\\nuseEffect{}\\nuseImperativeHandle{}\", () => [useNavigate, useUserSelector, useSaveCompany, useGetPaymentType, useSaveHire, useUserDispatch, useImperativeHandle]);\n\nPaymentMethodModal.displayName = \"PaymentMethodModal\";\n\nconst _default = forwardRef(PaymentMethodModal);\n\nexport default _default;\nconst Content = styled.div.withConfig({\n  displayName: \"PaymentMethodModal__Content\",\n  componentId: \"sc-1r0ohgw-0\"\n})([\"justify-content:space-between;overflow-y:auto;overflow-x:hidden;display:flex;flex-direction:row;\"]);\nconst StyledCard = styled(Card).withConfig({\n  displayName: \"PaymentMethodModal__StyledCard\",\n  componentId: \"sc-1r0ohgw-1\"\n})([\"width:49%;height:100%;.ant-divider.ant-divider-horizontal{margin-top:0;}\"]);\nconst PaymentMethodContainer = styled.div.withConfig({\n  displayName: \"PaymentMethodModal__PaymentMethodContainer\",\n  componentId: \"sc-1r0ohgw-2\"\n})([\"width:100%;display:flex;flex-direction:row;align-items:center;justify-content:space-evenly;\"]);\nconst MethodCard = styled.div.withConfig({\n  displayName: \"PaymentMethodModal__MethodCard\",\n  componentId: \"sc-1r0ohgw-3\"\n})([\"padding:10px 30px 30px;display:flex;flex-direction:column;align-items:center;justify-content:center;\"]);\nconst Image = styled.img.withConfig({\n  displayName: \"PaymentMethodModal__Image\",\n  componentId: \"sc-1r0ohgw-4\"\n})([\"width:100px;height:65px;\"]);\nconst CheckboxStyled = styled(Checkbox).withConfig({\n  displayName: \"PaymentMethodModal__CheckboxStyled\",\n  componentId: \"sc-1r0ohgw-5\"\n})([\"margin-top:10px;\"]);\nconst TextContainer = styled.div.withConfig({\n  displayName: \"PaymentMethodModal__TextContainer\",\n  componentId: \"sc-1r0ohgw-6\"\n})([\"display:flex;flex-direction:column;text-align:center;font-size:16px;\"]);\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(PaymentMethodModal, \"PaymentMethodModal\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Modals/PaymentMethod/PaymentMethodModal.tsx\");\n  reactHotLoader.register(Content, \"Content\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Modals/PaymentMethod/PaymentMethodModal.tsx\");\n  reactHotLoader.register(StyledCard, \"StyledCard\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Modals/PaymentMethod/PaymentMethodModal.tsx\");\n  reactHotLoader.register(PaymentMethodContainer, \"PaymentMethodContainer\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Modals/PaymentMethod/PaymentMethodModal.tsx\");\n  reactHotLoader.register(MethodCard, \"MethodCard\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Modals/PaymentMethod/PaymentMethodModal.tsx\");\n  reactHotLoader.register(Image, \"Image\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Modals/PaymentMethod/PaymentMethodModal.tsx\");\n  reactHotLoader.register(CheckboxStyled, \"CheckboxStyled\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Modals/PaymentMethod/PaymentMethodModal.tsx\");\n  reactHotLoader.register(TextContainer, \"TextContainer\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Modals/PaymentMethod/PaymentMethodModal.tsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Modals/PaymentMethod/PaymentMethodModal.tsx\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Modals/PaymentMethod/PaymentMethodModal.tsx"],"names":["React","forwardRef","useEffect","useImperativeHandle","useState","Card","Checkbox","Divider","Form","message","Modal","Spin","Tooltip","useUserDispatch","useUserSelector","useGetPaymentType","useSaveHire","useNavigate","useSaveCompany","CompanyForm","successModal","messageError","styled","Cards","Boleto","PaymentMethodModal","ref","visible","setVisible","plan","setPlan","payment_type","setPaymentType","navigate","company","state","saveCompany","loading","saving","payment_type_loading","getPaymentType","saving_hire","saveHire","dispatch","form","useForm","fetchPaymentType","data","length","e","open","company_data","_id","active","name","email","kindCompany_id","cellPhone","document","cep","city","neighborhood","address","addressNumber","setFieldsValue","close","handleSaveHire","typePayment_id","find","payment","description","success","error","content","duration","onEndDuration","handleSaveCompany","raw_values","values","plan_id","annual","type","payload","_e","handleHire","validateFields","then","marginBottom","cursor","Content","div","StyledCard","PaymentMethodContainer","MethodCard","Image","img","CheckboxStyled","TextContainer"],"mappings":"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","sourcesContent":["import React, { forwardRef, useEffect, useImperativeHandle, useState } from 'react'\nimport { Card, Checkbox, Divider, Form, message, Modal, Spin, Tooltip } from 'antd'\nimport { useUserDispatch, useUserSelector } from 'Redux/UserReducer'\nimport { useGetPaymentType, useSaveHire } from './useHelpers'\nimport { useNavigate } from 'react-router-dom'\nimport { PaymentType } from './types'\nimport useSaveCompany from 'Pages/Company/useSaveCompany'\nimport CompanyForm from 'Pages/Company/CompanyForm'\nimport successModal from 'Utils/successModal'\nimport messageError from 'Utils/messageError'\nimport styled from 'styled-components'\n\nimport Cards from 'Assets/cards.png'\nimport Boleto from 'Assets/boleto.png'\n\ntype PlanType = {\n  _id: string,\n  annual: boolean\n}\n\ntype OpenProps = {\n  plan: PlanType\n}\n\ntype Open = ({ plan }: OpenProps) => void\n\nexport type ScheduleModalType = {\n  open: Open,\n  close: () => void\n}\n\n// eslint-disable-next-line no-empty-pattern\nconst PaymentMethodModal: React.ForwardRefRenderFunction<ScheduleModalType> = ({}, ref) => {\n  const [visible, setVisible] = useState(false)\n  const [plan, setPlan] = useState<PlanType | null>(null)\n  const [payment_type, setPaymentType] = useState<PaymentType[]>([])\n\n  const navigate = useNavigate()\n  const { company } = useUserSelector(state => state)\n  const [saveCompany, { loading: saving }] = useSaveCompany()\n  const [{ loading: payment_type_loading }, getPaymentType] = useGetPaymentType()\n  const [{ loading: saving_hire }, saveHire] = useSaveHire()\n  const dispatch = useUserDispatch()\n\n  const [form] = Form.useForm()\n\n  const fetchPaymentType = async () => {\n    try {\n      const { data } = await getPaymentType()\n\n      if (!data?.length) return\n\n      setPaymentType(data)\n    } catch (e) {\n      messageError('2011140057')\n    }\n  }\n\n  useEffect(() => {\n    if (visible) fetchPaymentType()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [visible])\n\n  const open: Open = async ({ plan }) => {\n    const company_data = {\n      _id: company?._id,\n      active: true,\n      name: company?.name,\n      email: company?.email,\n      kindCompany_id: company?.kindCompany_id,\n      cellPhone: company?.cellPhone,\n      document: company?.document,\n      cep: company?.cep,\n      state: company?.state,\n      city: company?.city,\n      neighborhood: company?.neighborhood,\n      address: company?.address,\n      addressNumber: company?.addressNumber,\n    }\n\n    form.setFieldsValue(company_data)\n    setPlan({ ...plan })\n    setVisible(true)\n  }\n\n  const close = () => setVisible(false)\n\n  useImperativeHandle(ref, () => ({ open, close }))\n\n  const handleSaveHire = async () => {\n    const typePayment_id = payment_type.find(payment => payment.description === 'Boleto')\n\n    try {\n      const { data } = await saveHire({ data: { typePayment_id } })\n\n      if (!data?.success) {\n        message.error(data.message)\n        return\n      }\n\n      successModal({\n        content: (\n          <TextContainer>\n            <p>Contratação realizada com sucesso</p>\n            <p>Dentro de alguns minutos você receberá o boleto para pagamento em seu e-mail!</p>\n          </TextContainer>\n        ),\n        duration: 5000,\n        onEndDuration: () => {\n          close()\n          return navigate('/')\n        },\n      })\n    } catch (e) {\n      messageError('2011140157')\n    }\n  }\n\n  const handleSaveCompany = async (raw_values: any) => {\n    try {\n      const values = { ...raw_values, plan_id: plan?._id, annual: plan?.annual }\n      const { data } = await saveCompany(values as any)\n\n      if (!data?.success) {\n        message.error(data.message)\n        return\n      }\n\n      dispatch({ type: 'UPDATE_COMPANY', payload: data.company })\n      handleSaveHire()\n    } catch (_e) {\n      messageError('2011140156')\n    }\n  }\n\n  const handleHire = () => {\n    form.validateFields()\n      .then(values => handleSaveCompany(values as any))\n  }\n\n  return (\n    <Modal\n      visible={visible}\n      closable={false}\n      okText=\"Finalizar\"\n      cancelText=\"Fechar\"\n      onOk={handleHire}\n      onCancel={close}\n      centered={true}\n      width=\"90%\"\n    >\n      <Spin spinning={saving || payment_type_loading || saving_hire}>\n        <Form form={form} layout=\"vertical\">\n          <Content>\n            <CompanyForm width={49} setFieldsValue={form.setFieldsValue}/>\n\n            <StyledCard>\n              <Divider orientation=\"left\" style={{ marginBottom: 40 }}>Forma de Pagamento</Divider>\n              <PaymentMethodContainer>\n                <MethodCard>\n                  <Image src={Boleto}/>\n                  <CheckboxStyled checked={true}/>\n                </MethodCard>\n\n                <Tooltip title=\"Em breve\">\n                  <MethodCard style={{ cursor: 'not-allowed' }}>\n                    <Image src={Cards}/>\n                    <CheckboxStyled disabled={true} checked={false}/>\n                  </MethodCard>\n                </Tooltip>\n              </PaymentMethodContainer>\n            </StyledCard>\n          </Content>\n        </Form>\n      </Spin>\n    </Modal>\n  )\n}\n\nexport default forwardRef(PaymentMethodModal)\n\nconst Content = styled.div`\n  justify-content: space-between;\n  overflow-y: auto;\n  overflow-x: hidden;\n  display: flex;\n  flex-direction: row;\n`\n\nconst StyledCard = styled(Card)`\n  width: 49%;\n  height: 100%;\n\n  .ant-divider.ant-divider-horizontal {\n    margin-top: 0;\n  }\n`\n\nconst PaymentMethodContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-evenly;\n`\n\nconst MethodCard = styled.div`\n  padding: 10px 30px 30px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`\n\nconst Image = styled.img`\n  width: 100px;\n  height: 65px;\n`\n\nconst CheckboxStyled = styled(Checkbox)`\n  margin-top: 10px;\n`\n\nconst TextContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  font-size: 16px;\n`\n"]},"metadata":{},"sourceType":"module"}