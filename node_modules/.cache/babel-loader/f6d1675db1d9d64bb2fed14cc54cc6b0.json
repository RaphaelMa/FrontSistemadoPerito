{"ast":null,"code":"var _jsxFileName = \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Deadlines/useColumns.tsx\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useMemo, useCallback } from 'react';\nimport { Button, Tooltip } from 'antd';\nimport { theme } from 'Styles/theme';\nimport { currencyFormatter } from 'Utils/formatters';\nimport { EyeOutlined, ImportOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport moment from 'moment';\n\nconst useColumns = ({\n  openDeadlineModal,\n  type\n}) => {\n  const orderDeadlines = useCallback((a, b, key) => {\n    const value_a = a[key];\n    const value_b = b[key];\n    if (!value_a) return 1;\n    if (!value_b) return -1;\n    if (value_a < value_b) return -1;\n    if (value_a > value_b) return 1;\n    return 0;\n  }, []);\n  return useMemo(() => {\n    const common_columns = [{\n      title: 'Número do Processo',\n      key: 'processNumber',\n      dataIndex: 'processNumber',\n      ellipsis: true,\n      sorter: (a, b) => orderDeadlines(a, b, 'processNumber')\n    }, {\n      title: 'Tipo de Prazo',\n      dataIndex: 'deadeLine_description',\n      key: 'deadeLine_description',\n      sorter: (a, b) => orderDeadlines(a, b, 'deadLine_description'),\n      ellipsis: true\n    }, {\n      title: 'Prazo',\n      dataIndex: 'deadeLine_date',\n      key: 'deadeLine_date',\n      align: 'center',\n      width: 130,\n      defaultSortOrder: 'ascend',\n      sorter: (a, b) => orderDeadlines(a, b, 'deadeLine_date'),\n      render: date => date ? moment(date).format('DD/MM/YYYY') : null\n    }, {\n      title: 'Situação do Processo',\n      dataIndex: 'situation_description',\n      key: 'situation_description',\n      sorter: (a, b) => orderDeadlines(a, b, 'situation_description'),\n      ellipsis: true\n    }, {\n      title: 'Situação Financ. do Proc.',\n      dataIndex: 'financialSituation_description',\n      key: 'financialSituation_description',\n      sorter: (a, b) => orderDeadlines(a, b, 'financialSituation_description'),\n      ellipsis: true\n    }, {\n      title: 'Valor Honorário',\n      dataIndex: 'honorary',\n      key: 'honorary',\n      ellipsis: true,\n      sorter: (a, b) => orderDeadlines(a, b, 'honorary'),\n      width: 130,\n      align: 'right',\n      render: value => currencyFormatter(value, {\n        cents: true\n      })\n    }, {\n      title: 'Ações',\n      key: 'action',\n      width: 90,\n      align: 'center',\n      render: (_, deadline) => {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n          type: \"text\",\n          icon: /*#__PURE__*/React.createElement(EyeOutlined, {\n            style: {\n              color: theme.colors.primary\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 23\n            }\n          }),\n          onClick: () => openDeadlineModal(deadline.process_id),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }\n        }), /*#__PURE__*/React.createElement(Tooltip, {\n          title: \"Abrir o processo\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          type: \"text\",\n          icon: /*#__PURE__*/React.createElement(LinkIcon, {\n            style: {\n              color: theme.colors.primary\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 25\n            }\n          }),\n          href: `/process/${deadline.process_id}`,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }\n        })));\n      }\n    }];\n\n    if (type === 'overdue') {\n      const new_column = {\n        title: 'Dias em Atrazo',\n        dataIndex: 'deadeLine_days',\n        ellipsis: true,\n        key: 'deadeLine_days',\n        sorter: (a, b) => orderDeadlines(a, b, 'deadLine_days'),\n        align: 'center',\n        width: 130\n      }; // @ts-ignore\n\n      common_columns.splice(3, 0, new_column);\n      return common_columns;\n    }\n\n    if (type === 'done') {\n      const new_column = {\n        title: 'Entregue Em',\n        dataIndex: 'deadeLine_done',\n        key: 'deadeLine_done',\n        sorter: (a, b) => orderDeadlines(a, b, 'deadeLine_done'),\n        align: 'center',\n        width: 130,\n        render: date => moment(date).format('DD/MM/YYYY')\n      }; // @ts-ignore\n\n      common_columns.splice(3, 0, new_column);\n      return common_columns;\n    }\n\n    const new_column = {\n      title: 'Dias Restantes',\n      dataIndex: 'deadeLine_days',\n      key: 'deadeLine_days',\n      ellipsis: true,\n      sorter: (a, b) => orderDeadlines(a, b, 'deadeLine_days'),\n      width: 130,\n      align: 'center'\n    }; // @ts-ignore\n\n    common_columns.splice(3, 0, new_column);\n    return common_columns;\n  }, [openDeadlineModal, orderDeadlines, type]);\n};\n\n__signature__(useColumns, \"useCallback{orderDeadlines}\\nuseMemo{}\");\n\nconst _default = useColumns;\nexport default _default;\nconst LinkIcon = styled(ImportOutlined).withConfig({\n  displayName: \"useColumns__LinkIcon\",\n  componentId: \"sc-1f2m91-0\"\n})([\"transform:rotateZ(3.142rad);cursor:pointer;\"]);\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(useColumns, \"useColumns\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Deadlines/useColumns.tsx\");\n  reactHotLoader.register(LinkIcon, \"LinkIcon\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Deadlines/useColumns.tsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Deadlines/useColumns.tsx\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Deadlines/useColumns.tsx"],"names":["React","useMemo","useCallback","Button","Tooltip","theme","currencyFormatter","EyeOutlined","ImportOutlined","styled","moment","useColumns","openDeadlineModal","type","orderDeadlines","a","b","key","value_a","value_b","common_columns","title","dataIndex","ellipsis","sorter","align","width","defaultSortOrder","render","date","format","value","cents","_","deadline","color","colors","primary","process_id","new_column","splice","LinkIcon"],"mappings":"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","sourcesContent":["import React, { useMemo, useCallback } from 'react'\nimport { Button, Tooltip } from 'antd'\nimport { theme } from 'Styles/theme'\nimport { DeadlineType } from './types'\nimport { ColumnsType } from 'antd/es/table'\nimport { currencyFormatter } from 'Utils/formatters'\nimport { EyeOutlined, ImportOutlined } from '@ant-design/icons'\nimport styled from 'styled-components'\nimport moment from 'moment'\n\ntype UseColumnsProps = {\n  type?: 'overdue' | 'done',\n  openDeadlineModal: (id: string) => void\n}\n\nconst useColumns = ({ openDeadlineModal, type }: UseColumnsProps) => {\n  const orderDeadlines = useCallback((a: any, b: any, key: any) => {\n    const value_a = a[key]\n    const value_b = b[key]\n\n    if (!value_a) return 1\n    if (!value_b) return -1\n    if (value_a < value_b) return -1\n    if (value_a > value_b) return 1\n\n    return 0\n  }, [])\n\n  return useMemo(() => {\n    const common_columns: ColumnsType<any> = [\n      {\n        title: 'Número do Processo',\n        key: 'processNumber',\n        dataIndex: 'processNumber',\n        ellipsis: true,\n        sorter: (a, b) => orderDeadlines(a, b, 'processNumber')\n      }, {\n        title: 'Tipo de Prazo',\n        dataIndex: 'deadeLine_description',\n        key: 'deadeLine_description',\n        sorter: (a, b) => orderDeadlines(a, b, 'deadLine_description'),\n        ellipsis: true\n      }, {\n        title: 'Prazo',\n        dataIndex: 'deadeLine_date',\n        key: 'deadeLine_date',\n        align: 'center',\n        width: 130,\n        defaultSortOrder: 'ascend',\n        sorter: (a, b) => orderDeadlines(a, b, 'deadeLine_date'),\n        render: (date) => date ? moment(date).format('DD/MM/YYYY') : null\n      }, {\n        title: 'Situação do Processo',\n        dataIndex: 'situation_description',\n        key: 'situation_description',\n        sorter: (a, b) => orderDeadlines(a, b, 'situation_description'),\n        ellipsis: true\n      }, {\n        title: 'Situação Financ. do Proc.',\n        dataIndex: 'financialSituation_description',\n        key: 'financialSituation_description',\n        sorter: (a, b) => orderDeadlines(a, b, 'financialSituation_description'),\n        ellipsis: true\n      }, {\n        title: 'Valor Honorário',\n        dataIndex: 'honorary',\n        key: 'honorary',\n        ellipsis: true,\n        sorter: (a, b) => orderDeadlines(a, b, 'honorary'),\n        width: 130,\n        align: 'right',\n        render: (value) => currencyFormatter(value, { cents: true })\n      }, {\n        title: 'Ações',\n        key: 'action',\n        width: 90,\n        align: 'center',\n        render: (_, deadline: DeadlineType) => {\n          return (\n            <>\n              <Button\n                type=\"text\"\n                icon={<EyeOutlined style={{ color: theme.colors.primary }}/>}\n                onClick={() => openDeadlineModal(deadline.process_id)}\n              />\n\n              <Tooltip title=\"Abrir o processo\">\n                <Button\n                  type=\"text\"\n                  icon={<LinkIcon style={{ color: theme.colors.primary }}/>}\n                  href={`/process/${deadline.process_id}`}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                />\n              </Tooltip>\n            </>\n          )\n        }\n      }\n    ]\n\n    if (type === 'overdue') {\n      const new_column = {\n        title: 'Dias em Atrazo',\n        dataIndex: 'deadeLine_days',\n        ellipsis: true,\n        key: 'deadeLine_days',\n        sorter: (a: any, b: any) => orderDeadlines(a, b, 'deadLine_days'),\n        align: 'center',\n        width: 130\n      }\n\n      // @ts-ignore\n      common_columns.splice(3, 0, new_column)\n\n      return common_columns\n    }\n\n    if (type === 'done') {\n      const new_column = {\n        title: 'Entregue Em',\n        dataIndex: 'deadeLine_done',\n        key: 'deadeLine_done',\n        sorter: (a: any, b: any) => orderDeadlines(a, b, 'deadeLine_done'),\n        align: 'center',\n        width: 130,\n        render: (date: string) => moment(date).format('DD/MM/YYYY')\n      }\n\n      // @ts-ignore\n      common_columns.splice(3, 0, new_column)\n\n      return common_columns\n    }\n\n    const new_column = {\n      title: 'Dias Restantes',\n      dataIndex: 'deadeLine_days',\n      key: 'deadeLine_days',\n      ellipsis: true,\n      sorter: (a: any, b: any) => orderDeadlines(a, b, 'deadeLine_days'),\n      width: 130,\n      align: 'center'\n    }\n\n    // @ts-ignore\n    common_columns.splice(3, 0, new_column)\n\n    return common_columns\n  }, [openDeadlineModal, orderDeadlines, type])\n}\n\nexport default useColumns\n\nconst LinkIcon = styled(ImportOutlined)`\n  transform: rotateZ(3.142rad);\n  cursor: pointer;\n`\n"]},"metadata":{},"sourceType":"module"}