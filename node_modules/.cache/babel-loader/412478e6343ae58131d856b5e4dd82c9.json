{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport useAxios from 'axios-hooks';\n\nconst useSaveColumn = () => {\n  const [{\n    loading\n  }, execute] = useAxios({\n    url: '/taskcolumn',\n    method: 'POST'\n  }, {\n    manual: true\n  });\n\n  const mutation = data => {\n    if (data._id) return execute({\n      url: `/taskcolumn/${data._id}`,\n      method: 'PUT',\n      data\n    });\n    return execute({\n      data\n    });\n  };\n\n  return [mutation, {\n    loading\n  }];\n};\n\n__signature__(useSaveColumn, \"useAxios{[{ loading }, execute]}\", () => [useAxios]);\n\nconst _default = useSaveColumn;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(useSaveColumn, \"useSaveColumn\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Modals/TaskColumn/useSaveColumn.ts\");\n  reactHotLoader.register(_default, \"default\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Modals/TaskColumn/useSaveColumn.ts\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Modals/TaskColumn/useSaveColumn.ts"],"names":["useAxios","useSaveColumn","loading","execute","url","method","manual","mutation","data","_id"],"mappings":";;;;;;;;;AAAA,OAAOA,QAAP,MAAqB,aAArB;;AAaA,MAAMC,aAAa,GAAG,MAAM;AAC1B,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAcC,OAAd,IAAyBH,QAAQ,CAAe;AAAEI,IAAAA,GAAG,EAAE,aAAP;AAAsBC,IAAAA,MAAM,EAAE;AAA9B,GAAf,EAAuD;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAvD,CAAvC;;AAEA,QAAMC,QAAQ,GAAKC,IAAD,IAAiD;AACjE,QAAIA,IAAI,CAACC,GAAT,EAAc,OAAON,OAAO,CAAC;AAAEC,MAAAA,GAAG,EAAG,eAAcI,IAAI,CAACC,GAAI,EAA/B;AAAkCJ,MAAAA,MAAM,EAAE,KAA1C;AAAiDG,MAAAA;AAAjD,KAAD,CAAd;AAEd,WAAOL,OAAO,CAAC;AAAEK,MAAAA;AAAF,KAAD,CAAd;AACD,GAJD;;AAMA,SAAO,CAACD,QAAD,EAAW;AAAEL,IAAAA;AAAF,GAAX,CAAP;AACD,CAVD;;cAAMD,a,6CAC2BD,Q;;iBAWlBC,a;AAAf;;;;;;;;;;0BAZMA,a","sourcesContent":["import useAxios from 'axios-hooks'\n\ntype ColumnType = {\n  _id: string,\n  description: string,\n  order: number,\n}\n\ntype QueryPayload = {\n  success: boolean,\n  column: ColumnType,\n}\n\nconst useSaveColumn = () => {\n  const [{ loading }, execute] = useAxios<QueryPayload>({ url: '/taskcolumn', method: 'POST' }, { manual: true })\n\n  const mutation =  (data: { _id?: string, description: string }) => {\n    if (data._id) return execute({ url: `/taskcolumn/${data._id}`, method: 'PUT', data })\n\n    return execute({ data })\n  }\n\n  return [mutation, { loading }] as const\n}\n\nexport default useSaveColumn\n"]},"metadata":{},"sourceType":"module"}