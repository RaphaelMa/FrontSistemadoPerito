{"ast":null,"code":"var _jsxFileName = \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Tasks/Kanban/Column/Column.tsx\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { memo } from 'react';\nimport { colors } from '../Constants';\nimport { isEqual } from 'lodash';\nimport { Button, Popconfirm } from 'antd';\nimport { EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport List from './List';\nimport styled from 'styled-components';\n\nconst Column = props => {\n  const {\n    title,\n    tasks,\n    column_id,\n    openColumnModal,\n    deleteColumn,\n    openTaskModal\n  } = props;\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    \"aria-label\": `${title} task list`,\n    title: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, title), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      minWidth: 64\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StyledButton, {\n    onClick: () => openColumnModal(column_id, title),\n    type: \"text\",\n    icon: /*#__PURE__*/React.createElement(EditIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 93\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Popconfirm, {\n    title: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }, \"Tem certeza que deseja excluir a coluna?\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, \"Todas as tarefas da coluna ser\\xE3o exclu\\xEDdas.\")),\n    onConfirm: () => deleteColumn(column_id),\n    placement: \"bottomRight\",\n    okText: \"Sim\",\n    cancelText: \"N\\xE3o\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(StyledButton, {\n    type: \"text\",\n    icon: /*#__PURE__*/React.createElement(DeleteIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 45\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(List, {\n    list_id: column_id,\n    list_type: \"TASKS\",\n    tasks: tasks,\n    openTaskModal: openTaskModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }));\n};\n\nColumn.displayName = \"Column\";\n\nconst _default = memo(Column, isEqual);\n\nexport default _default;\nconst Container = styled.div.withConfig({\n  displayName: \"Column__Container\",\n  componentId: \"ihp540-0\"\n})([\"margin:10px 0 0 10px;display:flex;flex-direction:column;\"]);\nconst Header = styled.div.withConfig({\n  displayName: \"Column__Header\",\n  componentId: \"ihp540-1\"\n})([\"display:flex;width:300px;align-items:center;justify-content:center;background-color:\", \";\"], colors.N30);\nconst Title = styled.h4.withConfig({\n  displayName: \"Column__Title\",\n  componentId: \"ihp540-2\"\n})([\"font-size:15px;font-weight:bold;padding:10px;transition:background-color ease 0.2s;flex-grow:1;user-select:none;position:relative;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;\"]);\nconst EditIcon = styled(EditOutlined).withConfig({\n  displayName: \"Column__EditIcon\",\n  componentId: \"ihp540-3\"\n})([\"color:\", \";\"], p => p.theme.colors.primary);\nconst DeleteIcon = styled(DeleteOutlined).withConfig({\n  displayName: \"Column__DeleteIcon\",\n  componentId: \"ihp540-4\"\n})([\"color:\", \";\"], p => p.theme.colors.red);\nconst StyledButton = styled(Button).withConfig({\n  displayName: \"Column__StyledButton\",\n  componentId: \"ihp540-5\"\n})([\"background:transparent;&:hover,&:focus{background:transparent;}\"]);\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Column, \"Column\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Tasks/Kanban/Column/Column.tsx\");\n  reactHotLoader.register(Container, \"Container\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Tasks/Kanban/Column/Column.tsx\");\n  reactHotLoader.register(Header, \"Header\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Tasks/Kanban/Column/Column.tsx\");\n  reactHotLoader.register(Title, \"Title\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Tasks/Kanban/Column/Column.tsx\");\n  reactHotLoader.register(EditIcon, \"EditIcon\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Tasks/Kanban/Column/Column.tsx\");\n  reactHotLoader.register(DeleteIcon, \"DeleteIcon\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Tasks/Kanban/Column/Column.tsx\");\n  reactHotLoader.register(StyledButton, \"StyledButton\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Tasks/Kanban/Column/Column.tsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Tasks/Kanban/Column/Column.tsx\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Tasks/Kanban/Column/Column.tsx"],"names":["React","memo","colors","isEqual","Button","Popconfirm","EditOutlined","DeleteOutlined","List","styled","Column","props","title","tasks","column_id","openColumnModal","deleteColumn","openTaskModal","minWidth","Container","div","Header","N30","Title","h4","EditIcon","p","theme","primary","DeleteIcon","red","StyledButton"],"mappings":"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","sourcesContent":["import React, { memo } from 'react'\nimport { colors } from '../Constants'\nimport { TaskType } from '../Types'\nimport { isEqual } from 'lodash'\nimport { Button, Popconfirm } from 'antd'\nimport { EditOutlined, DeleteOutlined } from '@ant-design/icons'\nimport { TaskColumnModalType } from 'Components/Modals/TaskColumn/TaskColumnModal'\nimport { TaskModalType } from 'Components/Modals/TaskModal/TaskModal'\nimport List from './List'\nimport styled from 'styled-components'\n\ntype Props = {\n  column_id: string,\n  title: string,\n  tasks: TaskType[],\n  index: number,\n  openColumnModal: TaskColumnModalType['open'],\n  deleteColumn: (id: string) => void,\n  openTaskModal: TaskModalType['open']\n}\n\nconst Column: React.FC<Props> = (props) => {\n  const { title, tasks, column_id, openColumnModal, deleteColumn, openTaskModal } = props\n\n  return (\n    <Container>\n      <Header>\n        <Title aria-label={`${title} task list`} title={title}>\n          {title}\n        </Title>\n        <div style={{ minWidth: 64 }}>\n          <StyledButton onClick={() => openColumnModal(column_id, title)} type=\"text\" icon={<EditIcon/>}/>\n          <Popconfirm\n            title={\n              <div>\n                <p>Tem certeza que deseja excluir a coluna?</p>\n                <p>Todas as tarefas da coluna serão excluídas.</p>\n              </div>\n            }\n            onConfirm={() => deleteColumn(column_id)}\n            placement=\"bottomRight\"\n            okText=\"Sim\"\n            cancelText=\"Não\"\n          >\n            <StyledButton type=\"text\" icon={<DeleteIcon/>}/>\n          </Popconfirm>\n        </div>\n      </Header>\n      <List list_id={column_id} list_type=\"TASKS\" tasks={tasks} openTaskModal={openTaskModal}/>\n    </Container>\n  )\n}\n\nexport default memo(Column, isEqual)\n\nconst Container = styled.div`\n  margin: 10px 0 0 10px;\n  display: flex;\n  flex-direction: column;\n`\n\nconst Header = styled.div`\n  display: flex;\n  width: 300px;\n  align-items: center;\n  justify-content: center;\n  background-color: ${colors.N30};\n`\n\nconst Title = styled.h4`\n  font-size: 15px;\n  font-weight: bold;\n  padding: 10px;\n  transition: background-color ease 0.2s;\n  flex-grow: 1;\n  user-select: none;\n  position: relative;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`\n\nconst EditIcon = styled(EditOutlined)`\n  color: ${p => p.theme.colors.primary};\n`\n\nconst DeleteIcon = styled(DeleteOutlined)`\n  color: ${p => p.theme.colors.red};\n`\n\nconst StyledButton = styled(Button)`\n  background: transparent;\n\n  &:hover, &:focus {\n    background: transparent;\n  }\n`\n"]},"metadata":{},"sourceType":"module"}