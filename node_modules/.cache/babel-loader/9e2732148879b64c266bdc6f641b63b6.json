{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport useAxios from 'axios-hooks';\n\nconst useGetNotifications = () => {\n  return useAxios({\n    url: '/notification',\n    method: \"GET\"\n  }, {\n    manual: true\n  });\n};\n\n__signature__(useGetNotifications, \"useAxios{}\", () => [useAxios]);\n\nconst _default = useGetNotifications;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(useGetNotifications, \"useGetNotifications\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/NotificationIcon/useGetNotifications.ts\");\n  reactHotLoader.register(_default, \"default\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/NotificationIcon/useGetNotifications.ts\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/NotificationIcon/useGetNotifications.ts"],"names":["useAxios","useGetNotifications","url","method","manual"],"mappings":";;;;;;;;;AAAA,OAAOA,QAAP,MAAqB,aAArB;;AAcA,MAAMC,mBAAmB,GAAG,MAAM;AAChC,SAAOD,QAAQ,CAAqB;AAAEE,IAAAA,GAAG,EAAE,eAAP;AAAwBC,IAAAA,MAAM,EAAE;AAAhC,GAArB,EAA8D;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAA9D,CAAf;AACD,CAFD;;cAAMH,mB,uBACGD,Q;;iBAGMC,mB;AAAf;;;;;;;;;;0BAJMA,mB","sourcesContent":["import useAxios from 'axios-hooks'\n\nexport type NotificationType = {\n  module: {\n    module_id: 'process' | string,\n    module_name: 'Processo' | string,\n  },\n  _id: string,\n  createAt: string,\n  description: string,\n  identifier: string,\n  url: string,\n}\n\nconst useGetNotifications = () => {\n  return useAxios<NotificationType[]>({ url: '/notification', method: \"GET\" }, { manual: true })\n}\n\nexport default useGetNotifications\n"]},"metadata":{},"sourceType":"module"}