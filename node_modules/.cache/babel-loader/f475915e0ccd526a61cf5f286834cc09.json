{"ast":null,"code":"var _jsxFileName = \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Inputs/TaskColumn/TaskColumnInput.tsx\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useEffect } from 'react';\nimport { Select } from 'antd';\nimport { deburr } from 'lodash';\nimport useGetColumns from './useGetColumns';\n\nconst TaskColumnInput = props => {\n  const [{\n    data,\n    loading\n  }, getColumns] = useGetColumns();\n  useEffect(() => {\n    getColumns(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/React.createElement(Select, Object.assign({\n    style: {\n      width: '100%'\n    },\n    loading: loading,\n    placeholder: \"Coluna\",\n    showSearch: true,\n    filterOption: (raw_value, option) => {\n      const value = deburr(raw_value).toLowerCase();\n      const option_value = deburr(option === null || option === void 0 ? void 0 : option.name).toLowerCase();\n      return option_value.indexOf(value) >= 0;\n    }\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }), data === null || data === void 0 ? void 0 : data.map(column => /*#__PURE__*/React.createElement(Select.Option, {\n    key: column._id,\n    value: column._id,\n    description: column.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, column.description)));\n};\n\n__signature__(TaskColumnInput, \"useGetColumns{[{ data, loading }, getColumns]}\\nuseEffect{}\", () => [useGetColumns]);\n\nTaskColumnInput.displayName = \"TaskColumnInput\";\nconst _default = TaskColumnInput;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(TaskColumnInput, \"TaskColumnInput\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Inputs/TaskColumn/TaskColumnInput.tsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Inputs/TaskColumn/TaskColumnInput.tsx\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Inputs/TaskColumn/TaskColumnInput.tsx"],"names":["React","useEffect","Select","deburr","useGetColumns","TaskColumnInput","props","data","loading","getColumns","width","raw_value","option","value","toLowerCase","option_value","name","indexOf","map","column","_id","description"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,SAASC,MAAT,QAAuB,QAAvB;AAEA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,eAAmD,GAAIC,KAAD,IAAW;AACrE,QAAM,CAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAD,EAAoBC,UAApB,IAAkCL,aAAa,EAArD;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,UAAU,GADI,CAEhB;AACC,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACE,oBAAC,MAAD;AACI,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KADX;AAEI,IAAA,OAAO,EAAEF,OAFb;AAGI,IAAA,WAAW,EAAC,QAHhB;AAII,IAAA,UAAU,MAJd;AAKI,IAAA,YAAY,EAAE,CAACG,SAAD,EAAYC,MAAZ,KAAuB;AACnC,YAAMC,KAAK,GAAGV,MAAM,CAACQ,SAAD,CAAN,CAAkBG,WAAlB,EAAd;AACA,YAAMC,YAAY,GAAGZ,MAAM,CAACS,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAEI,IAAT,CAAN,CAAqBF,WAArB,EAArB;AAEA,aAAOC,YAAY,CAACE,OAAb,CAAqBJ,KAArB,KAA+B,CAAtC;AACD;AAVL,KAWQP,KAXR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAaKC,IAbL,aAaKA,IAbL,uBAaKA,IAAI,CAAEW,GAAN,CAAUC,MAAM,iBACf,oBAAC,MAAD,CAAQ,MAAR;AAAe,IAAA,GAAG,EAAEA,MAAM,CAACC,GAA3B;AAAgC,IAAA,KAAK,EAAED,MAAM,CAACC,GAA9C;AAAmD,IAAA,WAAW,EAAED,MAAM,CAACE,WAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,MAAM,CAACE,WADV,CADD,CAbL,CADF;AAqBD,CA7BD;;cAAMhB,e,wEACoCD,a;;AADpCC,e;iBA+BSA,e;AAAf;;;;;;;;;;0BA/BMA,e","sourcesContent":["import React, { useEffect } from 'react'\nimport { Select } from 'antd'\nimport { deburr } from 'lodash'\nimport { SelectProps } from 'antd/lib/select'\nimport useGetColumns from './useGetColumns'\n\nconst TaskColumnInput: React.FC<SelectProps<any | any[]>> = (props) => {\n  const [{ data, loading }, getColumns] = useGetColumns()\n\n  useEffect(() => {\n    getColumns()\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <Select\n        style={{ width: '100%' }}\n        loading={loading}\n        placeholder=\"Coluna\"\n        showSearch\n        filterOption={(raw_value, option) => {\n          const value = deburr(raw_value).toLowerCase()\n          const option_value = deburr(option?.name).toLowerCase()\n\n          return option_value.indexOf(value) >= 0\n        }}\n        {...props}\n      >\n        {data?.map(column => (\n          <Select.Option key={column._id} value={column._id} description={column.description}>\n            {column.description}\n          </Select.Option>\n        ))}\n      </Select>\n  )\n}\n\nexport default TaskColumnInput\n"]},"metadata":{},"sourceType":"module"}