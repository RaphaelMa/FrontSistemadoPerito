{"ast":null,"code":"var _jsxFileName = \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/NewProcess/ExtraCard/MovementsTab/useColumns.tsx\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useMemo } from 'react';\nimport moment from 'moment';\nimport styled, { css } from 'styled-components';\n\nconst useColumns = ({\n  expanded_rows\n}) => {\n  return useMemo(() => [{\n    title: 'Data',\n    dataIndex: 'movementDate',\n    defaultSortOrder: 'descend',\n    key: 'movementDate',\n    width: 100,\n    align: 'center',\n    sorter: (a, b) => {\n      if (a.movementDate < b.movementDate) return -1;\n      if (a.movementDate > b.movementDate) return 1;\n      return 0;\n    },\n    render: date => {\n      if (!date) return null;\n      return moment(date).utc().format('DD/MM/YYYY');\n    }\n  }, {\n    title: 'Palavra Chave',\n    dataIndex: 'keyWords',\n    key: 'keyWords',\n    width: 150\n  }, {\n    title: 'Descrição',\n    dataIndex: 'description',\n    key: 'description',\n    render: (description, record) => {\n      const is_expanded = expanded_rows.some(row => row === record._id);\n      return /*#__PURE__*/React.createElement(Container, {\n        is_expanded: is_expanded,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }\n      }, description);\n    }\n  }], [expanded_rows]);\n};\n\n__signature__(useColumns, \"useMemo{}\");\n\nconst _default = useColumns;\nexport default _default;\nconst ellipsis_css = css([\"overflow:hidden;white-space:nowrap;text-overflow:ellipsis;word-break:keep-all;\"]);\nconst Container = styled.div.withConfig({\n  displayName: \"useColumns__Container\",\n  componentId: \"sc-11leams-0\"\n})([\"\", \"\"], p => !p.is_expanded && ellipsis_css);\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(useColumns, \"useColumns\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/NewProcess/ExtraCard/MovementsTab/useColumns.tsx\");\n  reactHotLoader.register(ellipsis_css, \"ellipsis_css\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/NewProcess/ExtraCard/MovementsTab/useColumns.tsx\");\n  reactHotLoader.register(Container, \"Container\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/NewProcess/ExtraCard/MovementsTab/useColumns.tsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/NewProcess/ExtraCard/MovementsTab/useColumns.tsx\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/NewProcess/ExtraCard/MovementsTab/useColumns.tsx"],"names":["React","useMemo","moment","styled","css","useColumns","expanded_rows","title","dataIndex","defaultSortOrder","key","width","align","sorter","a","b","movementDate","render","date","utc","format","description","record","is_expanded","some","row","_id","ellipsis_css","Container","div","p"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AAGA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;;AAMA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAyD;AAC1E,SAAOL,OAAO,CAAC,MAAO,CACpB;AACEM,IAAAA,KAAK,EAAE,MADT;AAEEC,IAAAA,SAAS,EAAE,cAFb;AAGEC,IAAAA,gBAAgB,EAAE,SAHpB;AAIEC,IAAAA,GAAG,EAAE,cAJP;AAKEC,IAAAA,KAAK,EAAE,GALT;AAMEC,IAAAA,KAAK,EAAE,QANT;AAOEC,IAAAA,MAAM,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAChB,UAAID,CAAC,CAACE,YAAF,GAAiBD,CAAC,CAACC,YAAvB,EAAqC,OAAO,CAAC,CAAR;AACrC,UAAIF,CAAC,CAACE,YAAF,GAAiBD,CAAC,CAACC,YAAvB,EAAqC,OAAO,CAAP;AAErC,aAAO,CAAP;AACD,KAZH;AAaEC,IAAAA,MAAM,EAAGC,IAAD,IAAU;AAChB,UAAI,CAACA,IAAL,EAAW,OAAO,IAAP;AAEX,aAAOhB,MAAM,CAACgB,IAAD,CAAN,CAAaC,GAAb,GAAmBC,MAAnB,CAA0B,YAA1B,CAAP;AACD;AAjBH,GADoB,EAmBlB;AACAb,IAAAA,KAAK,EAAE,eADP;AAEAC,IAAAA,SAAS,EAAE,UAFX;AAGAE,IAAAA,GAAG,EAAE,UAHL;AAIAC,IAAAA,KAAK,EAAE;AAJP,GAnBkB,EAyBpB;AACEJ,IAAAA,KAAK,EAAE,WADT;AAEEC,IAAAA,SAAS,EAAE,aAFb;AAGEE,IAAAA,GAAG,EAAE,aAHP;AAIEO,IAAAA,MAAM,EAAE,CAACI,WAAD,EAAcC,MAAd,KAAyB;AAC/B,YAAMC,WAAW,GAAGjB,aAAa,CAACkB,IAAd,CAAmBC,GAAG,IAAIA,GAAG,KAAKH,MAAM,CAACI,GAAzC,CAApB;AAEA,0BACE,oBAAC,SAAD;AAAW,QAAA,WAAW,EAAEH,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsCF,WAAtC,CADF;AAGD;AAVH,GAzBoB,CAAR,EAqCV,CAACf,aAAD,CArCU,CAAd;AAsCD,CAvCD;;cAAMD,U;;iBAyCSA,U;AAAf;AAEA,MAAMsB,YAAY,GAAGvB,GAAH,oFAAlB;AAOA,MAAMwB,SAAS,GAAGzB,MAAM,CAAC0B,GAAV;AAAA;AAAA;AAAA,aACXC,CAAC,IAAI,CAACA,CAAC,CAACP,WAAH,IAAkBI,YADZ,CAAf;;;;;;;;;;0BAlDMtB,U;0BA2CAsB,Y;0BAOAC,S","sourcesContent":["import React, { useMemo } from 'react'\nimport { MovementType } from './types'\nimport { ColumnsType } from 'antd/es/table'\nimport moment from 'moment'\nimport styled, { css } from 'styled-components'\n\ntype Props = {\n  expanded_rows: React.ReactText[]\n}\n\nconst useColumns = ({ expanded_rows }: Props): ColumnsType<MovementType> => {\n  return useMemo(() => ([\n    {\n      title: 'Data',\n      dataIndex: 'movementDate',\n      defaultSortOrder: 'descend',\n      key: 'movementDate',\n      width: 100,\n      align: 'center',\n      sorter: (a, b) => {\n        if (a.movementDate < b.movementDate) return -1\n        if (a.movementDate > b.movementDate) return 1\n\n        return 0\n      },\n      render: (date) => {\n        if (!date) return null\n\n        return moment(date).utc().format('DD/MM/YYYY')\n      }\n    },{\n      title: 'Palavra Chave',\n      dataIndex: 'keyWords',\n      key: 'keyWords',\n      width: 150,\n    },\n    {\n      title: 'Descrição',\n      dataIndex: 'description',\n      key: 'description',\n      render: (description, record) => {\n        const is_expanded = expanded_rows.some(row => row === record._id)\n\n        return (\n          <Container is_expanded={is_expanded}>{description}</Container>\n        )\n      }\n    },\n  ]), [expanded_rows])\n}\n\nexport default useColumns\n\nconst ellipsis_css = css`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  word-break: keep-all;\n`\n\nconst Container = styled.div<{ is_expanded: boolean }>`\n  ${p => !p.is_expanded && ellipsis_css}\n`\n"]},"metadata":{},"sourceType":"module"}