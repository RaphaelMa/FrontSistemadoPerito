{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport getBoundingClientRect from \"./getBoundingClientRect.js\"; // Returns the layout rect of an element relative to its offsetParent. Layout\n// means it doesn't take into account transforms.\n\nexport default function getLayoutRect(element) {\n  var clientRect = getBoundingClientRect(element); // Use the clientRect sizes if it's not been transformed.\n  // Fixes https://github.com/popperjs/popper-core/issues/1223\n\n  var width = element.offsetWidth;\n  var height = element.offsetHeight;\n\n  if (Math.abs(clientRect.width - width) <= 1) {\n    width = clientRect.width;\n  }\n\n  if (Math.abs(clientRect.height - height) <= 1) {\n    height = clientRect.height;\n  }\n\n  return {\n    x: element.offsetLeft,\n    y: element.offsetTop,\n    width: width,\n    height: height\n  };\n}\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(getLayoutRect, \"getLayoutRect\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js"],"names":["getBoundingClientRect","getLayoutRect","element","clientRect","width","offsetWidth","height","offsetHeight","Math","abs","x","offsetLeft","y","offsetTop"],"mappings":";;;;;;;;;AAAA,OAAOA,qBAAP,MAAkC,4BAAlC,C,CAAgE;AAChE;;AAEA,eAAe,SAASC,aAAT,CAAuBC,OAAvB,EAAgC;AAC7C,MAAIC,UAAU,GAAGH,qBAAqB,CAACE,OAAD,CAAtC,CAD6C,CACI;AACjD;;AAEA,MAAIE,KAAK,GAAGF,OAAO,CAACG,WAApB;AACA,MAAIC,MAAM,GAAGJ,OAAO,CAACK,YAArB;;AAEA,MAAIC,IAAI,CAACC,GAAL,CAASN,UAAU,CAACC,KAAX,GAAmBA,KAA5B,KAAsC,CAA1C,EAA6C;AAC3CA,IAAAA,KAAK,GAAGD,UAAU,CAACC,KAAnB;AACD;;AAED,MAAII,IAAI,CAACC,GAAL,CAASN,UAAU,CAACG,MAAX,GAAoBA,MAA7B,KAAwC,CAA5C,EAA+C;AAC7CA,IAAAA,MAAM,GAAGH,UAAU,CAACG,MAApB;AACD;;AAED,SAAO;AACLI,IAAAA,CAAC,EAAER,OAAO,CAACS,UADN;AAELC,IAAAA,CAAC,EAAEV,OAAO,CAACW,SAFN;AAGLT,IAAAA,KAAK,EAAEA,KAHF;AAILE,IAAAA,MAAM,EAAEA;AAJH,GAAP;AAMD;;;;;;;;;;0BArBuBL,a","sourcesContent":["import getBoundingClientRect from \"./getBoundingClientRect.js\"; // Returns the layout rect of an element relative to its offsetParent. Layout\n// means it doesn't take into account transforms.\n\nexport default function getLayoutRect(element) {\n  var clientRect = getBoundingClientRect(element); // Use the clientRect sizes if it's not been transformed.\n  // Fixes https://github.com/popperjs/popper-core/issues/1223\n\n  var width = element.offsetWidth;\n  var height = element.offsetHeight;\n\n  if (Math.abs(clientRect.width - width) <= 1) {\n    width = clientRect.width;\n  }\n\n  if (Math.abs(clientRect.height - height) <= 1) {\n    height = clientRect.height;\n  }\n\n  return {\n    x: element.offsetLeft,\n    y: element.offsetTop,\n    width: width,\n    height: height\n  };\n}"]},"metadata":{},"sourceType":"module"}