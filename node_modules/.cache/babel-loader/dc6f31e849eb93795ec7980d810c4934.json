{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport useAxios from 'axios-hooks';\nexport const useSaveFinancial = () => {\n  const [{\n    loading\n  }, execute] = useAxios({\n    url: '/financial',\n    method: 'POST'\n  }, {\n    manual: true\n  });\n\n  const mutation = data => {\n    // const data = removeFalsyValues(raw_data)\n    if (data._id) {\n      return execute({\n        url: `/financial/${data._id}`,\n        method: 'PUT',\n        data\n      });\n    }\n\n    return execute({\n      data\n    });\n  };\n\n  return [mutation, loading];\n};\n\n__signature__(useSaveFinancial, \"useAxios{[{ loading }, execute]}\", () => [useAxios]);\n\nexport const useDestroyFinancial = () => {\n  const [{\n    loading\n  }, execute] = useAxios({\n    method: 'DELETE'\n  }, {\n    manual: true\n  });\n\n  const mutation = id => execute({\n    url: `/financial/${id}`\n  });\n\n  return [mutation, loading];\n};\n\n__signature__(useDestroyFinancial, \"useAxios{[{ loading }, execute]}\", () => [useAxios]);\n\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(useSaveFinancial, \"useSaveFinancial\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Financial/useHelpers.ts\");\n  reactHotLoader.register(useDestroyFinancial, \"useDestroyFinancial\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Financial/useHelpers.ts\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Financial/useHelpers.ts"],"names":["useAxios","useSaveFinancial","loading","execute","url","method","manual","mutation","data","_id","useDestroyFinancial","id"],"mappings":";;;;;;;;;AAAA,OAAOA,QAAP,MAAqB,aAArB;AAiBA,OAAO,MAAMC,gBAAgB,GAAG,MAAkB;AAChD,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAcC,OAAd,IAAyBH,QAAQ,CAAe;AAAEI,IAAAA,GAAG,EAAE,YAAP;AAAqBC,IAAAA,MAAM,EAAE;AAA7B,GAAf,EAAsD;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAtD,CAAvC;;AAEA,QAAMC,QAAQ,GAAIC,IAAD,IAAyB;AACxC;AAEA,QAAIA,IAAI,CAACC,GAAT,EAAc;AACZ,aAAON,OAAO,CAAC;AAAEC,QAAAA,GAAG,EAAG,cAAaI,IAAI,CAACC,GAAI,EAA9B;AAAiCJ,QAAAA,MAAM,EAAE,KAAzC;AAAgDG,QAAAA;AAAhD,OAAD,CAAd;AACD;;AAED,WAAOL,OAAO,CAAC;AAAEK,MAAAA;AAAF,KAAD,CAAd;AACD,GARD;;AAUA,SAAO,CAACD,QAAD,EAAWL,OAAX,CAAP;AACD,CAdM;;cAAMD,gB,6CACoBD,Q;;AAejC,OAAO,MAAMU,mBAAmB,GAAG,MAA6D;AAC9F,QAAM,CAAC;AAAER,IAAAA;AAAF,GAAD,EAAcC,OAAd,IAAyBH,QAAQ,CAAe;AAAEK,IAAAA,MAAM,EAAE;AAAV,GAAf,EAAqC;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAArC,CAAvC;;AAEA,QAAMC,QAAQ,GAAII,EAAD,IAAgBR,OAAO,CAAC;AAAEC,IAAAA,GAAG,EAAG,cAAaO,EAAG;AAAxB,GAAD,CAAxC;;AAEA,SAAO,CAACJ,QAAD,EAAWL,OAAX,CAAP;AACD,CANM;;cAAMQ,mB,6CACoBV,Q;;;;;;;;;;;0BAjBpBC,gB;0BAgBAS,mB","sourcesContent":["import useAxios from 'axios-hooks'\nimport { AxiosPromise } from 'axios'\nimport { FinancialType } from './types'\n\nexport type QueryPayload = {\n  success: boolean,\n  message?: string,\n  financial: { _id: string } & Omit<FinancialType, '_id'>\n  generalFinancial: {\n    pay: number,\n    receive: number,\n    total: number,\n  }\n}\n\ntype ReturnType = [(data: FinancialType) => AxiosPromise<QueryPayload>, boolean]\n\nexport const useSaveFinancial = (): ReturnType => {\n  const [{ loading }, execute] = useAxios<QueryPayload>({ url: '/financial', method: 'POST' }, { manual: true })\n\n  const mutation = (data: FinancialType) => {\n    // const data = removeFalsyValues(raw_data)\n\n    if (data._id) {\n      return execute({ url: `/financial/${data._id}`, method: 'PUT', data })\n    }\n\n    return execute({ data })\n  }\n\n  return [mutation, loading]\n}\n\nexport const useDestroyFinancial = (): [(id: string) => AxiosPromise<QueryPayload>, boolean] => {\n  const [{ loading }, execute] = useAxios<QueryPayload>({ method: 'DELETE' }, { manual: true })\n\n  const mutation = (id: string) => execute({ url: `/financial/${id}` })\n\n  return [mutation, loading]\n}\n"]},"metadata":{},"sourceType":"module"}