{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport { useMemo } from 'react';\nimport moment from 'moment';\n\nconst useColumns = () => {\n  return useMemo(() => [{\n    title: 'Data',\n    dataIndex: 'createAt',\n    key: 'createAt',\n    align: 'center',\n    width: 140,\n    render: createAt => {\n      if (!createAt) return null;\n      return moment(createAt).utc().format('DD/MM/YYYY HH:mm');\n    }\n  }, {\n    title: 'Ação',\n    dataIndex: 'action',\n    align: 'center',\n    render: action => action.action_name\n  }, {\n    title: 'Módulo',\n    dataIndex: 'module',\n    align: 'center',\n    render: module => module.module_name\n  }, {\n    title: 'Usuário',\n    dataIndex: 'user',\n    ellipsis: true,\n    render: user => user.user_name\n  }, {\n    title: 'Email',\n    dataIndex: 'user',\n    ellipsis: true,\n    render: user => user.user_email\n  }, {\n    title: 'Ações Realizadas',\n    dataIndex: 'record',\n    ellipsis: true,\n    render: record => {\n      var _record$, _record$$description;\n\n      return (_record$ = record[0]) === null || _record$ === void 0 ? void 0 : (_record$$description = _record$.description) === null || _record$$description === void 0 ? void 0 : _record$$description.replace(/\\\\n/, '');\n    }\n  }], []);\n};\n\n__signature__(useColumns, \"useMemo{}\");\n\nconst _default = useColumns;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(useColumns, \"useColumns\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/History/useColumns.tsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/History/useColumns.tsx\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/History/useColumns.tsx"],"names":["useMemo","moment","useColumns","title","dataIndex","key","align","width","render","createAt","utc","format","action","action_name","module","module_name","ellipsis","user","user_name","user_email","record","description","replace"],"mappings":";;;;;;;;;AAAA,SAASA,OAAT,QAAwB,OAAxB;AAGA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,MAAMC,UAAU,GAAG,MAAgC;AACjD,SAAOF,OAAO,CAAC,MAAO,CACpB;AACEG,IAAAA,KAAK,EAAE,MADT;AAEEC,IAAAA,SAAS,EAAE,UAFb;AAGEC,IAAAA,GAAG,EAAE,UAHP;AAIEC,IAAAA,KAAK,EAAE,QAJT;AAKEC,IAAAA,KAAK,EAAE,GALT;AAMEC,IAAAA,MAAM,EAAGC,QAAD,IAAc;AACpB,UAAI,CAACA,QAAL,EAAe,OAAO,IAAP;AAEf,aAAOR,MAAM,CAACQ,QAAD,CAAN,CAAiBC,GAAjB,GAAuBC,MAAvB,CAA8B,kBAA9B,CAAP;AACD;AAVH,GADoB,EAapB;AACER,IAAAA,KAAK,EAAE,MADT;AAEEC,IAAAA,SAAS,EAAE,QAFb;AAGEE,IAAAA,KAAK,EAAE,QAHT;AAIEE,IAAAA,MAAM,EAAGI,MAAD,IAAYA,MAAM,CAACC;AAJ7B,GAboB,EAmBpB;AACEV,IAAAA,KAAK,EAAE,QADT;AAEEC,IAAAA,SAAS,EAAE,QAFb;AAGEE,IAAAA,KAAK,EAAE,QAHT;AAIEE,IAAAA,MAAM,EAAGM,MAAD,IAAYA,MAAM,CAACC;AAJ7B,GAnBoB,EAyBpB;AACEZ,IAAAA,KAAK,EAAE,SADT;AAEEC,IAAAA,SAAS,EAAE,MAFb;AAGEY,IAAAA,QAAQ,EAAE,IAHZ;AAIER,IAAAA,MAAM,EAAGS,IAAD,IAAUA,IAAI,CAACC;AAJzB,GAzBoB,EA+BpB;AACEf,IAAAA,KAAK,EAAE,OADT;AAEEC,IAAAA,SAAS,EAAE,MAFb;AAGEY,IAAAA,QAAQ,EAAE,IAHZ;AAIER,IAAAA,MAAM,EAAGS,IAAD,IAAUA,IAAI,CAACE;AAJzB,GA/BoB,EAqCpB;AACEhB,IAAAA,KAAK,EAAE,kBADT;AAEEC,IAAAA,SAAS,EAAE,QAFb;AAGEY,IAAAA,QAAQ,EAAE,IAHZ;AAIER,IAAAA,MAAM,EAAGY,MAAD;AAAA;;AAAA,yBAAmCA,MAAM,CAAC,CAAD,CAAzC,qEAAmC,SAAWC,WAA9C,yDAAmC,qBAAwBC,OAAxB,CAAgC,KAAhC,EAAuC,EAAvC,CAAnC;AAAA;AAJV,GArCoB,CAAR,EA2CV,EA3CU,CAAd;AA4CD,CA7CD;;cAAMpB,U;;iBA+CSA,U;AAAf;;;;;;;;;;0BA/CMA,U","sourcesContent":["import { useMemo } from 'react'\nimport { ColumnsType } from 'antd/es/table'\nimport { HistoryType } from './types'\nimport moment from 'moment'\n\nconst useColumns = (): ColumnsType<HistoryType> => {\n  return useMemo(() => ([\n    {\n      title: 'Data',\n      dataIndex: 'createAt',\n      key: 'createAt',\n      align: 'center',\n      width: 140,\n      render: (createAt) => {\n        if (!createAt) return null\n\n        return moment(createAt).utc().format('DD/MM/YYYY HH:mm')\n      }\n    },\n    {\n      title: 'Ação',\n      dataIndex: 'action',\n      align: 'center',\n      render: (action) => action.action_name\n    },\n    {\n      title: 'Módulo',\n      dataIndex: 'module',\n      align: 'center',\n      render: (module) => module.module_name\n    },\n    {\n      title: 'Usuário',\n      dataIndex: 'user',\n      ellipsis: true,\n      render: (user) => user.user_name\n    },\n    {\n      title: 'Email',\n      dataIndex: 'user',\n      ellipsis: true,\n      render: (user) => user.user_email\n    },\n    {\n      title: 'Ações Realizadas',\n      dataIndex: 'record',\n      ellipsis: true,\n      render: (record: HistoryType['record']) => record[0]?.description?.replace(/\\\\n/, '')\n    },\n  ]), [])\n}\n\nexport default useColumns\n"]},"metadata":{},"sourceType":"module"}