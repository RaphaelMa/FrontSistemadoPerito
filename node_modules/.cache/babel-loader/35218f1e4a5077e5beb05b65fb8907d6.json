{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\n\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n\n  return this;\n}\n\nmodule.exports = setCacheAdd;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(HASH_UNDEFINED, \"HASH_UNDEFINED\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/node_modules/lodash/_setCacheAdd.js\");\n  reactHotLoader.register(setCacheAdd, \"setCacheAdd\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/node_modules/lodash/_setCacheAdd.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/node_modules/lodash/_setCacheAdd.js"],"names":["HASH_UNDEFINED","setCacheAdd","value","__data__","set","module","exports"],"mappings":";;;;;;;;;AAAA;AACA,IAAIA,cAAc,GAAG,2BAArB;AAEA;;;;;;;;;;;AAUA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,OAAKC,QAAL,CAAcC,GAAd,CAAkBF,KAAlB,EAAyBF,cAAzB;;AACA,SAAO,IAAP;AACD;;AAEDK,MAAM,CAACC,OAAP,GAAiBL,WAAjB;;;;;;;;;;0BAjBID,c;0BAYKC,W","sourcesContent":["/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\nmodule.exports = setCacheAdd;\n"]},"metadata":{},"sourceType":"script"}