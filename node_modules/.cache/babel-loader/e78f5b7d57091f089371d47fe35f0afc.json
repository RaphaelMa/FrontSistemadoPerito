{"ast":null,"code":"var _jsxFileName = \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/NewProcess/Files/FilesCard.tsx\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useState, useEffect } from 'react';\nimport { Divider, Empty, message } from 'antd';\nimport { WarningFilled } from '@ant-design/icons';\nimport { theme } from 'Styles/theme';\nimport { uniqueId } from 'lodash';\nimport moment from 'moment';\nimport readableSize from 'readable-size';\nimport Card from '../Card';\nimport DropzoneInput from 'Components/Inputs/DropzoneInput';\nimport FileList from './FileList';\nimport useUploadFile from './useUploadFile';\nimport useGetFiles from './useGetFiles';\nimport useDeleteFile from './useDeleteFile';\nimport messageError from 'Utils/messageError';\nimport { useUserSelector } from 'Redux/UserReducer';\n\nconst FilesCard = ({\n  process_id\n}) => {\n  const plan_modules = useUserSelector(state => {\n    var _state$company;\n\n    return (_state$company = state.company) === null || _state$company === void 0 ? void 0 : _state$company.plan.modules;\n  });\n  const permissions = useUserSelector(state => state.permissions);\n  const [files, setFiles] = useState([]);\n  const uploadFile = useUploadFile();\n  const getFiles = useGetFiles();\n  const [deleteFile, {\n    loading\n  }] = useDeleteFile();\n\n  const loadFiles = async () => {\n    if (!process_id) return;\n\n    try {\n      const {\n        data\n      } = await getFiles(process_id);\n      const uploaded_files = data.map(file => {\n        const size = parseFloat(file.size) * 1000 * 1000;\n        return {\n          id: file._id,\n          name: file.name,\n          created_at: file.createAt,\n          readable_size: readableSize(Math.round(size)),\n          preview: file.url,\n          uploaded: true,\n          error: false,\n          url: file.url\n        };\n      });\n      setFiles(uploaded_files);\n    } catch (error) {\n      console.log('[FilesCard] ', error);\n      messageError('202008201537');\n    }\n  };\n\n  useEffect(() => {\n    if ((plan_modules === null || plan_modules === void 0 ? void 0 : plan_modules.Attachment) && (permissions === null || permissions === void 0 ? void 0 : permissions.attachment.read)) loadFiles(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [process_id]);\n\n  const onDrop = accepted_files => {\n    const uploaded_files = accepted_files.map(file => ({\n      file,\n      id: uniqueId(),\n      name: file.name,\n      created_at: moment().utc().format('YYYY-MM-DD'),\n      readable_size: readableSize(file.size),\n      preview: URL.createObjectURL(file),\n      progress: 0,\n      uploaded: false,\n      error: false\n    }));\n    setFiles(prev => [...prev, ...uploaded_files]); // Realiza o upload dos arquivos de forma sincrona\n\n    const promisses = uploaded_files.reduce((promisse, file) => {\n      return promisse.then(() => processUpload(file));\n    }, Promise.resolve());\n    promisses.then();\n  };\n\n  const updateFile = (id, data) => {\n    setFiles(prev => prev.map(file => id === file.id ? { ...file,\n      ...data\n    } : file));\n  };\n\n  const onUploadProgress = (id, event) => {\n    const progress = Math.round(event.loaded * 100 / event.total);\n    updateFile(id, {\n      progress\n    });\n  };\n\n  const processUpload = async file => {\n    const data = new FormData();\n    data.append('file', file.file, file.name);\n\n    try {\n      const {\n        data: response\n      } = await uploadFile(process_id, data, event => onUploadProgress(file.id, event));\n      const {\n        success\n      } = response;\n\n      if (success) {\n        updateFile(file.id, {\n          uploaded: true,\n          id: response.file._id,\n          url: response.file.url\n        });\n        return;\n      }\n\n      updateFile(file.id, {\n        error: true,\n        message_error: response.message\n      });\n    } catch (error) {\n      console.log('[FilesCard] ', error);\n      updateFile(file.id, {\n        error: true,\n        message_error: 'Não foi possível realizar a criação do arquivo!'\n      });\n    }\n  };\n\n  const handleDelete = async id => {\n    try {\n      const {\n        data\n      } = await deleteFile(id);\n\n      if (data.success) {\n        message.success('Arquivo excluído com sucesso');\n        setFiles(prev => prev.filter(file => file.id !== id));\n      }\n    } catch (error) {\n      console.log(error);\n      messageError('202008212030');\n    }\n  };\n\n  if (!(plan_modules === null || plan_modules === void 0 ? void 0 : plan_modules.Attachment) || !(permissions === null || permissions === void 0 ? void 0 : permissions.attachment.read)) return null;\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Divider, {\n    orientation: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }, \"Anexos\"), process_id ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DropzoneInput, {\n    has_permission: permissions === null || permissions === void 0 ? void 0 : permissions.attachment.create,\n    onDrop: onDrop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FileList, {\n    loading: loading,\n    onDelete: handleDelete,\n    files: files,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(Empty, {\n    description: \"Voc\\xEA pode adicionar arquivos ap\\xF3s a cria\\xE7\\xE3o do processo\",\n    image: /*#__PURE__*/React.createElement(WarningFilled, {\n      width: 100,\n      style: {\n        fontSize: '100px',\n        color: theme.colors.light_gray\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }));\n};\n\n__signature__(FilesCard, \"useUserSelector{plan_modules}\\nuseUserSelector{permissions}\\nuseState{[files, setFiles]([])}\\nuseUploadFile{uploadFile}\\nuseGetFiles{getFiles}\\nuseDeleteFile{[deleteFile, { loading }]}\\nuseEffect{}\", () => [useUserSelector, useUserSelector, useUploadFile, useGetFiles, useDeleteFile]);\n\nFilesCard.displayName = \"FilesCard\";\nconst _default = FilesCard;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(FilesCard, \"FilesCard\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/NewProcess/Files/FilesCard.tsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/NewProcess/Files/FilesCard.tsx\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/NewProcess/Files/FilesCard.tsx"],"names":["React","useState","useEffect","Divider","Empty","message","WarningFilled","theme","uniqueId","moment","readableSize","Card","DropzoneInput","FileList","useUploadFile","useGetFiles","useDeleteFile","messageError","useUserSelector","FilesCard","process_id","plan_modules","state","company","plan","modules","permissions","files","setFiles","uploadFile","getFiles","deleteFile","loading","loadFiles","data","uploaded_files","map","file","size","parseFloat","id","_id","name","created_at","createAt","readable_size","Math","round","preview","url","uploaded","error","console","log","Attachment","attachment","read","onDrop","accepted_files","utc","format","URL","createObjectURL","progress","prev","promisses","reduce","promisse","then","processUpload","Promise","resolve","updateFile","onUploadProgress","event","loaded","total","FormData","append","response","success","message_error","handleDelete","filter","create","fontSize","color","colors","light_gray"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Divider, Empty, message } from 'antd'\nimport { DropzoneOptions } from 'react-dropzone'\nimport { WarningFilled } from '@ant-design/icons'\nimport { theme } from 'Styles/theme'\nimport { uniqueId } from 'lodash'\nimport moment from 'moment'\nimport readableSize from 'readable-size'\nimport Card from '../Card'\nimport DropzoneInput from 'Components/Inputs/DropzoneInput'\nimport FileList from './FileList'\nimport useUploadFile from './useUploadFile'\nimport useGetFiles from './useGetFiles'\nimport useDeleteFile from './useDeleteFile'\nimport messageError from 'Utils/messageError'\nimport { useUserSelector } from 'Redux/UserReducer'\n\nexport type FileType = {\n  file?: File,\n  created_at: string,\n  id: string,\n  name: string,\n  readable_size: string,\n  preview: string,\n  progress?: number,\n  uploaded: boolean,\n  error: boolean,\n  message_error?: string,\n  url?: string,\n}\n\ntype Props = {\n  process_id?: string\n}\n\nconst FilesCard: React.FC<Props> = ({ process_id }) => {\n  const plan_modules = useUserSelector(state => state.company?.plan.modules)\n  const permissions = useUserSelector(state => state.permissions)\n\n  const [files, setFiles] = useState<FileType[]>([])\n  const uploadFile = useUploadFile()\n  const getFiles = useGetFiles()\n  const [deleteFile, { loading }] = useDeleteFile()\n\n  const loadFiles = async () => {\n    if (!process_id) return\n\n    try {\n      const { data } = await getFiles(process_id)\n\n      const uploaded_files: FileType[] = data.map(file => {\n        const size = parseFloat(file.size) * 1000 * 1000\n\n        return {\n          id: file._id,\n          name: file.name,\n          created_at: file.createAt,\n          readable_size: readableSize(Math.round(size)),\n          preview: file.url,\n          uploaded: true,\n          error: false,\n          url: file.url\n        }\n      })\n\n      setFiles(uploaded_files)\n    } catch (error) {\n      console.log('[FilesCard] ', error)\n      messageError('202008201537')\n    }\n  }\n\n  useEffect(() => {\n    if (plan_modules?.Attachment && permissions?.attachment.read) loadFiles()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [process_id])\n\n  const onDrop: DropzoneOptions['onDropAccepted'] = (accepted_files) => {\n    const uploaded_files = accepted_files.map(file => ({\n      file,\n      id: uniqueId(),\n      name: file.name,\n      created_at: moment().utc().format('YYYY-MM-DD'),\n      readable_size: readableSize(file.size),\n      preview: URL.createObjectURL(file),\n      progress: 0,\n      uploaded: false,\n      error: false\n    }))\n\n    setFiles(prev => [...prev, ...uploaded_files])\n\n    // Realiza o upload dos arquivos de forma sincrona\n    const promisses = uploaded_files.reduce((promisse, file) => {\n      return promisse.then(() => processUpload(file))\n    }, Promise.resolve())\n\n    promisses.then()\n  }\n\n  const updateFile = (id: string, data: Partial<FileType>) => {\n    setFiles(prev => prev.map(file => (\n      id === file.id ? { ...file, ...data } : file\n    )))\n  }\n\n  const onUploadProgress = (id: string, event: any) => {\n    const progress = Math.round((event.loaded * 100) / event.total)\n\n    updateFile(id, { progress })\n  }\n\n  const processUpload = async (file: FileType) => {\n    const data = new FormData()\n    data.append('file', file.file!, file.name)\n\n    try {\n      const { data: response } = await uploadFile(process_id!, data, (event) => onUploadProgress(file.id, event))\n      const { success } = response\n\n      if (success) {\n        updateFile(file.id, { uploaded: true, id: response.file!._id, url: response.file!.url })\n        return\n      }\n\n      updateFile(file.id, { error: true, message_error: response.message })\n    } catch (error) {\n      console.log('[FilesCard] ', error)\n      updateFile(file.id, { error: true, message_error: 'Não foi possível realizar a criação do arquivo!' })\n    }\n  }\n\n  const handleDelete = async (id: string) => {\n    try {\n      const { data } = await deleteFile(id)\n\n      if (data.success) {\n        message.success('Arquivo excluído com sucesso')\n        setFiles(prev => prev.filter(file => file.id !== id))\n      }\n    } catch (error) {\n      console.log(error)\n      messageError('202008212030')\n    }\n\n  }\n\n  if (!plan_modules?.Attachment || !permissions?.attachment.read) return null\n\n  return (\n    <Card>\n      <Divider orientation=\"left\">Anexos</Divider>\n      {process_id\n        ? <>\n          <DropzoneInput has_permission={permissions?.attachment.create} onDrop={onDrop}/>\n          <FileList loading={loading} onDelete={handleDelete} files={files}/>\n        </>\n        : <Empty\n          description=\"Você pode adicionar arquivos após a criação do processo\"\n          image={\n            <WarningFilled width={100} style={{ fontSize: '100px', color: theme.colors.light_gray }}/>\n          }\n        />\n      }\n    </Card>\n  )\n}\n\nexport default FilesCard\n"]},"metadata":{},"sourceType":"module"}