{"ast":null,"code":"var _jsxFileName = \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Company/Company.tsx\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useEffect } from 'react';\nimport { Form, Modal, message, Input } from 'antd';\nimport { useUserSelector, useUserDispatch } from 'Redux/UserReducer';\nimport { updateCompanyData } from 'Redux/fetchActions';\nimport CompanyForm from './CompanyForm';\nimport messageError from 'Utils/messageError';\nimport successModal from 'Utils/successModal';\nimport useSaveCompany from './useSaveCompany';\n// import Accordions from 'Components/Accordions/Accordions'\nimport './styles.css';\n\nconst Company = () => {\n  const company = useUserSelector(state => state.company);\n  const permissions = useUserSelector(state => state.permissions);\n  const [form] = Form.useForm();\n  const {\n    setFieldsValue\n  } = form;\n  const [saveCompany, {\n    loading\n  }] = useSaveCompany();\n  const dispatch = useUserDispatch();\n  const {\n    active\n  } = company || {};\n  useEffect(() => {\n    // Faz o refetch dos dados quando entra, sÃ³ para manter os dados sempre atualizados\n    // TODO: Buscar somente os dados da empresa\n    updateCompanyData(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    form.setFieldsValue({ ...company,\n      plan_id: company === null || company === void 0 ? void 0 : company.plan.plan_id\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [company]);\n\n  const handleFormFinish = async values => {\n    try {\n      const response = await saveCompany(values);\n\n      if (response.data.success) {\n        successModal({\n          content: 'Empresa salva com sucesso'\n        });\n        dispatch({\n          type: 'UPDATE_COMPANY',\n          payload: response.data.company\n        });\n        return;\n      }\n\n      message.error(response.data.message);\n    } catch (error) {\n      messageError('202010312007');\n      console.log('[Company] ', error);\n    }\n  };\n\n  const confirmStatusChange = active_company => {\n    Modal.confirm({\n      title: /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }\n      }, \"A conta ser\\xE1 \", active_company ? 'ativada' : 'desativada', \"!\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 68\n        }\n      }), \"Deseja continuar?\"),\n      okText: 'Sim',\n      onOk: () => changeCompanyStatus(active_company)\n    });\n  };\n\n  const changeCompanyStatus = async active_company => {\n    const form_values = await form.validateFields();\n\n    try {\n      const response = await saveCompany({ ...form_values,\n        active: active_company\n      });\n\n      if (response.data.success) {\n        successModal({\n          content: `Empresa ${active_company ? 'ativado' : 'desativado'} com sucesso`\n        });\n        dispatch({\n          type: 'UPDATE_COMPANY',\n          payload: response.data.company\n        });\n        return;\n      }\n\n      message.error(response.data.message);\n    } catch (error) {\n      messageError('202010312014');\n      console.log('[Company] ', error);\n    }\n  };\n\n  return (\n    /*#__PURE__*/\n    // <FormContainer>\n    React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tabs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tab\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"checkbox\",\n      id: \"chck1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"tab-label\",\n      htmlFor: \"chck1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }\n    }, \"Empresa\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tab-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(CompanyForm, {\n      width: 40,\n      setFieldsValue: setFieldsValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }))))))) // </FormContainer>\n    // <Container>\n    //   <Form form={form} layout=\"vertical\" onFinish={handleFormFinish}>\n    //     {permissions?.company.update && (\n    //       <Footer justify=\"end\">\n    //         <Space>\n    //           <Button\n    //             disabled={loading}\n    //             loading={loading}\n    //             type=\"primary\"\n    //             htmlType=\"submit\"\n    //           >\n    //             Salvar\n    //           </Button>\n    //           {active ? (\n    //             <Button\n    //               disabled={loading}\n    //               loading={loading}\n    //               onClick={() => confirmStatusChange(false)}\n    //             >\n    //               Desativar\n    //             </Button>\n    //           ) : (\n    //             <Button\n    //               disabled={loading}\n    //               loading={loading}\n    //               onClick={() => confirmStatusChange(true)}\n    //             >\n    //               Ativar\n    //             </Button>\n    //           )}\n    //         </Space>\n    //       </Footer>\n    //     )}\n    //   </Form>\n    // </Container>\n\n  );\n};\n\n__signature__(Company, \"useUserSelector{company}\\nuseUserSelector{permissions}\\nuseForm{[form]}\\nuseSaveCompany{[saveCompany, { loading }]}\\nuseUserDispatch{dispatch}\\nuseEffect{}\\nuseEffect{}\", () => [useUserSelector, useUserSelector, useSaveCompany, useUserDispatch]);\n\nconst _default = Company;\nexport default _default; // const Container = styled.div`\n//   overflow-y: auto;\n//   overflow-x: hidden;\n//   padding: 20px 40px;\n//   height: calc(100% - 5rem);\n// `\n// const FormContainer = styled.div`\n//   display: flex;\n// `\n// const Footer = styled(Row)`\n//   width: 100%;\n//   position: sticky;\n//   bottom: 0;\n//   background: white;\n//   padding: 8px 0;\n// `\n\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Company, \"Company\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Company/Company.tsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Company/Company.tsx\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Company/Company.tsx"],"names":["React","useEffect","Form","Modal","message","Input","useUserSelector","useUserDispatch","updateCompanyData","CompanyForm","messageError","successModal","useSaveCompany","Company","company","state","permissions","form","useForm","setFieldsValue","saveCompany","loading","dispatch","active","plan_id","plan","handleFormFinish","values","response","data","success","content","type","payload","error","console","log","confirmStatusChange","active_company","confirm","title","okText","onOk","changeCompanyStatus","form_values","validateFields"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { Form, Row, Space, Button, Modal, message, Input } from 'antd'\nimport { useUserSelector, useUserDispatch } from 'Redux/UserReducer'\nimport { updateCompanyData } from 'Redux/fetchActions'\nimport { Store } from 'antd/lib/form/interface'\nimport styled from 'styled-components'\nimport CompanyForm from './CompanyForm'\nimport messageError from 'Utils/messageError'\nimport successModal from 'Utils/successModal'\nimport useSaveCompany from './useSaveCompany'\nimport PlanInformation from './PlanInformation'\n// import Accordions from 'Components/Accordions/Accordions'\nimport './styles.css';\n\nconst Company: React.FC = () => {\n  const company = useUserSelector(state => state.company)\n  const permissions = useUserSelector(state => state.permissions)\n\n  const [form] = Form.useForm()\n  const { setFieldsValue } = form\n  const [saveCompany, { loading }] = useSaveCompany()\n  const dispatch = useUserDispatch()\n  const { active } = company || {}\n\n  useEffect(() => {\n    // Faz o refetch dos dados quando entra, sÃ³ para manter os dados sempre atualizados\n    // TODO: Buscar somente os dados da empresa\n    updateCompanyData()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    form.setFieldsValue({ ...company, plan_id: company?.plan.plan_id })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [company])\n\n\n  const handleFormFinish = async (values: Store) => {\n    try {\n      const response = await saveCompany(values as any)\n\n      if (response.data.success) {\n        successModal({ content: 'Empresa salva com sucesso' })\n        dispatch({ type: 'UPDATE_COMPANY', payload: response.data.company })\n        return\n      }\n\n      message.error(response.data.message)\n    } catch (error) {\n      messageError('202010312007')\n      console.log('[Company] ', error)\n    }\n  }\n\n  const confirmStatusChange = (active_company: boolean) => {\n    Modal.confirm({\n      title: (\n        <span>\n          A conta serÃ¡ {active_company ? 'ativada' : 'desativada'}!<br />\n          Deseja continuar?\n        </span>\n      ),\n      okText: 'Sim',\n      onOk: () => changeCompanyStatus(active_company),\n    })\n  }\n\n  const changeCompanyStatus = async (active_company: boolean) => {\n    const form_values: any = await form.validateFields()\n\n    try {\n      const response = await saveCompany({ ...form_values, active: active_company })\n\n      if (response.data.success) {\n        successModal({ content: `Empresa ${active_company ? 'ativado' : 'desativado'} com sucesso` })\n        dispatch({ type: 'UPDATE_COMPANY', payload: response.data.company })\n        return\n      }\n\n      message.error(response.data.message)\n    } catch (error) {\n      messageError('202010312014')\n      console.log('[Company] ', error)\n    }\n  }\n\n  return (\n    // <FormContainer>\n    <>\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"tabs\">\n            <div className=\"tab\">\n              <Input type=\"checkbox\" id=\"chck1\" />\n              <label className=\"tab-label\" htmlFor=\"chck1\">Empresa</label>\n              <div className=\"tab-content\">\n                <CompanyForm width={40} setFieldsValue={setFieldsValue} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* <PlanInformation /> */}\n    </>\n    // </FormContainer>\n\n\n\n\n    // <Container>\n    //   <Form form={form} layout=\"vertical\" onFinish={handleFormFinish}>\n    //     {permissions?.company.update && (\n    //       <Footer justify=\"end\">\n    //         <Space>\n    //           <Button\n    //             disabled={loading}\n    //             loading={loading}\n    //             type=\"primary\"\n    //             htmlType=\"submit\"\n    //           >\n    //             Salvar\n    //           </Button>\n    //           {active ? (\n    //             <Button\n    //               disabled={loading}\n    //               loading={loading}\n    //               onClick={() => confirmStatusChange(false)}\n    //             >\n    //               Desativar\n    //             </Button>\n    //           ) : (\n    //             <Button\n    //               disabled={loading}\n    //               loading={loading}\n    //               onClick={() => confirmStatusChange(true)}\n    //             >\n    //               Ativar\n    //             </Button>\n    //           )}\n    //         </Space>\n    //       </Footer>\n    //     )}\n    //   </Form>\n\n    // </Container>\n  )\n}\n\nexport default Company\n\n// const Container = styled.div`\n//   overflow-y: auto;\n//   overflow-x: hidden;\n//   padding: 20px 40px;\n//   height: calc(100% - 5rem);\n// `\n\n// const FormContainer = styled.div`\n//   display: flex;\n// `\n\n// const Footer = styled(Row)`\n//   width: 100%;\n//   position: sticky;\n//   bottom: 0;\n//   background: white;\n//   padding: 8px 0;\n// `\n"]},"metadata":{},"sourceType":"module"}