{"ast":null,"code":"var _jsxFileName = \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/NewProcess/ProcessForm.tsx\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useEffect, useCallback, useState, useRef } from 'react';\nimport { Form, Row, Col, Input, Button, Space, Spin, message } from 'antd';\nimport { useNavigate } from 'react-router';\nimport PeopleCard from './PeopleCard';\nimport ProcessDataCard from './ProcessDataCard';\nimport ExpertiseCard from './ExpertiseCard';\nimport ExtraCard from './ExtraCard/ExtraCard';\nimport styled from 'styled-components';\nimport useSaveProcess from './useSaveProcess';\nimport messageError from 'Utils/messageError';\nimport successModal from 'Utils/successModal';\nimport useGetPrevisionDate from './useGetPrevisionDate';\nimport FilesCard from './Files/FilesCard';\nimport useGetProcess from './useGetProcess';\nimport moment from 'moment';\nimport useGetPeople from 'Components/Inputs/PersonInput/useGetPeople';\nimport useGetUsers from 'Components/Inputs/PersonInput/useGetUsers';\nimport CompanyInput from 'Components/Inputs/CompanyInput/CompanyInput';\nimport ImportButton from './ImportButton';\nimport { useUserSelector } from 'Redux/UserReducer';\nimport AdditionalPushModal from './AdditionalPushModal/AdditionalPushModal';\nlet prevision_date_count = 0;\nconst DATE_FIELDS = ['appointmentDate', 'expertiseDate', 'previsionReport', 'deliveryReport', 'clarificationReport', 'clarificationDeliveryReport', 'dateImpugnment', 'previsionImpugnment', 'deliveryImpugnment', 'clarificationImpugnment', 'clarificationDeliveryImpugnment', 'createAt'];\n\nconst ProcessForm = ({\n  id\n}) => {\n  const [import_key, setImportKey] = useState();\n  const [push_description, setPushDescription] = useState();\n  const additionalPushModalRef = useRef(null);\n  const [{\n    data: people = [],\n    loading: people_loading\n  }, getPeople] = useGetPeople();\n  const [{\n    data: users = [],\n    loading: users_loading\n  }, getUsers] = useGetUsers();\n  const [saveProcess, {\n    loading: save_loading\n  }] = useSaveProcess();\n  const [{\n    data,\n    loading\n  }, getProcess] = useGetProcess(); // TODO: Colocar no campo de datas para ficar mais facil de fazer a lógica\n\n  const [, getPrevisionDate] = useGetPrevisionDate();\n  const [form] = Form.useForm();\n  const navigate = useNavigate();\n  const plan_modules = useUserSelector(state => {\n    var _state$company;\n\n    return (_state$company = state.company) === null || _state$company === void 0 ? void 0 : _state$company.plan.modules;\n  });\n\n  const setFormValues = process => {\n    var _process$annotation;\n\n    Object.entries(process).forEach(([key, value]) => {\n      if (DATE_FIELDS.includes(key) && value) {\n        // @ts-ignore\n        process[key] = moment(value, 'YYYY-MM-DD');\n      }\n    });\n    const values = { ...process,\n      peoples: formatPeopleValuesToForm(process.peoples || []),\n      activePole: formatPeopleValuesToForm(process.activePole || []),\n      passivePole: formatPeopleValuesToForm(process.passivePole || []),\n      responsibles: formatPeopleValuesToForm(process.responsibles || []),\n      annotation: (_process$annotation = process.annotation) === null || _process$annotation === void 0 ? void 0 : _process$annotation.map(annotation => ({ ...annotation,\n        key: annotation._id\n      })),\n      acceptAppointment: process.acceptAppointment === undefined || process.acceptAppointment === null ? undefined : process.acceptAppointment ? 'true' : 'false',\n      freeJustice: process.freeJustice === undefined || process.freeJustice === null ? undefined : process.freeJustice ? 'true' : 'false',\n      favorite: process.favorite === undefined || process.favorite === null ? undefined : process.favorite ? 'true' : 'false'\n    };\n    delete values['movements'];\n    form.setFieldsValue(values);\n  };\n\n  const loadProcess = async () => {\n    if (!id) return;\n\n    try {\n      var _process$push;\n\n      const response = await getProcess(id);\n      const process = response.data;\n      setImportKey(process.statusImport_key);\n      setPushDescription((_process$push = process.push) === null || _process$push === void 0 ? void 0 : _process$push.push_description);\n      setFormValues(process);\n    } catch (error) {\n      messageError('20200022127');\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    loadProcess(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const formatPeopleValuesToForm = people => {\n    const new_peoples = [];\n    people === null || people === void 0 ? void 0 : people.forEach(person => {\n      new_peoples.push({\n        kindPeopleId: person.kindPeople.kindPeople_id,\n        peopleId: person.people.people_id\n      });\n    });\n    return new_peoples;\n  };\n\n  const normalizeValues = values => {\n    Object.entries(values).forEach(([key, value]) => {\n      if (DATE_FIELDS.includes(key) && value) {\n        values[key] = value.format('YYYY-MM-DD');\n      }\n    });\n    return { ...values,\n      annotation: values.annotation ? JSON.stringify(values.annotation) : undefined,\n      peoples: formatPeopleValues(values.peoples),\n      activePole: formatPeopleValues(values.activePole),\n      passivePole: formatPeopleValues(values.passivePole),\n      responsibles: formatPeopleValues(values.responsibles),\n      acceptAppointment: values.acceptAppointment === undefined ? undefined : values.acceptAppointment === 'true',\n      freeJustice: values.freeJustice === undefined ? undefined : values.freeJustice === 'true'\n    };\n  };\n\n  const formatPeopleValues = people => {\n    const new_peoples = [];\n    people === null || people === void 0 ? void 0 : people.forEach(person => {\n      if (!person.kindPeopleId || !person.peopleId) return;\n      new_peoples.push({\n        kindPeople: {\n          kindPeople_id: person.kindPeopleId\n        },\n        people: {\n          people_id: person.peopleId\n        }\n      });\n    });\n    return JSON.stringify(new_peoples);\n  };\n\n  const handleFormFinish = async raw_values => {\n    const values = normalizeValues(raw_values);\n\n    try {\n      // TODO: melhorar a tipagem\n      const response = await saveProcess(values);\n      console.log('RESPONSE SAVE PROCESS =>', response);\n\n      if (response.data.success) {\n        successModal({\n          content: 'Processo salvo com sucesso'\n        });\n        setTimeout(() => {\n          navigate('/process-list');\n        }, 1500);\n        return;\n      }\n\n      if (response.data.key === 'aditional_push') {\n        var _additionalPushModalR;\n\n        (_additionalPushModalR = additionalPushModalRef.current) === null || _additionalPushModalR === void 0 ? void 0 : _additionalPushModalR.open();\n        return;\n      }\n\n      message.error(response.data.message);\n    } catch (error) {\n      messageError('202008310110');\n      console.log('[ProcessForm] ', error);\n    }\n  };\n\n  const importProcess = async () => {\n    try {\n      const values = await form.validateFields();\n      handleFormFinish({ ...values,\n        statusProcessMonitoring: true\n      });\n    } catch (e) {\n      /** Ignora o erro */\n    }\n  }; // TODO: refatorar este código maravilhoso\n\n\n  const previsionDate = (changed_values, all_values) => {\n    const key = Object.keys(changed_values)[0];\n\n    if (['expertiseDate', 'reportDays', 'typeReportDays'].includes(key) && all_values.expertiseDate && all_values.reportDays && all_values.typeReportDays !== undefined) {\n      clearTimeout(prevision_date_count);\n      prevision_date_count = setTimeout(async () => {\n        const response = await getPrevisionDate({\n          data: {\n            typeDocument: 'report',\n            expertiseDate: all_values.expertiseDate.format('YYYY-MM-DD'),\n            reportDays: all_values.reportDays,\n            typeReportDays: all_values.typeReportDays\n          }\n        });\n\n        if (response.data.success) {\n          form.setFieldsValue({\n            'previsionReport': moment(response.data.previsionReport, 'YYYY-MM-DD')\n          });\n        }\n      }, 800);\n      return;\n    }\n\n    if (['dateImpugnment', 'impugnmentDays', 'typeImpugnmentDays'].includes(key) && all_values.dateImpugnment && all_values.impugnmentDays && all_values.typeImpugnmentDays !== undefined) {\n      clearTimeout(prevision_date_count);\n      prevision_date_count = setTimeout(async () => {\n        const response = await getPrevisionDate({\n          data: {\n            typeDocument: 'impugnment',\n            dateImpugnment: all_values.dateImpugnment.format('YYYY-MM-DD'),\n            impugnmentDays: all_values.impugnmentDays,\n            typeImpugnmentDays: all_values.typeImpugnmentDays\n          }\n        });\n\n        if (response.data.success) {\n          form.setFieldsValue({\n            'previsionImpugnment': moment(response.data.previsionImpugnment, 'YYYY-MM-DD')\n          });\n        }\n      }, 800);\n    }\n  };\n\n  const fecthPersonData = useCallback(() => {\n    getPeople();\n    getUsers(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    fecthPersonData(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const addAdditionalPush = async () => {\n    try {\n      var _additionalPushModalR2;\n\n      (_additionalPushModalR2 = additionalPushModalRef.current) === null || _additionalPushModalR2 === void 0 ? void 0 : _additionalPushModalR2.close();\n      const values = await form.validateFields();\n      handleFormFinish({ ...values,\n        additionalPush: true,\n        statusProcessMonitoring: true\n      });\n    } catch (error) {\n      console.log('[NewProcess] ', error);\n    }\n  };\n\n  const all_person_data = [];\n  const all_users_data = [];\n  people.forEach(person => all_person_data.push({ ...person,\n    type: 'people'\n  }));\n  users.forEach(user => {\n    all_users_data.push({ ...user,\n      type: 'user'\n    });\n    all_person_data.push({ ...user,\n      type: 'user'\n    });\n  });\n  return /*#__PURE__*/React.createElement(Form, {\n    layout: \"vertical\",\n    form: form,\n    initialValues: {\n      peoples: [{}],\n      activePole: [{}],\n      passivePole: [{}],\n      statusProcessMonitoring: false\n    },\n    onFinish: handleFormFinish,\n    onValuesChange: previsionDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Spin, {\n    spinning: loading || save_loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: 40,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"_id\",\n    noStyle: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"statusImport_key\",\n    noStyle: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"processNumber\",\n    rules: [{\n      required: true,\n      message: 'Campo obrigatório'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    autoFocus: true,\n    placeholder: \"Informe o n\\xFAmero do processo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"internalCode\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Controle Interno\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 19\n    }\n  }))), (plan_modules === null || plan_modules === void 0 ? void 0 : plan_modules.Multicompany) && /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"multicompany_id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CompanyInput, {\n    allowClear: true,\n    showSearch: true,\n    placeholder: \"Empresa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 21\n    }\n  })))))), /*#__PURE__*/React.createElement(Row, {\n    gutter: 40,\n    style: {\n      marginBottom: 24\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ImportButton, {\n    loading: save_loading,\n    disabled: loading || save_loading,\n    import_key: import_key,\n    description: push_description,\n    importProcess: importProcess,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    gutter: 40,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(PeopleCard, {\n    title: \"Peritos e assistentes\",\n    field_name: \"responsibles\",\n    options: all_users_data,\n    refetch: fecthPersonData,\n    loading: users_loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(PeopleCard, {\n    title: \"Polo Ativo\",\n    field_name: \"activePole\",\n    options: all_person_data,\n    refetch: fecthPersonData,\n    loading: people_loading || users_loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(PeopleCard, {\n    title: \"Polo Passivo\",\n    field_name: \"passivePole\",\n    options: all_person_data,\n    refetch: fecthPersonData,\n    loading: people_loading || users_loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(PeopleCard, {\n    title: \"Pessoas\",\n    field_name: \"peoples\",\n    options: all_person_data,\n    refetch: fecthPersonData,\n    loading: people_loading || users_loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    noStyle: true,\n    shouldUpdate: (prev, next) => prev._id !== next._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 17\n    }\n  }, ({\n    getFieldValue\n  }) => {\n    const process_id = getFieldValue('_id');\n    return /*#__PURE__*/React.createElement(FilesCard, {\n      process_id: process_id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 28\n      }\n    });\n  })))), /*#__PURE__*/React.createElement(Col, {\n    span: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ProcessDataCard, {\n    setFieldsValue: form.setFieldsValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ExpertiseCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ExtraCard, {\n    movements: (data === null || data === void 0 ? void 0 : data.movements) || [],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 17\n    }\n  })))))), /*#__PURE__*/React.createElement(Footer, {\n    justify: \"end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Space, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => navigate('/process-list'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 11\n    }\n  }, \"Cancelar\"), /*#__PURE__*/React.createElement(Button, {\n    disabled: loading || save_loading,\n    loading: save_loading,\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 11\n    }\n  }, \"Salvar\"))), /*#__PURE__*/React.createElement(AdditionalPushModal, {\n    onAccept: addAdditionalPush,\n    ref: additionalPushModalRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 7\n    }\n  }));\n};\n\n__signature__(ProcessForm, \"useState{[import_key, setImportKey]}\\nuseState{[push_description, setPushDescription]}\\nuseRef{additionalPushModalRef}\\nuseGetPeople{[{ data: people = [], loading: people_loading }, getPeople]}\\nuseGetUsers{[{ data: users = [], loading: users_loading }, getUsers]}\\nuseSaveProcess{[saveProcess, { loading: save_loading }]}\\nuseGetProcess{[{ data, loading }, getProcess]}\\nuseGetPrevisionDate{[, getPrevisionDate]}\\nuseForm{[form]}\\nuseNavigate{navigate}\\nuseUserSelector{plan_modules}\\nuseEffect{}\\nuseCallback{fecthPersonData}\\nuseEffect{}\", () => [useGetPeople, useGetUsers, useSaveProcess, useGetProcess, useGetPrevisionDate, useNavigate, useUserSelector]);\n\nProcessForm.displayName = \"ProcessForm\";\nconst _default = ProcessForm;\nexport default _default;\nconst Footer = styled(Row).withConfig({\n  displayName: \"ProcessForm__Footer\",\n  componentId: \"sc-1xq5h3u-0\"\n})([\"width:100%;position:sticky;bottom:-20px;background:white;padding:8px 0;\"]);\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(prevision_date_count, \"prevision_date_count\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/NewProcess/ProcessForm.tsx\");\n  reactHotLoader.register(DATE_FIELDS, \"DATE_FIELDS\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/NewProcess/ProcessForm.tsx\");\n  reactHotLoader.register(ProcessForm, \"ProcessForm\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/NewProcess/ProcessForm.tsx\");\n  reactHotLoader.register(Footer, \"Footer\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/NewProcess/ProcessForm.tsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/NewProcess/ProcessForm.tsx\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/NewProcess/ProcessForm.tsx"],"names":["React","useEffect","useCallback","useState","useRef","Form","Row","Col","Input","Button","Space","Spin","message","useNavigate","PeopleCard","ProcessDataCard","ExpertiseCard","ExtraCard","styled","useSaveProcess","messageError","successModal","useGetPrevisionDate","FilesCard","useGetProcess","moment","useGetPeople","useGetUsers","CompanyInput","ImportButton","useUserSelector","AdditionalPushModal","prevision_date_count","DATE_FIELDS","ProcessForm","id","import_key","setImportKey","push_description","setPushDescription","additionalPushModalRef","data","people","loading","people_loading","getPeople","users","users_loading","getUsers","saveProcess","save_loading","getProcess","getPrevisionDate","form","useForm","navigate","plan_modules","state","company","plan","modules","setFormValues","process","Object","entries","forEach","key","value","includes","values","peoples","formatPeopleValuesToForm","activePole","passivePole","responsibles","annotation","map","_id","acceptAppointment","undefined","freeJustice","favorite","setFieldsValue","loadProcess","response","statusImport_key","push","error","console","log","new_peoples","person","kindPeopleId","kindPeople","kindPeople_id","peopleId","people_id","normalizeValues","format","JSON","stringify","formatPeopleValues","handleFormFinish","raw_values","success","content","setTimeout","current","open","importProcess","validateFields","statusProcessMonitoring","e","previsionDate","changed_values","all_values","keys","expertiseDate","reportDays","typeReportDays","clearTimeout","typeDocument","previsionReport","dateImpugnment","impugnmentDays","typeImpugnmentDays","previsionImpugnment","fecthPersonData","addAdditionalPush","close","additionalPush","all_person_data","all_users_data","type","user","required","Multicompany","marginBottom","prev","next","getFieldValue","process_id","movements","Footer"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback, useState, useRef } from 'react'\nimport { Form, Row, Col, Input, Button, Space, Spin, message } from 'antd'\nimport { Store } from 'antd/lib/form/interface'\nimport { useNavigate } from 'react-router'\nimport PeopleCard from './PeopleCard'\nimport ResponsiblesCard from './ResponsiblesCard'\nimport ProcessDataCard from './ProcessDataCard'\nimport ExpertiseCard from './ExpertiseCard'\nimport ExtraCard from './ExtraCard/ExtraCard'\nimport styled from 'styled-components'\nimport useSaveProcess from './useSaveProcess'\nimport messageError from 'Utils/messageError'\nimport successModal from 'Utils/successModal'\nimport useGetPrevisionDate from './useGetPrevisionDate'\nimport FilesCard from './Files/FilesCard'\nimport useGetProcess, { ProcessType } from './useGetProcess'\nimport moment from 'moment'\nimport useGetPeople from 'Components/Inputs/PersonInput/useGetPeople'\nimport useGetUsers from 'Components/Inputs/PersonInput/useGetUsers'\nimport CompanyInput from 'Components/Inputs/CompanyInput/CompanyInput'\nimport ImportButton from './ImportButton'\nimport { useUserSelector } from 'Redux/UserReducer'\nimport { AllDataType as PersonDataType } from 'Components/Inputs/PersonInput/PersonInput'\nimport AdditionalPushModal, { AdditionalPushModalRefType } from './AdditionalPushModal/AdditionalPushModal'\n\nlet prevision_date_count: number = 0\n\nconst DATE_FIELDS = [\n  'appointmentDate',\n  'expertiseDate',\n  'previsionReport',\n  'deliveryReport',\n  'clarificationReport',\n  'clarificationDeliveryReport',\n  'dateImpugnment',\n  'previsionImpugnment',\n  'deliveryImpugnment',\n  'clarificationImpugnment',\n  'clarificationDeliveryImpugnment',\n  'createAt'\n]\n\ntype Props = {\n  id?: string,\n}\n\nconst ProcessForm: React.FC<Props> = ({ id }) => {\n  const [import_key, setImportKey] = useState<ProcessType['statusImport_key'] | undefined>()\n  const [push_description, setPushDescription] = useState<string | undefined>()\n\n  const additionalPushModalRef = useRef<AdditionalPushModalRefType>(null)\n\n  const [{ data: people = [], loading: people_loading }, getPeople] = useGetPeople()\n  const [{ data: users = [], loading: users_loading }, getUsers] = useGetUsers()\n  const [saveProcess, { loading: save_loading }] = useSaveProcess()\n  const [{ data, loading }, getProcess] = useGetProcess()\n  // TODO: Colocar no campo de datas para ficar mais facil de fazer a lógica\n  const [, getPrevisionDate] = useGetPrevisionDate()\n\n  const [form] = Form.useForm()\n  const navigate = useNavigate()\n  const plan_modules = useUserSelector(state => state.company?.plan.modules)\n\n  const setFormValues = (process: ProcessType) => {\n    Object.entries(process).forEach(([key, value]) => {\n      if (DATE_FIELDS.includes(key) && value) {\n        // @ts-ignore\n        process[key] = moment(value, 'YYYY-MM-DD')\n      }\n    })\n\n    const values = {\n      ...process,\n      peoples: formatPeopleValuesToForm(process.peoples || []),\n      activePole: formatPeopleValuesToForm(process.activePole || []),\n      passivePole: formatPeopleValuesToForm(process.passivePole || []),\n      responsibles: formatPeopleValuesToForm(process.responsibles || []),\n      annotation: process.annotation?.map(annotation => ({ ...annotation, key: annotation._id })),\n      acceptAppointment: process.acceptAppointment === undefined || process.acceptAppointment === null ? undefined\n        : process.acceptAppointment ? 'true' : 'false',\n      freeJustice: process.freeJustice === undefined || process.freeJustice === null ? undefined : process.freeJustice\n        ? 'true' : 'false',\n      favorite: process.favorite === undefined || process.favorite === null ? undefined : process.favorite\n        ? 'true' : 'false'\n    }\n\n    delete values['movements']\n    form.setFieldsValue(values)\n  }\n\n  const loadProcess = async () => {\n    if (!id) return\n\n    try {\n      const response = await getProcess(id)\n      const process = response.data\n      setImportKey(process.statusImport_key)\n      setPushDescription(process.push?.push_description)\n\n      setFormValues(process)\n    } catch (error) {\n      messageError('20200022127')\n      console.log(error)\n    }\n  }\n\n  useEffect(() => {\n    loadProcess()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const formatPeopleValuesToForm = (people: any[]) => {\n    const new_peoples: any[] = []\n\n    people?.forEach(person => {\n      new_peoples.push({\n        kindPeopleId: person.kindPeople.kindPeople_id,\n        peopleId: person.people.people_id\n      })\n    })\n\n    return new_peoples\n  }\n\n  const normalizeValues = (values: Store) => {\n    Object.entries(values).forEach(([key, value]) => {\n      if (DATE_FIELDS.includes(key) && value) {\n        values[key] = value.format('YYYY-MM-DD')\n      }\n    })\n\n    return {\n      ...values,\n      annotation: values.annotation ? JSON.stringify(values.annotation) : undefined,\n      peoples: formatPeopleValues(values.peoples),\n      activePole: formatPeopleValues(values.activePole),\n      passivePole: formatPeopleValues(values.passivePole),\n      responsibles: formatPeopleValues(values.responsibles),\n      acceptAppointment: values.acceptAppointment === undefined ? undefined : values.acceptAppointment === 'true',\n      freeJustice: values.freeJustice === undefined ? undefined : values.freeJustice === 'true'\n    }\n  }\n\n  const formatPeopleValues = (people: any[]) => {\n    const new_peoples: any[] = []\n\n    people?.forEach(person => {\n      if (!person.kindPeopleId || !person.peopleId) return\n\n      new_peoples.push({\n        kindPeople: { kindPeople_id: person.kindPeopleId }, people: { people_id: person.peopleId }\n      })\n    })\n\n    return JSON.stringify(new_peoples)\n  }\n\n  const handleFormFinish = async (raw_values: Store) => {\n    const values = normalizeValues(raw_values)\n\n    try {\n      // TODO: melhorar a tipagem\n      const response = await saveProcess(values as any)\n      console.log('RESPONSE SAVE PROCESS =>', response);\n\n      if (response.data.success) {\n        successModal({ content: 'Processo salvo com sucesso' })\n        setTimeout(() => {\n          navigate('/process-list')\n        }, 1500)\n        return\n      }\n\n      if (response.data.key === 'aditional_push') {\n        additionalPushModalRef.current?.open()\n        return\n      }\n\n      message.error(response.data.message)\n    } catch (error) {\n      messageError('202008310110')\n      console.log('[ProcessForm] ', error)\n    }\n  }\n\n  const importProcess = async () => {\n    try {\n      const values = await form.validateFields()\n      handleFormFinish({ ...values, statusProcessMonitoring: true })\n    } catch (e) { /** Ignora o erro */\n    }\n  }\n\n  // TODO: refatorar este código maravilhoso\n  const previsionDate = (changed_values: Store, all_values: Store) => {\n    const key = Object.keys(changed_values)[0]\n\n    if (['expertiseDate', 'reportDays', 'typeReportDays'].includes(key) && all_values.expertiseDate && all_values.reportDays && all_values.typeReportDays !== undefined) {\n      clearTimeout(prevision_date_count)\n      prevision_date_count = setTimeout(async () => {\n        const response = await getPrevisionDate({\n          data: {\n            typeDocument: 'report',\n            expertiseDate: all_values.expertiseDate.format('YYYY-MM-DD'),\n            reportDays: all_values.reportDays,\n            typeReportDays: all_values.typeReportDays\n          }\n        })\n        if (response.data.success) {\n          form.setFieldsValue({ 'previsionReport': moment(response.data.previsionReport, 'YYYY-MM-DD') })\n        }\n      }, 800)\n      return\n    }\n\n    if (['dateImpugnment', 'impugnmentDays', 'typeImpugnmentDays'].includes(key) && all_values.dateImpugnment && all_values.impugnmentDays && all_values.typeImpugnmentDays !== undefined) {\n      clearTimeout(prevision_date_count)\n      prevision_date_count = setTimeout(async () => {\n        const response = await getPrevisionDate({\n          data: {\n            typeDocument: 'impugnment',\n            dateImpugnment: all_values.dateImpugnment.format('YYYY-MM-DD'),\n            impugnmentDays: all_values.impugnmentDays,\n            typeImpugnmentDays: all_values.typeImpugnmentDays\n          }\n        })\n        if (response.data.success) {\n          form.setFieldsValue({ 'previsionImpugnment': moment(response.data.previsionImpugnment, 'YYYY-MM-DD') })\n        }\n      }, 800)\n    }\n  }\n\n  const fecthPersonData = useCallback(() => {\n    getPeople()\n    getUsers()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    fecthPersonData()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const addAdditionalPush = async () => {\n    try {\n      additionalPushModalRef.current?.close()\n      const values = await form.validateFields()\n      handleFormFinish({ ...values, additionalPush: true, statusProcessMonitoring: true })\n    } catch (error) {\n      console.log('[NewProcess] ', error)\n    }\n  }\n\n  const all_person_data: PersonDataType[] = []\n  const all_users_data: PersonDataType[] = []\n  people.forEach(person => all_person_data.push({ ...person, type: 'people' }))\n  users.forEach(user => {\n    all_users_data.push({ ...user, type: 'user' })\n    all_person_data.push({ ...user, type: 'user' })\n  })\n\n  return (\n    <Form\n      layout=\"vertical\"\n      form={form}\n      initialValues={{\n        peoples: [{}],\n        activePole: [{}],\n        passivePole: [{}],\n        statusProcessMonitoring: false\n      }}\n      onFinish={handleFormFinish}\n      onValuesChange={previsionDate}\n    >\n      <Spin spinning={loading || save_loading}>\n        <Row gutter={40}>\n          <Col span={10}>\n            <Row gutter={8}>\n              <Col span={12}>\n                <Form.Item name=\"_id\" noStyle>\n                  <Input type=\"hidden\"/>\n                </Form.Item>\n                <Form.Item name=\"statusImport_key\" noStyle>\n                  <Input type=\"hidden\"/>\n                </Form.Item>\n\n                <Form.Item\n                  name=\"processNumber\"\n                  rules={[\n                    { required: true, message: 'Campo obrigatório' }\n                  ]}\n                >\n                  <Input autoFocus placeholder=\"Informe o número do processo\"/>\n                </Form.Item>\n              </Col>\n\n              <Col span={12}>\n                <Form.Item name=\"internalCode\">\n                  <Input placeholder=\"Controle Interno\"/>\n                </Form.Item>\n              </Col>\n\n              {plan_modules?.Multicompany && (\n                <Col span={12}>\n                  <Form.Item name=\"multicompany_id\">\n                    <CompanyInput allowClear showSearch placeholder=\"Empresa\"/>\n                  </Form.Item>\n                </Col>\n              )}\n            </Row>\n          </Col>\n        </Row>\n        <Row gutter={40} style={{ marginBottom: 24 }}>\n          <Col span={10}>\n            <ImportButton\n              loading={save_loading}\n              disabled={loading || save_loading}\n              import_key={import_key}\n              description={push_description}\n              importProcess={importProcess}\n            />\n          </Col>\n        </Row>\n        <Row gutter={40}>\n          <Col span={10}>\n            <Row gutter={8}>\n              <Col span={24}>\n                <PeopleCard\n                  title=\"Peritos e assistentes\"\n                  field_name=\"responsibles\"\n                  options={all_users_data}\n                  refetch={fecthPersonData}\n                  loading={users_loading}\n                />\n              </Col>\n              \n              <Col span={24}>\n                <PeopleCard\n                  title=\"Polo Ativo\"\n                  field_name=\"activePole\"\n                  options={all_person_data}\n                  refetch={fecthPersonData}\n                  loading={people_loading || users_loading}\n                />\n              </Col>\n              <Col span={24}>\n                <PeopleCard\n                  title=\"Polo Passivo\"\n                  field_name=\"passivePole\"\n                  options={all_person_data}\n                  refetch={fecthPersonData}\n                  loading={people_loading || users_loading}\n                />\n              </Col>\n              <Col span={24}>\n                <PeopleCard\n                  title=\"Pessoas\"\n                  field_name=\"peoples\"\n                  options={all_person_data}\n                  refetch={fecthPersonData}\n                  loading={people_loading || users_loading}\n                />\n              </Col>\n              <Col span={24}>\n                <Form.Item\n                  noStyle\n                  shouldUpdate={(prev, next) => prev._id !== next._id}\n                >\n                  {({ getFieldValue }) => {\n                    const process_id = getFieldValue('_id')\n\n                    return <FilesCard process_id={process_id}/>\n                  }}\n                </Form.Item>\n              </Col>\n            </Row>\n          </Col>\n          <Col span={14}>\n            <Row gutter={8}>\n              <Col span={24}>\n                <ProcessDataCard setFieldsValue={form.setFieldsValue}/>\n              </Col>\n              <Col span={24}>\n                <ExpertiseCard/>\n              </Col>\n              <Col span={24}>\n                <ExtraCard movements={data?.movements || []}/>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </Spin>\n\n      <Footer justify=\"end\">\n        <Space>\n          <Button onClick={() => navigate('/process-list')}>Cancelar</Button>\n\n          <Button\n            disabled={loading || save_loading}\n            loading={save_loading}\n            type=\"primary\"\n            htmlType=\"submit\"\n          >\n            Salvar\n          </Button>\n        </Space>\n      </Footer>\n\n      <AdditionalPushModal onAccept={addAdditionalPush} ref={additionalPushModalRef}/>\n    </Form>\n  )\n}\n\nexport default ProcessForm\n\nconst Footer = styled(Row)`\n  width: 100%;\n  position: sticky;\n  bottom: -20px;\n  background: white;\n  padding: 8px 0;\n`\n"]},"metadata":{},"sourceType":"module"}