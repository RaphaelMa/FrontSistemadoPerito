{"ast":null,"code":"var _jsxFileName = \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/MultiCompanies/useColumns.tsx\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport { Button, Popconfirm } from 'antd';\nimport { DeleteOutlined, EditOutlined } from '@ant-design/icons';\nimport { theme } from 'Styles/theme';\nimport React, { useMemo } from 'react';\nimport { useUserSelector } from 'Redux/UserReducer';\n\nconst useColumns = ({\n  handleDelete,\n  handleEdit\n}) => {\n  const permissions = useUserSelector(state => state.permissions);\n  return useMemo(() => [{\n    title: 'Nome',\n    dataIndex: 'description',\n    defaultSortOrder: 'ascend',\n    sorter: true,\n    ellipsis: true,\n    align: 'left',\n    key: 'description'\n  }, {\n    title: 'Ações',\n    key: 'actions',\n    align: 'center',\n    width: 90,\n    render: person => /*#__PURE__*/React.createElement(React.Fragment, null, (permissions === null || permissions === void 0 ? void 0 : permissions.company.update) && /*#__PURE__*/React.createElement(Popconfirm, {\n      title: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 19\n        }\n      }, \"A unidade ser\\xE1 exclu\\xEDda de todos os processos em que esta atrelada.\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 19\n        }\n      }, \"Deseja continuar?\")),\n      okText: \"Sim\",\n      cancelText: \"N\\xE3o\",\n      okType: \"danger\",\n      placement: \"topLeft\",\n      onConfirm: () => handleDelete(person._id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"text\",\n      icon: /*#__PURE__*/React.createElement(DeleteOutlined, {\n        style: {\n          color: theme.colors.red\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 23\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }\n    })), (permissions === null || permissions === void 0 ? void 0 : permissions.company.update) && /*#__PURE__*/React.createElement(Button, {\n      type: \"text\",\n      icon: /*#__PURE__*/React.createElement(EditOutlined, {\n        style: {\n          color: theme.colors.primary\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }\n      }),\n      onClick: () => handleEdit(person._id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }))\n  }], [handleDelete, handleEdit, permissions]);\n};\n\n__signature__(useColumns, \"useUserSelector{permissions}\\nuseMemo{}\", () => [useUserSelector]);\n\nconst _default = useColumns;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(useColumns, \"useColumns\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/MultiCompanies/useColumns.tsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/MultiCompanies/useColumns.tsx\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/MultiCompanies/useColumns.tsx"],"names":["Button","Popconfirm","DeleteOutlined","EditOutlined","theme","React","useMemo","useUserSelector","useColumns","handleDelete","handleEdit","permissions","state","title","dataIndex","defaultSortOrder","sorter","ellipsis","align","key","width","render","person","company","update","_id","color","colors","red","primary"],"mappings":";;;;;;;;;;;AAAA,SAASA,MAAT,EAAiBC,UAAjB,QAAmC,MAAnC;AACA,SAASC,cAAT,EAAyBC,YAAzB,QAA6C,mBAA7C;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AAGA,SAASC,eAAT,QAAgC,mBAAhC;;AAOA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAAD,KAAoF;AACrG,QAAMC,WAAW,GAAGJ,eAAe,CAACK,KAAK,IAAIA,KAAK,CAACD,WAAhB,CAAnC;AAEA,SAAOL,OAAO,CAAC,MAAO,CACpB;AACEO,IAAAA,KAAK,EAAE,MADT;AAEEC,IAAAA,SAAS,EAAE,aAFb;AAGEC,IAAAA,gBAAgB,EAAE,QAHpB;AAIEC,IAAAA,MAAM,EAAE,IAJV;AAKEC,IAAAA,QAAQ,EAAE,IALZ;AAMEC,IAAAA,KAAK,EAAE,MANT;AAOEC,IAAAA,GAAG,EAAE;AAPP,GADoB,EAUpB;AACEN,IAAAA,KAAK,EAAE,OADT;AAEEM,IAAAA,GAAG,EAAE,SAFP;AAGED,IAAAA,KAAK,EAAE,QAHT;AAIEE,IAAAA,KAAK,EAAE,EAJT;AAKEC,IAAAA,MAAM,EAAGC,MAAD,iBACN,0CACG,CAAAX,WAAW,SAAX,IAAAA,WAAW,WAAX,YAAAA,WAAW,CAAEY,OAAb,CAAqBC,MAArB,kBACC,oBAAC,UAAD;AACE,MAAA,KAAK,eACH,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qFADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFF,CAFJ;AAOE,MAAA,MAAM,EAAC,KAPT;AAQE,MAAA,UAAU,EAAC,QARb;AASE,MAAA,MAAM,EAAC,QATT;AAUE,MAAA,SAAS,EAAC,SAVZ;AAWE,MAAA,SAAS,EAAE,MAAMf,YAAY,CAACa,MAAM,CAACG,GAAR,CAX/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAaE,oBAAC,MAAD;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,eAAE,oBAAC,cAAD;AAAgB,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAEtB,KAAK,CAACuB,MAAN,CAAaC;AAAtB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,CAFJ,EAqBG,CAAAjB,WAAW,SAAX,IAAAA,WAAW,WAAX,YAAAA,WAAW,CAAEY,OAAb,CAAqBC,MAArB,kBACC,oBAAC,MAAD;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,eAAE,oBAAC,YAAD;AAAc,QAAA,KAAK,EAAE;AAAEE,UAAAA,KAAK,EAAEtB,KAAK,CAACuB,MAAN,CAAaE;AAAtB,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFR;AAGE,MAAA,OAAO,EAAE,MAAMnB,UAAU,CAACY,MAAM,CAACG,GAAR,CAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtBJ;AANJ,GAVoB,CAAR,EA+CV,CAAChB,YAAD,EAAeC,UAAf,EAA2BC,WAA3B,CA/CU,CAAd;AAgDD,CAnDD;;cAAMH,U,oDACgBD,e;;iBAoDPC,U;AAAf;;;;;;;;;;0BArDMA,U","sourcesContent":["import { Button, Popconfirm } from 'antd'\nimport { DeleteOutlined, EditOutlined } from '@ant-design/icons'\nimport { theme } from 'Styles/theme'\nimport React, { useMemo } from 'react'\nimport { ColumnsType } from 'antd/es/table'\nimport { MultiCompaniesType } from './types'\nimport { useUserSelector } from 'Redux/UserReducer'\n\ntype UseColumnsProps = {\n  handleDelete: (id: string) => void,\n  handleEdit: (id: string) => void,\n}\n\nconst useColumns = ({ handleDelete, handleEdit }: UseColumnsProps): ColumnsType<MultiCompaniesType> => {\n  const permissions = useUserSelector(state => state.permissions)\n\n  return useMemo(() => ([\n    {\n      title: 'Nome',\n      dataIndex: 'description',\n      defaultSortOrder: 'ascend',\n      sorter: true,\n      ellipsis: true,\n      align: 'left',\n      key: 'description',\n    },\n    {\n      title: 'Ações',\n      key: 'actions',\n      align: 'center',\n      width: 90,\n      render: (person: MultiCompaniesType) => (\n        <>\n          {permissions?.company.update && (\n            <Popconfirm\n              title={\n                <>\n                  <div>A unidade será excluída de todos os processos em que esta atrelada.</div>\n                  <div>Deseja continuar?</div>\n                </>\n              }\n              okText=\"Sim\"\n              cancelText=\"Não\"\n              okType=\"danger\"\n              placement=\"topLeft\"\n              onConfirm={() => handleDelete(person._id)}\n            >\n              <Button\n                type=\"text\"\n                icon={<DeleteOutlined style={{ color: theme.colors.red }}/>}\n              />\n            </Popconfirm>\n          )}\n          {permissions?.company.update && (\n            <Button\n              type=\"text\"\n              icon={<EditOutlined style={{ color: theme.colors.primary }}/>}\n              onClick={() => handleEdit(person._id)}\n            />\n          )}\n        </>\n      ),\n    },\n  ]), [handleDelete, handleEdit, permissions])\n}\n\nexport default useColumns\n"]},"metadata":{},"sourceType":"module"}