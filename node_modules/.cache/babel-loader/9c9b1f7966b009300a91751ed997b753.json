{"ast":null,"code":"var _jsxFileName = \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Login/LoginForm.tsx\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React from 'react';\nimport { Navigate } from 'react-router';\nimport { Form, Input, Button } from 'antd';\nimport { useUserSelector } from 'Redux/UserReducer';\nimport { userLogin } from 'Redux/fetchActions';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { useNavigate } from 'react-router';\n\nconst LoginForm = () => {\n  const [form] = Form.useForm();\n  const {\n    setFields\n  } = form;\n  const {\n    is_authenticated,\n    loading\n  } = useUserSelector(state => state);\n  const navigate = useNavigate();\n\n  const handleLogin = ({\n    email,\n    password\n  }) => {\n    userLogin({\n      email,\n      password,\n      remember: true\n    }).catch(error => {\n      const field = error.key === 'password' ? 'password' : 'email';\n      setFields([{\n        name: field,\n        errors: [error.message]\n      }]);\n    });\n  };\n\n  if (is_authenticated) return /*#__PURE__*/React.createElement(Navigate, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 32\n    }\n  });\n  return /*#__PURE__*/React.createElement(Form, {\n    form: form,\n    onFinish: handleLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"email\",\n    validateTrigger: ['onBlur', 'onChange'],\n    rules: [{\n      validateTrigger: 'onChange',\n      required: true,\n      message: 'Campo obrigatório'\n    }, {\n      validateTrigger: 'onBlur',\n      type: 'email',\n      message: 'Email inválido'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputStyled, {\n    placeholder: \"E-mail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"password\",\n    validateTrigger: ['onBlur', 'onChange'],\n    rules: [{\n      validateTrigger: 'onChange',\n      required: true,\n      message: 'Campo obrigatório'\n    }, {\n      validateTrigger: 'onBlur',\n      min: 6,\n      message: 'Deve possuir ao menos 6 caracteres'\n    }],\n    style: {\n      marginBottom: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PasswordInput, {\n    placeholder: \"Senha\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(RecoverPasswordText, {\n    to: \"/recover-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, \"Recuperar minha senha\"), /*#__PURE__*/React.createElement(ButtonsWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    block: true,\n    style: {\n      backgroundColor: '#00FECD'\n    },\n    loading: loading,\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"ACESSAR\"), /*#__PURE__*/React.createElement(Button, {\n    block: true,\n    loading: loading,\n    onClick: () => navigate('/register'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, \"CADASTRAR-SE\")));\n};\n\n__signature__(LoginForm, \"useForm{[form]}\\nuseUserSelector{{ is_authenticated, loading }}\\nuseNavigate{navigate}\", () => [useUserSelector, useNavigate]);\n\nLoginForm.displayName = \"LoginForm\";\nconst _default = LoginForm;\nexport default _default;\nconst InputStyled = styled(Input).withConfig({\n  displayName: \"LoginForm__InputStyled\",\n  componentId: \"sc-105md39-0\"\n})([\"height:48px;border-radius:25px;background-color:transparent !important;border:1px solid #00FECD;color:#00FECD !important;padding:0 22px;font-size:20px;\"]);\nconst PasswordInput = styled(Input.Password).withConfig({\n  displayName: \"LoginForm__PasswordInput\",\n  componentId: \"sc-105md39-1\"\n})([\"height:48px;border-radius:26px;background-color:transparent !important;border:1px solid #00FECD;padding:0 22px;input{background-color:transparent !important;color:#00FECD !important;font-size:20px;}.ant-input-suffix{font-size:20px;.ant-input-password-icon{color:gray !important;}}\"]);\nconst RecoverPasswordText = styled(Link).withConfig({\n  displayName: \"LoginForm__RecoverPasswordText\",\n  componentId: \"sc-105md39-2\"\n})([\"font-size:16px;text-align:start;color:white;text-decoration:underline;\"]);\nconst ButtonsWrapper = styled.div.withConfig({\n  displayName: \"LoginForm__ButtonsWrapper\",\n  componentId: \"sc-105md39-3\"\n})([\"display:flex;margin-top:32px;.ant-btn + .ant-btn{margin-left:32px;}button{height:42px;border-radius:26px;border-color:transparent;font-size:20px;color:#01383D;}@media (max-width:767px){flex-direction:column;.ant-btn + .ant-btn{margin-left:0;margin-top:16px;}}\"]);\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(LoginForm, \"LoginForm\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Login/LoginForm.tsx\");\n  reactHotLoader.register(InputStyled, \"InputStyled\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Login/LoginForm.tsx\");\n  reactHotLoader.register(PasswordInput, \"PasswordInput\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Login/LoginForm.tsx\");\n  reactHotLoader.register(RecoverPasswordText, \"RecoverPasswordText\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Login/LoginForm.tsx\");\n  reactHotLoader.register(ButtonsWrapper, \"ButtonsWrapper\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Login/LoginForm.tsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Login/LoginForm.tsx\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Login/LoginForm.tsx"],"names":["React","Navigate","Form","Input","Button","useUserSelector","userLogin","styled","Link","useNavigate","LoginForm","form","useForm","setFields","is_authenticated","loading","state","navigate","handleLogin","email","password","remember","catch","error","field","key","name","errors","message","validateTrigger","required","type","min","marginBottom","backgroundColor","InputStyled","PasswordInput","Password","RecoverPasswordText","ButtonsWrapper","div"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Navigate } from 'react-router'\nimport { Store } from 'antd/lib/form/interface'\nimport { Form, Input, Button } from 'antd'\nimport { useUserSelector } from 'Redux/UserReducer'\nimport { userLogin } from 'Redux/fetchActions'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom'\nimport { useNavigate } from 'react-router'\n\nconst LoginForm: React.FC = () => {\n  const [form] = Form.useForm()\n  const { setFields } = form\n  const { is_authenticated, loading } = useUserSelector(state => state)\n\n  const navigate = useNavigate()\n\n  const handleLogin = ({ email, password }: Store) => {\n    userLogin({ email, password, remember: true })\n      .catch((error: { key: string, message: string }) => {\n        const field = error.key === 'password' ? 'password' : 'email'\n\n        setFields([{ name: field, errors: [error.message] }])\n      })\n  }\n\n  if (is_authenticated) return <Navigate to=\"/\"/>\n\n  return (\n    <Form form={form} onFinish={handleLogin}>\n      <Form.Item\n        name=\"email\"\n        validateTrigger={['onBlur', 'onChange']}\n        rules={[\n          { validateTrigger: 'onChange', required: true, message: 'Campo obrigatório' },\n          { validateTrigger: 'onBlur', type: 'email', message: 'Email inválido' }\n        ]}\n      >\n        <InputStyled placeholder=\"E-mail\"/>\n      </Form.Item>\n\n      <Form.Item\n        name=\"password\"\n        validateTrigger={['onBlur', 'onChange']}\n        rules={[\n          { validateTrigger: 'onChange', required: true, message: 'Campo obrigatório' },\n          { validateTrigger: 'onBlur', min: 6, message: 'Deve possuir ao menos 6 caracteres' }\n        ]}\n        style={{ marginBottom: 8 }}\n      >\n        <PasswordInput placeholder=\"Senha\"/>\n      </Form.Item>\n\n      <RecoverPasswordText to=\"/recover-password\">Recuperar minha senha</RecoverPasswordText>\n\n      <ButtonsWrapper>\n        <Button block style={{ backgroundColor: '#00FECD' }} loading={loading} htmlType=\"submit\">\n          ACESSAR\n        </Button>\n\n        <Button block loading={loading} onClick={() => navigate('/register')}>\n          CADASTRAR-SE\n        </Button>\n      </ButtonsWrapper>\n    </Form>\n  )\n}\n\nexport default LoginForm\n\nconst InputStyled = styled(Input)`\n  height: 48px;\n  border-radius: 25px;\n  background-color: transparent !important;\n  border: 1px solid #00FECD;\n  color: #00FECD !important;\n  padding: 0 22px;\n  font-size: 20px;\n`\n\nconst PasswordInput = styled(Input.Password)`\n  height: 48px;\n  border-radius: 26px;\n  background-color: transparent !important;\n  border: 1px solid #00FECD;\n  padding: 0 22px;\n\n  input {\n    background-color: transparent !important;\n    color: #00FECD !important;\n    font-size: 20px;\n  }\n\n  .ant-input-suffix {\n    font-size: 20px;\n\n    .ant-input-password-icon {\n      color: gray !important;\n    }\n  }\n`\n\nconst RecoverPasswordText = styled(Link)`\n  font-size: 16px;\n  text-align: start;\n  color: white;\n  text-decoration: underline;\n`\n\nconst ButtonsWrapper = styled.div`\n  display: flex;\n  margin-top: 32px;\n\n  .ant-btn + .ant-btn {\n    margin-left: 32px;\n  }\n\n  button {\n    height: 42px;\n    border-radius: 26px;\n    border-color: transparent;\n    font-size: 20px;\n    color: #01383D;\n  }\n\n  @media (max-width: 767px) {\n    flex-direction: column;\n\n    .ant-btn + .ant-btn {\n      margin-left: 0;\n      margin-top: 16px;\n    }\n  }\n`\n"]},"metadata":{},"sourceType":"module"}