{"ast":null,"code":"var _jsxFileName = \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/ActiveAccount/ActiveAccountForm.tsx\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React from 'react';\nimport { Button, Col, Form, Input, message, Row, Typography } from 'antd';\nimport { useUserSelector, useUserDispatch } from 'Redux/UserReducer';\nimport { Navigate } from 'react-router';\nimport { theme } from 'Styles/theme';\nimport { useActiveAccount, useResendCode } from './useMutations';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { fetchInitalData } from 'Redux/fetchActions';\nimport messageError from 'Utils/messageError';\nimport styled from 'styled-components';\nimport successModal from 'Utils/successModal';\nconst {\n  Link\n} = Typography;\n\nconst ActiveAccountForm = () => {\n  const {\n    account_verified\n  } = useUserSelector(state => state);\n  const dispath = useUserDispatch();\n  const [{\n    loading: active_account_loading\n  }, mutation] = useActiveAccount();\n  const [{\n    loading: resend_code_loading\n  }, resendCodeMutation] = useResendCode();\n  const [form] = Form.useForm();\n  const {\n    setFields\n  } = form;\n\n  const handleSendNewCode = async () => {\n    try {\n      const {\n        data\n      } = await resendCodeMutation();\n\n      if (!data.success) {\n        message.error(data.message);\n        return;\n      }\n\n      successModal({\n        content: /*#__PURE__*/React.createElement(TextContainer, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }\n        }, \"Um novo c\\xF3digo foi gerado\"), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }\n        }, \"Dentro de alguns minutos voc\\xEA receber\\xE1 em seu e-mail!\")),\n        duration: 3000\n      });\n    } catch (e) {\n      messageError('2011010017');\n    }\n  };\n\n  const handleActiveAccount = async ({\n    code\n  }) => {\n    try {\n      const {\n        data\n      } = await mutation({\n        data: {\n          code\n        }\n      });\n\n      if (!data.success) {\n        if (data.key === 'code') {\n          setFields([{\n            name: 'code',\n            errors: [data.message]\n          }]);\n          return;\n        }\n\n        message.error(data.message);\n        return;\n      }\n\n      successModal({\n        content: 'Conta ativada com sucesso'\n      });\n      setTimeout(() => {\n        dispath({\n          type: 'SET_ACTIVE_ACCOUNT',\n          payload: true\n        });\n        fetchInitalData();\n      }, 1500);\n    } catch (e) {\n      messageError('2010312232');\n    }\n  };\n\n  if (account_verified) return /*#__PURE__*/React.createElement(Navigate, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 32\n    }\n  });\n  return /*#__PURE__*/React.createElement(Form, {\n    form: form,\n    initialValues: {\n      code: ''\n    },\n    onFinish: handleActiveAccount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(RowStyled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    md: 14,\n    lg: 10,\n    xl: 10,\n    xxl: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"code\",\n    validateTrigger: ['onChange'],\n    rules: [{\n      validateTrigger: 'onChange',\n      required: true,\n      message: 'Campo obrigatÃ³rio'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    autoFocus: true,\n    placeholder: \"Informe o c\\xF3digo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    gutter: {\n      xs: 0,\n      sm: 16\n    },\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 10,\n    md: 8,\n    lg: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    htmlType: \"submit\",\n    style: {\n      width: '100%'\n    },\n    type: \"primary\",\n    color: theme.colors.primary,\n    loading: active_account_loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, \"Validar c\\xF3digo\"))), /*#__PURE__*/React.createElement(ResendCodeRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, \"Caso n\\xE3o tenha recebido verifique sua caixa de spam ou clique abaixo para solicitar um novo c\\xF3digo.\"), /*#__PURE__*/React.createElement(ResendCodeLink, {\n    disabled: resend_code_loading,\n    onClick: handleSendNewCode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, resend_code_loading && /*#__PURE__*/React.createElement(LoadingOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 35\n    }\n  }), \" Gerar Novo C\\xF3digo\")));\n};\n\n__signature__(ActiveAccountForm, \"useUserSelector{{ account_verified }}\\nuseUserDispatch{dispath}\\nuseActiveAccount{[{ loading: active_account_loading }, mutation]}\\nuseResendCode{[{ loading: resend_code_loading }, resendCodeMutation]}\\nuseForm{[form]}\", () => [useUserSelector, useUserDispatch, useActiveAccount, useResendCode]);\n\nActiveAccountForm.displayName = \"ActiveAccountForm\";\nconst _default = ActiveAccountForm;\nexport default _default;\nconst RowStyled = styled(Row).attrs({\n  justify: 'center',\n  gutter: [0, 0]\n}).withConfig({\n  displayName: \"ActiveAccountForm__RowStyled\",\n  componentId: \"sc-1yrzu9d-0\"\n})([\"\"]);\nconst Text = styled.p.withConfig({\n  displayName: \"ActiveAccountForm__Text\",\n  componentId: \"sc-1yrzu9d-1\"\n})([\"margin:auto 0;font-size:12px;\"]);\nconst ResendCodeRow = styled(RowStyled).withConfig({\n  displayName: \"ActiveAccountForm__ResendCodeRow\",\n  componentId: \"sc-1yrzu9d-2\"\n})([\"margin-top:50px;flex-direction:column;text-align:center;\"]);\nconst ResendCodeLink = styled(Link).withConfig({\n  displayName: \"ActiveAccountForm__ResendCodeLink\",\n  componentId: \"sc-1yrzu9d-3\"\n})([\"font-weight:600;width:fit-content;align-self:center;\"]);\nconst TextContainer = styled.div.withConfig({\n  displayName: \"ActiveAccountForm__TextContainer\",\n  componentId: \"sc-1yrzu9d-4\"\n})([\"display:flex;flex-direction:column;text-align:center;font-size:16px;\"]);\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Link, \"Link\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/ActiveAccount/ActiveAccountForm.tsx\");\n  reactHotLoader.register(ActiveAccountForm, \"ActiveAccountForm\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/ActiveAccount/ActiveAccountForm.tsx\");\n  reactHotLoader.register(RowStyled, \"RowStyled\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/ActiveAccount/ActiveAccountForm.tsx\");\n  reactHotLoader.register(Text, \"Text\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/ActiveAccount/ActiveAccountForm.tsx\");\n  reactHotLoader.register(ResendCodeRow, \"ResendCodeRow\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/ActiveAccount/ActiveAccountForm.tsx\");\n  reactHotLoader.register(ResendCodeLink, \"ResendCodeLink\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/ActiveAccount/ActiveAccountForm.tsx\");\n  reactHotLoader.register(TextContainer, \"TextContainer\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/ActiveAccount/ActiveAccountForm.tsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/ActiveAccount/ActiveAccountForm.tsx\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/ActiveAccount/ActiveAccountForm.tsx"],"names":["React","Button","Col","Form","Input","message","Row","Typography","useUserSelector","useUserDispatch","Navigate","theme","useActiveAccount","useResendCode","LoadingOutlined","fetchInitalData","messageError","styled","successModal","Link","ActiveAccountForm","account_verified","state","dispath","loading","active_account_loading","mutation","resend_code_loading","resendCodeMutation","form","useForm","setFields","handleSendNewCode","data","success","error","content","duration","e","handleActiveAccount","code","key","name","errors","setTimeout","type","payload","validateTrigger","required","xs","sm","width","colors","primary","RowStyled","attrs","justify","gutter","Text","p","ResendCodeRow","ResendCodeLink","TextContainer","div"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Button, Col, Form, Input, message, Row, Typography } from 'antd'\nimport { useUserSelector, useUserDispatch } from 'Redux/UserReducer'\nimport { Store } from 'antd/lib/form/interface'\nimport { Navigate } from 'react-router'\nimport { theme } from 'Styles/theme'\nimport { useActiveAccount, useResendCode } from './useMutations'\nimport { LoadingOutlined } from '@ant-design/icons'\nimport { fetchInitalData } from 'Redux/fetchActions'\nimport messageError from 'Utils/messageError'\nimport styled from 'styled-components'\nimport successModal from 'Utils/successModal'\n\nconst { Link } = Typography\n\nconst ActiveAccountForm: React.FC = () => {\n  const { account_verified } = useUserSelector(state => state)\n  const dispath = useUserDispatch()\n\n  const [{ loading: active_account_loading }, mutation] = useActiveAccount()\n  const [{ loading: resend_code_loading }, resendCodeMutation] = useResendCode()\n\n  const [form] = Form.useForm()\n  const { setFields } = form\n\n  const handleSendNewCode = async () => {\n    try {\n      const { data } = await resendCodeMutation()\n\n      if (!data.success) {\n        message.error(data!.message)\n        return\n      }\n\n      successModal({\n        content: (\n          <TextContainer>\n            <p>Um novo cÃ³digo foi gerado</p>\n            <p>Dentro de alguns minutos vocÃª receberÃ¡ em seu e-mail!</p>\n          </TextContainer>\n        ),\n        duration: 3000,\n      })\n    } catch (e) {\n      messageError('2011010017')\n    }\n  }\n\n  const handleActiveAccount = async ({ code }: Store) => {\n    try {\n      const { data } = await mutation({ data: { code } })\n\n      if (!data.success) {\n        if (data.key === 'code') {\n          setFields([{ name: 'code', errors: [data.message as string] }])\n          return\n        }\n\n        message.error(data.message)\n        return\n      }\n\n      successModal({ content: 'Conta ativada com sucesso' })\n      setTimeout(() => {\n        dispath({ type: 'SET_ACTIVE_ACCOUNT', payload: true })\n        fetchInitalData()\n      }, 1500)\n    } catch (e) {\n      messageError('2010312232')\n    }\n  }\n\n  if (account_verified) return <Navigate to=\"/\"/>\n\n  return (\n    <Form\n      form={form}\n      initialValues={{ code: '' }}\n      onFinish={handleActiveAccount}\n    >\n      <RowStyled>\n        <Col xs={24} md={14} lg={10} xl={10} xxl={8}>\n          <Form.Item\n            name=\"code\"\n            validateTrigger={['onChange']}\n            rules={[{ validateTrigger: 'onChange', required: true, message: 'Campo obrigatÃ³rio' }]}\n          >\n            <Input autoFocus placeholder=\"Informe o cÃ³digo\"/>\n          </Form.Item>\n        </Col>\n      </RowStyled>\n\n      <Row gutter={{ xs: 0, sm: 16 }} justify=\"center\">\n        <Col xs={24} sm={10} md={8} lg={6}>\n          <Button\n            htmlType=\"submit\"\n            style={{ width: '100%' }}\n            type=\"primary\"\n            color={theme.colors.primary}\n            loading={active_account_loading}\n          >\n            Validar cÃ³digo\n          </Button>\n        </Col>\n      </Row>\n\n      <ResendCodeRow>\n        <Text>\n          Caso nÃ£o tenha recebido verifique sua caixa de spam ou clique abaixo para solicitar um novo cÃ³digo.\n        </Text>\n\n        <ResendCodeLink disabled={resend_code_loading} onClick={handleSendNewCode}>\n          {resend_code_loading && <LoadingOutlined/>} Gerar Novo CÃ³digo\n        </ResendCodeLink>\n      </ResendCodeRow>\n    </Form>\n  )\n}\n\nexport default ActiveAccountForm\n\nconst RowStyled = styled(Row).attrs({\n  justify: 'center',\n  gutter: [0, 0],\n})``\n\nconst Text = styled.p`\n  margin: auto 0;\n  font-size: 12px;\n`\n\nconst ResendCodeRow = styled(RowStyled)`\n  margin-top: 50px;\n  flex-direction: column;\n  text-align: center;\n`\n\nconst ResendCodeLink = styled(Link)`\n  font-weight: 600;\n  width: fit-content;\n  align-self: center;\n`\n\nconst TextContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  font-size: 16px;\n`\n\n"]},"metadata":{},"sourceType":"module"}