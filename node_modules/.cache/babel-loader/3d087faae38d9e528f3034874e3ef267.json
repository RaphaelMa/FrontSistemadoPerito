{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport useAxios from 'axios-hooks';\n\nconst useGetProcesses = () => {\n  const [{\n    loading,\n    data\n  }, getProcess] = useAxios({\n    method: \"GET\"\n  }, {\n    manual: true\n  });\n\n  const query = id => getProcess({\n    url: `/process/${id}`\n  });\n\n  return [{\n    loading,\n    data\n  }, query];\n};\n\n__signature__(useGetProcesses, \"useAxios{[{ loading, data }, getProcess]}\", () => [useAxios]);\n\nconst _default = useGetProcesses;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(useGetProcesses, \"useGetProcesses\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/NewProcess/useGetProcess.ts\");\n  reactHotLoader.register(_default, \"default\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/NewProcess/useGetProcess.ts\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/NewProcess/useGetProcess.ts"],"names":["useAxios","useGetProcesses","loading","data","getProcess","method","manual","query","id","url"],"mappings":";;;;;;;;;AAAA,OAAOA,QAAP,MAAqB,aAArB;;AA6FA,MAAMC,eAAe,GAAG,MAAM;AAC5B,QAAM,CAAC;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAD,EAAoBC,UAApB,IAAkCJ,QAAQ,CAAc;AAAEK,IAAAA,MAAM,EAAE;AAAV,GAAd,EAAiC;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAjC,CAAhD;;AAEA,QAAMC,KAAK,GAAIC,EAAD,IAAgBJ,UAAU,CAAC;AAAEK,IAAAA,GAAG,EAAG,YAAWD,EAAG;AAAtB,GAAD,CAAxC;;AAEA,SAAO,CAAC;AAAEN,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAD,EAAoBI,KAApB,CAAP;AACD,CAND;;cAAMN,e,sDACoCD,Q;;iBAO3BC,e;AAAf;;;;;;;;;;0BARMA,e","sourcesContent":["import useAxios from 'axios-hooks'\n\ntype KindPeopleType = {\n  kindPeople_id: string,\n  kindPeople_description: string,\n}\n\ntype PeopleType = {\n  people_id?: string,\n  people_name?: string,\n}\n\nexport type ProcessType = {\n  _id: string,\n  favorite: boolean,\n  processNumber: string,\n  statusProcessMonitoring?: boolean,\n  appointmentDate?: string,\n  judicialDistrict_id?: string,\n  judicialDistrict_description?: string,\n  judicialDistrictLevel_id?: string,\n  judicialDistrictLevel_description?: string,\n  passwordProcess?: string,\n  situation_id?: string,\n  situation_description?: string,\n  financialSituation_id?: string,\n  financialSituation_description?: string,\n  nature_id?: string,\n  nature_description?: string,\n  freeJustice?: boolean,\n  acceptAppointment?: boolean,\n  processValue?: number,\n  honoraryValue?: number,\n  arbitraryValue?: number,\n  processDescription?: string,\n  expert_id?: string,\n  expertName?: string,\n  expertiseDate?: string,\n  hour?: string,\n  place?: string,\n  reportDays?: number,\n  typeReportDays?: boolean,\n  previsionReport?: string,\n  deliveryReport?: string,\n  clarificationReport?: string,\n  clarificationDeliveryReport?: string,\n  dateImpugnment?: string,\n  impugnmentDays?: number,\n  typeImpugnmentDays?: boolean,\n  previsionImpugnment?: string,\n  deliveryImpugnment?: string,\n  clarificationImpugnment?: string,\n  clarificationDeliveryImpugnment?: string,\n  createAt?: string,\n  statusImport_key?: 'importing' | 'imported' | 'error_importing' | 'not_imported',\n  peoples?: {\n    _id: string,\n    kindPeople: KindPeopleType,\n    people: PeopleType,\n  }[],\n  activePole?: {\n    _id: string,\n    kindPeople: KindPeopleType,\n    people: PeopleType,\n  }[],\n  passivePole?: {\n    _id: string,\n    kindPeople: KindPeopleType,\n    people: PeopleType,\n  }[],\n  responsibles?: {\n    _id: string,\n    kindPeople: KindPeopleType,\n    people: PeopleType,\n  }[],\n  annotation?: {\n    _id: string,\n    annotationDate: string,\n    description: string,\n  }[],\n  movements?: {\n    _id: string,\n    movementDate: string,\n    description: string,\n    instance: string,\n  }[],\n  push?: {\n    push_description: string,\n    push_id: string,\n  }\n}\n\n\nconst useGetProcesses = () => {\n  const [{ loading, data }, getProcess] = useAxios<ProcessType>({ method: \"GET\" }, { manual: true })\n\n  const query = (id: string) => getProcess({ url: `/process/${id}` })\n\n  return [{ loading, data }, query] as const\n}\n\nexport default useGetProcesses\n"]},"metadata":{},"sourceType":"module"}