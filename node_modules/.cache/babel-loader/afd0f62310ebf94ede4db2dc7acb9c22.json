{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport useAxios from 'axios-hooks';\nimport { removeFalsyValues } from '../../../Utils/functions';\n\nconst useSaveTask = () => {\n  const [{\n    loading\n  }, execute] = useAxios({\n    url: '/taskcard',\n    method: 'POST'\n  }, {\n    manual: true\n  });\n\n  const mutation = raw_data => {\n    const data = removeFalsyValues(raw_data);\n\n    if (data._id) {\n      return execute({\n        url: `/taskcard/${data._id}`,\n        method: 'PUT',\n        data\n      });\n    }\n\n    return execute({\n      data\n    });\n  };\n\n  return [mutation, {\n    loading\n  }];\n};\n\n__signature__(useSaveTask, \"useAxios{[{ loading }, execute]}\", () => [useAxios]);\n\nconst _default = useSaveTask;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(useSaveTask, \"useSaveTask\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Modals/TaskModal/useSaveTask.ts\");\n  reactHotLoader.register(_default, \"default\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Modals/TaskModal/useSaveTask.ts\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Modals/TaskModal/useSaveTask.ts"],"names":["useAxios","removeFalsyValues","useSaveTask","loading","execute","url","method","manual","mutation","raw_data","data","_id"],"mappings":";;;;;;;;;AAAA,OAAOA,QAAP,MAAqB,aAArB;AAEA,SAASC,iBAAT,QAAkC,0BAAlC;;AAQA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAcC,OAAd,IAAyBJ,QAAQ,CAAe;AAAEK,IAAAA,GAAG,EAAE,WAAP;AAAoBC,IAAAA,MAAM,EAAE;AAA5B,GAAf,EAAqD;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAArD,CAAvC;;AAEA,QAAMC,QAAQ,GAAIC,QAAD,IAAwD;AACvE,UAAMC,IAAI,GAAGT,iBAAiB,CAACQ,QAAD,CAA9B;;AAEA,QAAIC,IAAI,CAACC,GAAT,EAAc;AACZ,aAAOP,OAAO,CAAC;AAAEC,QAAAA,GAAG,EAAG,aAAYK,IAAI,CAACC,GAAI,EAA7B;AAAgCL,QAAAA,MAAM,EAAE,KAAxC;AAA+CI,QAAAA;AAA/C,OAAD,CAAd;AACD;;AAED,WAAON,OAAO,CAAC;AAAEM,MAAAA;AAAF,KAAD,CAAd;AACD,GARD;;AAUA,SAAO,CAACF,QAAD,EAAW;AAAEL,IAAAA;AAAF,GAAX,CAAP;AACD,CAdD;;cAAMD,W,6CAC2BF,Q;;iBAelBE,W;AAAf;;;;;;;;;;0BAhBMA,W","sourcesContent":["import useAxios from 'axios-hooks'\nimport { TaskType } from './Types'\nimport { removeFalsyValues } from '../../../Utils/functions'\n\ntype QueryPayload = {\n  success: boolean,\n  message?: string,\n  task: TaskType\n}\n\nconst useSaveTask = () => {\n  const [{ loading }, execute] = useAxios<QueryPayload>({ url: '/taskcard', method: 'POST' }, { manual: true })\n\n  const mutation = (raw_data: Omit<TaskType, '_id'> & { _id?: string }) => {\n    const data = removeFalsyValues(raw_data)\n\n    if (data._id) {\n      return execute({ url: `/taskcard/${data._id}`, method: 'PUT', data })\n    }\n\n    return execute({ data })\n  }\n\n  return [mutation, { loading }] as const\n}\n\nexport default useSaveTask\n"]},"metadata":{},"sourceType":"module"}