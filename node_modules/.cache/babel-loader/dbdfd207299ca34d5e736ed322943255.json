{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nfunction areInputsEqual(newInputs, lastInputs) {\n  if (newInputs.length !== lastInputs.length) {\n    return false;\n  }\n\n  for (var i = 0; i < newInputs.length; i++) {\n    if (newInputs[i] !== lastInputs[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction memoizeOne(resultFn, isEqual) {\n  if (isEqual === void 0) {\n    isEqual = areInputsEqual;\n  }\n\n  var lastThis;\n  var lastArgs = [];\n  var lastResult;\n  var calledOnce = false;\n\n  function memoized() {\n    var newArgs = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      newArgs[_i] = arguments[_i];\n    }\n\n    if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {\n      return lastResult;\n    }\n\n    lastResult = resultFn.apply(this, newArgs);\n    calledOnce = true;\n    lastThis = this;\n    lastArgs = newArgs;\n    return lastResult;\n  }\n\n  return memoized;\n}\n\nconst _default = memoizeOne;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(areInputsEqual, \"areInputsEqual\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/node_modules/memoize-one/dist/memoize-one.esm.js\");\n  reactHotLoader.register(memoizeOne, \"memoizeOne\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/node_modules/memoize-one/dist/memoize-one.esm.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/node_modules/memoize-one/dist/memoize-one.esm.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/node_modules/memoize-one/dist/memoize-one.esm.js"],"names":["areInputsEqual","newInputs","lastInputs","length","i","memoizeOne","resultFn","isEqual","lastThis","lastArgs","lastResult","calledOnce","memoized","newArgs","_i","arguments","apply"],"mappings":";;;;;;;;;AAAA,SAASA,cAAT,CAAwBC,SAAxB,EAAmCC,UAAnC,EAA+C;AAC3C,MAAID,SAAS,CAACE,MAAV,KAAqBD,UAAU,CAACC,MAApC,EAA4C;AACxC,WAAO,KAAP;AACH;;AACD,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,SAAS,CAACE,MAA9B,EAAsCC,CAAC,EAAvC,EAA2C;AACvC,QAAIH,SAAS,CAACG,CAAD,CAAT,KAAiBF,UAAU,CAACE,CAAD,CAA/B,EAAoC;AAChC,aAAO,KAAP;AACH;AACJ;;AACD,SAAO,IAAP;AACH;;AAED,SAASC,UAAT,CAAoBC,QAApB,EAA8BC,OAA9B,EAAuC;AACnC,MAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;AAAEA,IAAAA,OAAO,GAAGP,cAAV;AAA2B;;AACrD,MAAIQ,QAAJ;AACA,MAAIC,QAAQ,GAAG,EAAf;AACA,MAAIC,UAAJ;AACA,MAAIC,UAAU,GAAG,KAAjB;;AACA,WAASC,QAAT,GAAoB;AAChB,QAAIC,OAAO,GAAG,EAAd;;AACA,SAAK,IAAIC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGC,SAAS,CAACZ,MAAhC,EAAwCW,EAAE,EAA1C,EAA8C;AAC1CD,MAAAA,OAAO,CAACC,EAAD,CAAP,GAAcC,SAAS,CAACD,EAAD,CAAvB;AACH;;AACD,QAAIH,UAAU,IAAIH,QAAQ,KAAK,IAA3B,IAAmCD,OAAO,CAACM,OAAD,EAAUJ,QAAV,CAA9C,EAAmE;AAC/D,aAAOC,UAAP;AACH;;AACDA,IAAAA,UAAU,GAAGJ,QAAQ,CAACU,KAAT,CAAe,IAAf,EAAqBH,OAArB,CAAb;AACAF,IAAAA,UAAU,GAAG,IAAb;AACAH,IAAAA,QAAQ,GAAG,IAAX;AACAC,IAAAA,QAAQ,GAAGI,OAAX;AACA,WAAOH,UAAP;AACH;;AACD,SAAOE,QAAP;AACH;;iBAEcP,U;AAAf;;;;;;;;;;0BAnCSL,c;0BAYAK,U","sourcesContent":["function areInputsEqual(newInputs, lastInputs) {\n    if (newInputs.length !== lastInputs.length) {\n        return false;\n    }\n    for (var i = 0; i < newInputs.length; i++) {\n        if (newInputs[i] !== lastInputs[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction memoizeOne(resultFn, isEqual) {\n    if (isEqual === void 0) { isEqual = areInputsEqual; }\n    var lastThis;\n    var lastArgs = [];\n    var lastResult;\n    var calledOnce = false;\n    function memoized() {\n        var newArgs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            newArgs[_i] = arguments[_i];\n        }\n        if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {\n            return lastResult;\n        }\n        lastResult = resultFn.apply(this, newArgs);\n        calledOnce = true;\n        lastThis = this;\n        lastArgs = newArgs;\n        return lastResult;\n    }\n    return memoized;\n}\n\nexport default memoizeOne;\n"]},"metadata":{},"sourceType":"module"}