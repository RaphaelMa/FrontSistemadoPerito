{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport useAxios from 'axios-hooks';\nimport { removeFalsyValues } from 'Utils/functions';\n\nconst useSaveProcess = () => {\n  const [{\n    loading\n  }, execute] = useAxios({\n    url: '/process',\n    method: 'POST'\n  }, {\n    manual: true\n  });\n\n  const mutation = raw_data => {\n    const data = removeFalsyValues(raw_data);\n    if (data._id) return execute({\n      url: `/process/${data._id}`,\n      method: 'PUT',\n      data\n    });\n    return execute({\n      data\n    });\n  };\n\n  return [mutation, {\n    loading\n  }];\n};\n\n__signature__(useSaveProcess, \"useAxios{[{ loading }, execute]}\", () => [useAxios]);\n\nconst _default = useSaveProcess;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(useSaveProcess, \"useSaveProcess\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/NewProcess/useSaveProcess.ts\");\n  reactHotLoader.register(_default, \"default\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/NewProcess/useSaveProcess.ts\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/NewProcess/useSaveProcess.ts"],"names":["useAxios","removeFalsyValues","useSaveProcess","loading","execute","url","method","manual","mutation","raw_data","data","_id"],"mappings":";;;;;;;;;AAAA,OAAOA,QAAP,MAAqB,aAArB;AAEA,SAASC,iBAAT,QAAkC,iBAAlC;;AAkBA,MAAMC,cAAkC,GAAG,MAAM;AAC/C,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAcC,OAAd,IAAyBJ,QAAQ,CAAe;AAAEK,IAAAA,GAAG,EAAE,UAAP;AAAmBC,IAAAA,MAAM,EAAE;AAA3B,GAAf,EAAoD;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAApD,CAAvC;;AAEA,QAAMC,QAAQ,GAAIC,QAAD,IAA2B;AAC1C,UAAMC,IAAI,GAAGT,iBAAiB,CAACQ,QAAD,CAA9B;AAEA,QAAIC,IAAI,CAACC,GAAT,EAAc,OAAOP,OAAO,CAAC;AAAEC,MAAAA,GAAG,EAAG,YAAWK,IAAI,CAACC,GAAI,EAA5B;AAA+BL,MAAAA,MAAM,EAAE,KAAvC;AAA8CI,MAAAA;AAA9C,KAAD,CAAd;AAEd,WAAON,OAAO,CAAC;AAAEM,MAAAA;AAAF,KAAD,CAAd;AACD,GAND;;AAQA,SAAO,CAACF,QAAD,EAAW;AAAEL,IAAAA;AAAF,GAAX,CAAP;AACD,CAZD;;cAAMD,c,6CAC2BF,Q;;iBAalBE,c;AAAf;;;;;;;;;;0BAdMA,c","sourcesContent":["import useAxios from 'axios-hooks'\nimport { AxiosPromise } from 'axios'\nimport { removeFalsyValues } from 'Utils/functions'\nimport { ProcessType } from '../Process/types'\n\ntype QueryPayload = {\n  success: boolean,\n  message?: string,\n  process?: ProcessType,\n  key?: string,\n}\n\n\ntype ReturnType = [\n  (data: ProcessType) => AxiosPromise<QueryPayload>,\n  { loading: boolean }\n]\n\ntype useSaveProcessType = () => ReturnType\n\nconst useSaveProcess: useSaveProcessType = () => {\n  const [{ loading }, execute] = useAxios<QueryPayload>({ url: '/process', method: 'POST' }, { manual: true })\n\n  const mutation = (raw_data: ProcessType) => {\n    const data = removeFalsyValues(raw_data)\n\n    if (data._id) return execute({ url: `/process/${data._id}`, method: 'PUT', data })\n\n    return execute({ data })\n  }\n\n  return [mutation, { loading }]\n}\n\nexport default useSaveProcess\n"]},"metadata":{},"sourceType":"module"}