{"ast":null,"code":"var _jsxFileName = \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Drawers/Person/PersonForm.tsx\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React from 'react';\nimport { Form, Input, Col, Row, DatePicker, Select } from 'antd';\nimport moment from 'moment';\nimport InputMask from 'react-input-mask';\nimport PhoneInput from 'Utils/PhoneInput';\nimport { normalizePhone } from 'Utils/functions';\n\nconst PersonForm = ({\n  form\n}) => {\n  const disabledDate = current => {\n    return current && current > moment().endOf('day');\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    layout: \"vertical\",\n    form: form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"_id\",\n    noStyle: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    gutter: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"name\",\n    label: \"Nome\",\n    rules: [{\n      required: true,\n      message: 'Campo obrigatório'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Informe o nome\",\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"birthday\",\n    label: \"Anivers\\xE1rio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DatePicker, {\n    showToday: false,\n    style: {\n      width: '100%'\n    },\n    format: \"DD/MM/YYYY\",\n    disabledDate: disabledDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    gutter: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"businessEmail\",\n    label: \"E-mail Comercial\",\n    validateTrigger: ['onBlur', 'onChange'],\n    rules: [{\n      validateTrigger: 'onBlur',\n      type: 'email',\n      message: 'E-mail inválido'\n    }, {\n      validateTrigger: 'onChange',\n      type: 'email',\n      message: 'Campo obrigatório!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Informe o email\",\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"personalEmail\",\n    label: \"E-mail Pessoal\",\n    dependencies: ['businessEmail'],\n    validateTrigger: ['onBlur', 'onChange'],\n    rules: [{\n      validateTrigger: 'onBlur',\n      type: 'email',\n      message: 'E-mail inválido'\n    }, ({\n      getFieldValue\n    }) => ({\n      validator(_rule, value) {\n        if (value && getFieldValue('businessEmail') === value) {\n          return Promise.reject('E-mail comercial não pode ser igual ao pessoal');\n        }\n\n        return Promise.resolve();\n      }\n\n    })],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Informe o email\",\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    gutter: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"personalContact\",\n    label: \"Contato Comercial\",\n    normalize: normalizePhone,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(PhoneInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"businessContact\",\n    label: \"Contato Pessoal\",\n    normalize: normalizePhone,\n    validateTrigger: ['onBlur', 'onChange'],\n    dependencies: ['personalContact'],\n    rules: [({\n      getFieldValue\n    }) => ({\n      validator(_rule, value) {\n        if (value && getFieldValue('personalContact') === value) {\n          return Promise.reject('Contato comercial não pode ser igual ao pessoal');\n        }\n\n        return Promise.resolve();\n      }\n\n    })],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(PhoneInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    gutter: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"cep\",\n    label: \"CEP\",\n    normalize: value => {\n      if (!value) return undefined;\n      return value.replace(/[^0-9]+/g, '');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputMask, {\n    mask: \"99999-999\",\n    maskChar: null,\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, input_props => /*#__PURE__*/React.createElement(Input, Object.assign({\n    min: 10\n  }, input_props, {\n    placeholder: \"00000-000\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 38\n    }\n  }))))), /*#__PURE__*/React.createElement(Col, {\n    span: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"state\",\n    label: \"Estado\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Informe o estado\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"city\",\n    label: \"Cidade\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Informe a cidade\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    gutter: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"address\",\n    label: \"Endere\\xE7o\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Informe o endere\\xE7o\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    span: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"documentType\",\n    label: \"Tipo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    allowClear: true,\n    placeholder: \"Tipo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Select.Option, {\n    value: \"CNPJ\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 15\n    }\n  }, \"CNPJ\"), /*#__PURE__*/React.createElement(Select.Option, {\n    value: \"CPF\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 15\n    }\n  }, \"CPF\")))), /*#__PURE__*/React.createElement(Col, {\n    span: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    noStyle: true,\n    shouldUpdate: (prev_values, cur_values) => prev_values.documentType !== cur_values.documentType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }, ({\n    getFieldValue\n  }) => {\n    const document_type = getFieldValue('documentType');\n    let mask;\n\n    if (document_type === 'CNPJ') {\n      mask = '99.999.999/9999-99';\n    } else {\n      mask = '999.999.999-99';\n    }\n\n    return /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"document\",\n      label: \"N\\xFAmero Documento\",\n      normalize: normalizePhone,\n      dependencies: ['documentType'],\n      rules: [({\n        getFieldValue\n      }) => ({\n        validator(_rule, value) {\n          if (!value && (getFieldValue('documentType') === 'CPF' || getFieldValue('documentType') === 'CNPJ')) {\n            return Promise.reject('Informe o número');\n          }\n\n          return Promise.resolve();\n        }\n\n      })],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(InputMask, {\n      mask: mask,\n      maskChar: null,\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 19\n      }\n    }, input_props => /*#__PURE__*/React.createElement(Input, Object.assign({}, input_props, {\n      placeholder: document_type ? document_type : 'CPF/CNPJ',\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 23\n      }\n    }))));\n  }))));\n};\n\nPersonForm.displayName = \"PersonForm\";\nconst _default = PersonForm;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(PersonForm, \"PersonForm\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Drawers/Person/PersonForm.tsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Drawers/Person/PersonForm.tsx\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Drawers/Person/PersonForm.tsx"],"names":["React","Form","Input","Col","Row","DatePicker","Select","moment","InputMask","PhoneInput","normalizePhone","PersonForm","form","disabledDate","current","endOf","required","message","width","validateTrigger","type","getFieldValue","validator","_rule","value","Promise","reject","resolve","undefined","replace","input_props","prev_values","cur_values","documentType","document_type","mask"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Form, Input, Col, Row, DatePicker, Select } from 'antd'\nimport { FormInstance } from 'antd/lib/form'\nimport moment, { Moment } from 'moment'\nimport InputMask from 'react-input-mask'\nimport PhoneInput from 'Utils/PhoneInput'\nimport { normalizePhone } from 'Utils/functions'\n\ntype Props = {\n  form: FormInstance\n}\n\nconst PersonForm: React.FC<Props> = ({ form }) => {\n  const disabledDate = (current: Moment) => {\n    return current && current > moment().endOf('day')\n  }\n\n  return (\n    <Form layout=\"vertical\" form={form}>\n      <Form.Item name=\"_id\" noStyle>\n        <Input type=\"hidden\"/>\n      </Form.Item>\n      <Row gutter={8}>\n        <Col span={16}>\n          <Form.Item\n            name=\"name\"\n            label=\"Nome\"\n            rules={[\n              { required: true, message: 'Campo obrigatório' },\n            ]}\n          >\n            <Input placeholder=\"Informe o nome\" autoComplete=\"off\"/>\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item name=\"birthday\" label=\"Aniversário\">\n            <DatePicker\n              showToday={false}\n              style={{ width: '100%' }}\n              format=\"DD/MM/YYYY\"\n              disabledDate={disabledDate}\n            />\n          </Form.Item>\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={12}>\n          <Form.Item\n            name=\"businessEmail\"\n            label=\"E-mail Comercial\"\n            validateTrigger={['onBlur', 'onChange']}\n            rules={[\n              { validateTrigger: 'onBlur', type: 'email', message: 'E-mail inválido' },\n              { validateTrigger: 'onChange', type: 'email', message: 'Campo obrigatório!' },\n            ]}\n          >\n            <Input placeholder=\"Informe o email\" autoComplete=\"off\"/>\n          </Form.Item>\n        </Col>\n        <Col span={12}>\n          <Form.Item\n            name=\"personalEmail\"\n            label=\"E-mail Pessoal\"\n            dependencies={['businessEmail']}\n            validateTrigger={['onBlur', 'onChange']}\n            rules={[\n              { validateTrigger: 'onBlur', type: 'email', message: 'E-mail inválido' },\n              ({ getFieldValue }) => ({\n                validator(_rule, value) {\n                  if (value && getFieldValue('businessEmail') === value) {\n                    return Promise.reject('E-mail comercial não pode ser igual ao pessoal')\n                  }\n\n                  return Promise.resolve()\n                },\n              }),\n            ]}\n          >\n            <Input placeholder=\"Informe o email\" autoComplete=\"off\"/>\n          </Form.Item>\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={12}>\n          <Form.Item\n            name=\"personalContact\"\n            label=\"Contato Comercial\"\n            normalize={normalizePhone}\n          >\n            <PhoneInput/>\n          </Form.Item>\n        </Col>\n        <Col span={12}>\n          <Form.Item\n            name=\"businessContact\"\n            label=\"Contato Pessoal\"\n            normalize={normalizePhone}\n            validateTrigger={['onBlur', 'onChange']}\n            dependencies={['personalContact']}\n            rules={[\n              ({ getFieldValue }) => ({\n                validator(_rule, value) {\n                  if (value && getFieldValue('personalContact') === value) {\n                    return Promise.reject('Contato comercial não pode ser igual ao pessoal')\n                  }\n\n                  return Promise.resolve()\n                },\n              }),\n            ]}\n          >\n            <PhoneInput/>\n          </Form.Item>\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={6}>\n          <Form.Item\n            name=\"cep\"\n            label=\"CEP\"\n            normalize={(value) => {\n              if (!value) return undefined\n\n              return value.replace(/[^0-9]+/g, '')\n            }}\n          >\n            <InputMask\n              mask=\"99999-999\"\n              maskChar={null}\n              style={{ width: '100%' }}\n            >\n              {(input_props: any) => <Input min={10} {...input_props} placeholder=\"00000-000\"/>}\n            </InputMask>\n          </Form.Item>\n        </Col>\n        <Col span={6}>\n          <Form.Item name=\"state\" label=\"Estado\">\n            <Input placeholder=\"Informe o estado\"/>\n          </Form.Item>\n        </Col>\n        <Col span={12}>\n          <Form.Item name=\"city\" label=\"Cidade\">\n            <Input placeholder=\"Informe a cidade\"/>\n          </Form.Item>\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={12}>\n          <Form.Item name=\"address\" label=\"Endereço\">\n            <Input placeholder=\"Informe o endereço\"/>\n          </Form.Item>\n        </Col>\n        <Col span={6}>\n          <Form.Item name=\"documentType\" label=\"Tipo\">\n            <Select allowClear placeholder=\"Tipo\">\n              <Select.Option value=\"CNPJ\">CNPJ</Select.Option>\n              <Select.Option value=\"CPF\">CPF</Select.Option>\n            </Select>\n          </Form.Item>\n        </Col>\n        <Col span={6}>\n          <Form.Item\n            noStyle\n            shouldUpdate={(prev_values, cur_values) => prev_values.documentType !== cur_values.documentType}\n          >\n            {({ getFieldValue }) => {\n              const document_type = getFieldValue('documentType')\n              let mask\n              if (document_type === 'CNPJ') {\n                mask = '99.999.999/9999-99'\n              } else {\n                mask = '999.999.999-99'\n              }\n              return (\n                <Form.Item\n                  name=\"document\"\n                  label=\"Número Documento\"\n                  normalize={normalizePhone}\n                  dependencies={['documentType']}\n                  rules={[\n                    ({ getFieldValue }) => ({\n                      validator(_rule, value) {\n                        if (!value && (getFieldValue('documentType') === 'CPF' || getFieldValue('documentType') === 'CNPJ')) {\n                          return Promise.reject('Informe o número')\n                        }\n\n                        return Promise.resolve()\n                      },\n                    }),\n                  ]}\n                >\n                  <InputMask\n                    mask={mask}\n                    maskChar={null}\n                    style={{ width: '100%' }}\n                  >\n                    {(input_props: any) => (\n                      <Input {...input_props} placeholder={document_type ? document_type : 'CPF/CNPJ'}\n                             autoComplete=\"off\"/>\n                    )}\n                  </InputMask>\n                </Form.Item>\n              )\n            }}\n          </Form.Item>\n        </Col>\n      </Row>\n    </Form>\n  )\n}\n\nexport default PersonForm\n"]},"metadata":{},"sourceType":"module"}