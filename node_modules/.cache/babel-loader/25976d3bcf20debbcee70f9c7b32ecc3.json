{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport useAxios from 'axios-hooks';\n\nconst useGetProcessNatures = query_options => useAxios({\n  url: '/processnature',\n  method: 'GET'\n}, {\n  manual: false,\n  useCache: false,\n  ...query_options\n});\n\n__signature__(useGetProcessNatures, \"useAxios{}\", () => [useAxios]);\n\nconst _default = useGetProcessNatures;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(useGetProcessNatures, \"useGetProcessNatures\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Inputs/ProcessNatureInput/useGetProcessNatures.ts\");\n  reactHotLoader.register(_default, \"default\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Inputs/ProcessNatureInput/useGetProcessNatures.ts\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Components/Inputs/ProcessNatureInput/useGetProcessNatures.ts"],"names":["useAxios","useGetProcessNatures","query_options","url","method","manual","useCache"],"mappings":";;;;;;;;;AAAA,OAAOA,QAAP,MAAkC,aAAlC;;AAQA,MAAMC,oBAAoB,GAAIC,aAAD,IAC3BF,QAAQ,CAAsB;AAAEG,EAAAA,GAAG,EAAE,gBAAP;AAAyBC,EAAAA,MAAM,EAAE;AAAjC,CAAtB,EAAgE;AACtEC,EAAAA,MAAM,EAAE,KAD8D;AAEtEC,EAAAA,QAAQ,EAAE,KAF4D;AAGtE,KAAGJ;AAHmE,CAAhE,CADV;;cAAMD,oB,uBACJD,Q;;iBAOaC,oB;AAAf;;;;;;;;;;0BARMA,oB","sourcesContent":["import useAxios, { Options } from 'axios-hooks'\n\nexport type ProcessNatureType = {\n  _id: string,\n  description: string,\n}\n\n\nconst useGetProcessNatures = (query_options?: Options) => (\n  useAxios<ProcessNatureType[]>({ url: '/processnature', method: 'GET' }, {\n    manual: false,\n    useCache: false,\n    ...query_options\n  })\n)\n\nexport default useGetProcessNatures\n"]},"metadata":{},"sourceType":"module"}