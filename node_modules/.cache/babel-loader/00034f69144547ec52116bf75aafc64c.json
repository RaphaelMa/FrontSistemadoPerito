{"ast":null,"code":"var _jsxFileName = \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Plans/Plans.tsx\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { buildData, MONTHLY_PRICE, YEARLY_PRICE } from './functions';\nimport { message, Spin, Switch, Table, Button } from 'antd';\nimport { useUserDispatch, useUserSelector } from 'Redux/UserReducer';\nimport PaymentMethodModal from 'Components/Modals/PaymentMethod/PaymentMethodModal';\nimport messageError from 'Utils/messageError';\nimport useGetPlans from './useGetPlans';\nimport styled from 'styled-components';\nimport useColumns from './useColumns';\nimport useSaveCompany from 'Pages/Company/useSaveCompany';\nimport successModal from 'Utils/successModal';\nimport { useNavigate } from 'react-router-dom';\n\nconst Plans = () => {\n  var _company$plan;\n\n  const company = useUserSelector(state => state.company);\n  const annual = !!(company === null || company === void 0 ? void 0 : (_company$plan = company.plan) === null || _company$plan === void 0 ? void 0 : _company$plan.annual);\n  const [internal_yearly, setInternalYearly] = useState(annual);\n  const [plans, setPlans] = useState([]);\n  const [saveCompany, {\n    loading: saving\n  }] = useSaveCompany();\n  const [{\n    loading\n  }, getPlans] = useGetPlans();\n  const PaymentMethodRef = useRef(null);\n  const dispatch = useUserDispatch();\n  const navigate = useNavigate();\n\n  const handleSaveCompany = async plan_id => {\n    try {\n      const values = { ...company,\n        plan_id,\n        annual: internal_yearly\n      };\n      const {\n        data\n      } = await saveCompany(values);\n\n      if (!(data === null || data === void 0 ? void 0 : data.success)) {\n        message.error(data.message);\n        return;\n      }\n\n      dispatch({\n        type: 'UPDATE_COMPANY',\n        payload: data.company\n      });\n      successModal({\n        content: 'Plano escolhido com sucesso',\n        duration: 4000,\n        onEndDuration: () => navigate('/')\n      });\n    } catch (_e) {\n      messageError('2011142222');\n    }\n  };\n\n  const handleClickPlan = plan_name => {\n    const plan = plans.find(plan => plan.name === plan_name);\n\n    if (!(company === null || company === void 0 ? void 0 : company.toHire)) {\n      var _PaymentMethodRef$cur;\n\n      (_PaymentMethodRef$cur = PaymentMethodRef.current) === null || _PaymentMethodRef$cur === void 0 ? void 0 : _PaymentMethodRef$cur.open({\n        plan: {\n          _id: plan._id,\n          annual: internal_yearly\n        }\n      });\n      return;\n    }\n\n    handleSaveCompany(plan._id);\n  };\n\n  const fetchPlans = async () => {\n    try {\n      const {\n        data\n      } = await getPlans();\n\n      if (!data.success) {\n        message.error(data.message);\n        return;\n      }\n\n      setPlans(data.plans);\n    } catch (e) {\n      messageError('2011051928');\n    }\n  };\n\n  useEffect(() => {\n    fetchPlans(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const data = buildData({\n    prices: internal_yearly ? YEARLY_PRICE : MONTHLY_PRICE\n  });\n  const columns = useColumns({\n    yearly: internal_yearly,\n    handleClickPlan\n  }); // const dataplan = [\n  //   users: '1 UsuÃ¡rio',\n  // ]\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Spin, {\n    spinning: loading || saving,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, \"Mensal\"), /*#__PURE__*/React.createElement(SwitchStyled, {\n    onChange: value => setInternalYearly(value),\n    checked: internal_yearly,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, \"Anual\")), /*#__PURE__*/React.createElement(GridContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(StyledCardPlan, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      textAlign: 'left',\n      marginTop: '20px',\n      fontSize: '20px',\n      marginLeft: '10%',\n      color: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }, \"1 Usu\\xE1rio \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 27\n    }\n  }), \"10 Push Free \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 30\n    }\n  }), \"Dashboard \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 27\n    }\n  }), \"Gest\\xE3o de Per\\xEDcias e Assist\\xEAncias \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 51\n    }\n  }), \"Gest\\xE3o da Agenda \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 34\n    }\n  }), \"Cadastros \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 27\n    }\n  }), \"Relat\\xF3rios \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 28\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: \"buttonstyle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }, \"Salvar\")), /*#__PURE__*/React.createElement(StyledCardPlan, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, \"2\"), /*#__PURE__*/React.createElement(StyledCardPlan, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, \"3\")))), /*#__PURE__*/React.createElement(PaymentMethodModal, {\n    ref: PaymentMethodRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }));\n};\n\n__signature__(Plans, \"useUserSelector{company}\\nuseState{[internal_yearly, setInternalYearly](annual)}\\nuseState{[plans, setPlans]([])}\\nuseSaveCompany{[saveCompany, { loading: saving }]}\\nuseGetPlans{[{ loading }, getPlans]}\\nuseRef{PaymentMethodRef}\\nuseUserDispatch{dispatch}\\nuseNavigate{navigate}\\nuseEffect{}\\nuseColumns{columns}\", () => [useUserSelector, useSaveCompany, useGetPlans, useUserDispatch, useNavigate, useColumns]);\n\nconst _default = Plans;\nexport default _default;\nconst Container = styled.div.withConfig({\n  displayName: \"Plans__Container\",\n  componentId: \"sc-1rpzp2j-0\"\n})([\"padding:0 15%;height:100%;overflow-y:auto;\"]); // const ButtonStyle = styled.button`\n// `;\n\nconst GridContainer = styled.div.withConfig({\n  displayName: \"Plans__GridContainer\",\n  componentId: \"sc-1rpzp2j-1\"\n})([\"  display:grid;height:100%;align-content:center;align-items:center;grid-template-columns:auto auto auto;gap:10px;background-color:white;padding:10px;.buttonstyle{margin-top:25%;margin-left:5.7%;position:absolute;padding:20px 10px;width:10%;text-align:center;border-radius:20px;font-weight:bold;}\"]);\nconst StyledCardPlan = styled.div.withConfig({\n  displayName: \"Plans__StyledCardPlan\",\n  componentId: \"sc-1rpzp2j-2\"\n})([\"   display:flex;width:280px;height:385px;background-color:#36bdc1;border-radius:20px;justify-content:space-between;transition:box-shadow .3s;margin-bottom:10%;&:hover{cursor:pointer;box-shadow:0 0px 30px #1793ae7e;}\"]);\nconst Header = styled.div.withConfig({\n  displayName: \"Plans__Header\",\n  componentId: \"sc-1rpzp2j-3\"\n})([\"display:flex;flex-direction:row;align-items:center;justify-content:center;padding:10px 0;width:100%;\"]);\nconst Text = styled.p.withConfig({\n  displayName: \"Plans__Text\",\n  componentId: \"sc-1rpzp2j-4\"\n})([\"margin:0;\"]);\nconst SwitchStyled = styled(Switch).withConfig({\n  displayName: \"Plans__SwitchStyled\",\n  componentId: \"sc-1rpzp2j-5\"\n})([\"margin:0 10px;\"]);\nconst StyledTable = styled(Table).withConfig({\n  displayName: \"Plans__StyledTable\",\n  componentId: \"sc-1rpzp2j-6\"\n})([\".ant-table-thead{th{border-bottom:2px solid \", \";padding:5px 0;background:white;}}.ant-table-body{height:100%;}.ant-table-body,.ant-table-row{td{padding:1.5px 0;border-bottom:unset;}:nth-last-child(2) td{padding-bottom:5px;border-bottom:2px solid \", \";}}\"], p => p.theme.colors.dark_gray, p => p.theme.colors.dark_gray);\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Plans, \"Plans\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Plans/Plans.tsx\");\n  reactHotLoader.register(Container, \"Container\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Plans/Plans.tsx\");\n  reactHotLoader.register(GridContainer, \"GridContainer\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Plans/Plans.tsx\");\n  reactHotLoader.register(StyledCardPlan, \"StyledCardPlan\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Plans/Plans.tsx\");\n  reactHotLoader.register(Header, \"Header\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Plans/Plans.tsx\");\n  reactHotLoader.register(Text, \"Text\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Plans/Plans.tsx\");\n  reactHotLoader.register(SwitchStyled, \"SwitchStyled\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Plans/Plans.tsx\");\n  reactHotLoader.register(StyledTable, \"StyledTable\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Plans/Plans.tsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Plans/Plans.tsx\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Plans/Plans.tsx"],"names":["React","useEffect","useRef","useState","buildData","MONTHLY_PRICE","YEARLY_PRICE","message","Spin","Switch","Table","Button","useUserDispatch","useUserSelector","PaymentMethodModal","messageError","useGetPlans","styled","useColumns","useSaveCompany","successModal","useNavigate","Plans","company","state","annual","plan","internal_yearly","setInternalYearly","plans","setPlans","saveCompany","loading","saving","getPlans","PaymentMethodRef","dispatch","navigate","handleSaveCompany","plan_id","values","data","success","error","type","payload","content","duration","onEndDuration","_e","handleClickPlan","plan_name","find","name","toHire","current","open","_id","fetchPlans","e","prices","columns","yearly","value","textAlign","marginTop","fontSize","marginLeft","color","Container","div","GridContainer","StyledCardPlan","Header","Text","p","SwitchStyled","StyledTable","theme","colors","dark_gray"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,SAAT,EAAoBC,aAApB,EAAmCC,YAAnC,QAAuD,aAAvD;AACA,SAASC,OAAT,EAAkBC,IAAlB,EAAwBC,MAAxB,EAAgCC,KAAhC,EAAuCC,MAAvC,QAAqD,MAArD;AACA,SAASC,eAAT,EAA0BC,eAA1B,QAAiD,mBAAjD;AAEA,OAAOC,kBAAP,MAAsD,oDAAtD;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,SAASC,WAAT,QAA4B,kBAA5B;;AAEA,MAAMC,KAAe,GAAG,MAAM;AAAA;;AAC5B,QAAMC,OAAO,GAAGV,eAAe,CAACW,KAAK,IAAIA,KAAK,CAACD,OAAhB,CAA/B;AAEA,QAAME,MAAM,GAAG,CAAC,EAACF,OAAD,aAACA,OAAD,wCAACA,OAAO,CAAEG,IAAV,kDAAC,cAAeD,MAAhB,CAAhB;AACA,QAAM,CAACE,eAAD,EAAkBC,iBAAlB,IAAuCzB,QAAQ,CAACsB,MAAD,CAArD;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoB3B,QAAQ,CAAS,EAAT,CAAlC;AAEA,QAAM,CAAC4B,WAAD,EAAc;AAAEC,IAAAA,OAAO,EAAEC;AAAX,GAAd,IAAqCd,cAAc,EAAzD;AACA,QAAM,CAAC;AAAEa,IAAAA;AAAF,GAAD,EAAcE,QAAd,IAA0BlB,WAAW,EAA3C;AACA,QAAMmB,gBAAgB,GAAGjC,MAAM,CAAoB,IAApB,CAA/B;AACA,QAAMkC,QAAQ,GAAGxB,eAAe,EAAhC;AACA,QAAMyB,QAAQ,GAAGhB,WAAW,EAA5B;;AAEA,QAAMiB,iBAAiB,GAAG,MAAOC,OAAP,IAA2B;AACnD,QAAI;AACF,YAAMC,MAAM,GAAG,EAAE,GAAGjB,OAAL;AAAcgB,QAAAA,OAAd;AAAuBd,QAAAA,MAAM,EAAEE;AAA/B,OAAf;AACA,YAAM;AAAEc,QAAAA;AAAF,UAAW,MAAMV,WAAW,CAACS,MAAD,CAAlC;;AAEA,UAAI,EAACC,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEC,OAAP,CAAJ,EAAoB;AAClBnC,QAAAA,OAAO,CAACoC,KAAR,CAAcF,IAAI,CAAClC,OAAnB;AACA;AACD;;AAED6B,MAAAA,QAAQ,CAAC;AAAEQ,QAAAA,IAAI,EAAE,gBAAR;AAA0BC,QAAAA,OAAO,EAAEJ,IAAI,CAAClB;AAAxC,OAAD,CAAR;AAEAH,MAAAA,YAAY,CAAC;AACX0B,QAAAA,OAAO,EAAE,6BADE;AAEXC,QAAAA,QAAQ,EAAE,IAFC;AAGXC,QAAAA,aAAa,EAAE,MAAMX,QAAQ,CAAC,GAAD;AAHlB,OAAD,CAAZ;AAKD,KAhBD,CAgBE,OAAOY,EAAP,EAAW;AACXlC,MAAAA,YAAY,CAAC,YAAD,CAAZ;AACD;AACF,GApBD;;AAsBA,QAAMmC,eAAe,GAAIC,SAAD,IAAuB;AAC7C,UAAMzB,IAAI,GAAGG,KAAK,CAACuB,IAAN,CAAW1B,IAAI,IAAIA,IAAI,CAAC2B,IAAL,KAAcF,SAAjC,CAAb;;AAEA,QAAI,EAAC5B,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAE+B,MAAV,CAAJ,EAAsB;AAAA;;AACpB,+BAAAnB,gBAAgB,CAACoB,OAAjB,gFAA0BC,IAA1B,CAA+B;AAAE9B,QAAAA,IAAI,EAAE;AAAE+B,UAAAA,GAAG,EAAE/B,IAAI,CAAE+B,GAAb;AAAkBhC,UAAAA,MAAM,EAAEE;AAA1B;AAAR,OAA/B;AACA;AACD;;AAEDW,IAAAA,iBAAiB,CAACZ,IAAI,CAAE+B,GAAP,CAAjB;AACD,GATD;;AAWA,QAAMC,UAAU,GAAG,YAAY;AAC7B,QAAI;AACF,YAAM;AAAEjB,QAAAA;AAAF,UAAW,MAAMP,QAAQ,EAA/B;;AAEA,UAAI,CAACO,IAAI,CAACC,OAAV,EAAmB;AACjBnC,QAAAA,OAAO,CAACoC,KAAR,CAAcF,IAAI,CAAClC,OAAnB;AACA;AACD;;AAEDuB,MAAAA,QAAQ,CAACW,IAAI,CAACZ,KAAN,CAAR;AACD,KATD,CASE,OAAO8B,CAAP,EAAU;AACV5C,MAAAA,YAAY,CAAC,YAAD,CAAZ;AACD;AACF,GAbD;;AAeAd,EAAAA,SAAS,CAAC,MAAM;AACdyD,IAAAA,UAAU,GADI,CAEd;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,QAAMjB,IAAI,GAAGrC,SAAS,CAAC;AAAEwD,IAAAA,MAAM,EAAEjC,eAAe,GAAGrB,YAAH,GAAkBD;AAA3C,GAAD,CAAtB;AACA,QAAMwD,OAAO,GAAG3C,UAAU,CAAC;AAAE4C,IAAAA,MAAM,EAAEnC,eAAV;AAA2BuB,IAAAA;AAA3B,GAAD,CAA1B,CAnE4B,CAqE5B;AACA;AACA;;AAEA,sBACE,uDACE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAElB,OAAO,IAAIC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,oBAAC,YAAD;AAAc,IAAA,QAAQ,EAAG8B,KAAD,IAAWnC,iBAAiB,CAACmC,KAAD,CAApD;AAA6D,IAAA,OAAO,EAAEpC,eAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHF,CADF,eA0BE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,KAAK,EAAE;AAAEqC,MAAAA,SAAS,EAAE,MAAb;AAAqBC,MAAAA,SAAS,EAAE,MAAhC;AAAwCC,MAAAA,QAAQ,EAAE,MAAlD;AAA0DC,MAAAA,UAAU,EAAE,KAAtE;AAA6EC,MAAAA,KAAK,EAAE;AAApF,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCACY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADZ,gCAEe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFf,6BAGY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHZ,8DAIoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJpC,uCAKmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALnB,6BAMY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANZ,iCAOa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPb,CADF,eAUE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,CADF,eAeE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAfF,eAgBE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAhBF,CA1BF,CADF,CADF,eAiDE,oBAAC,kBAAD;AAAoB,IAAA,GAAG,EAAEjC,gBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjDF,CADF;AAqDD,CA9HD;;cAAMb,K,sUACYT,e,EAM2BM,c,EACXH,W,EAEfJ,e,EACAS,W,EAwDDH,U;;iBA6DHI,K;AAAf;AAEA,MAAM+C,SAAS,GAAGpD,MAAM,CAACqD,GAAV;AAAA;AAAA;AAAA,kDAAf,C,CAMA;AAEA;;AAEA,MAAMC,aAAa,GAAGtD,MAAM,CAACqD,GAAV;AAAA;AAAA;AAAA,+SAAnB;AAuBA,MAAME,cAAc,GAAGvD,MAAM,CAACqD,GAAV;AAAA;AAAA;AAAA,+NAApB;AAiBA,MAAMG,MAAM,GAAGxD,MAAM,CAACqD,GAAV;AAAA;AAAA;AAAA,4GAAZ;AASA,MAAMI,IAAI,GAAGzD,MAAM,CAAC0D,CAAV;AAAA;AAAA;AAAA,iBAAV;AAIA,MAAMC,YAAY,GAAG3D,MAAM,CAACR,MAAD,CAAT;AAAA;AAAA;AAAA,sBAAlB;AAIA,MAAMoE,WAAW,GAAG5D,MAAM,CAACP,KAAD,CAAT;AAAA;AAAA;AAAA,uQAGgBiE,CAAC,IAAIA,CAAC,CAACG,KAAF,CAAQC,MAAR,CAAeC,SAHpC,EAqBgBL,CAAC,IAAIA,CAAC,CAACG,KAAF,CAAQC,MAAR,CAAeC,SArBpC,CAAjB;;;;;;;;;;0BArMM1D,K;0BAkIA+C,S;0BAUAE,a;0BAuBAC,c;0BAiBAC,M;0BASAC,I;0BAIAE,Y;0BAIAC,W","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport { buildData, MONTHLY_PRICE, YEARLY_PRICE } from './functions'\nimport { message, Spin, Switch, Table, Button } from 'antd'\nimport { useUserDispatch, useUserSelector } from 'Redux/UserReducer'\nimport { Plan } from './types'\nimport PaymentMethodModal, { ScheduleModalType } from 'Components/Modals/PaymentMethod/PaymentMethodModal'\nimport messageError from 'Utils/messageError'\nimport useGetPlans from './useGetPlans'\nimport styled from 'styled-components'\nimport useColumns from './useColumns'\nimport useSaveCompany from 'Pages/Company/useSaveCompany'\nimport successModal from 'Utils/successModal'\nimport { useNavigate } from 'react-router-dom'\n\nconst Plans: React.FC = () => {\n  const company = useUserSelector(state => state.company)\n\n  const annual = !!company?.plan?.annual\n  const [internal_yearly, setInternalYearly] = useState(annual)\n  const [plans, setPlans] = useState<Plan[]>([])\n\n  const [saveCompany, { loading: saving }] = useSaveCompany()\n  const [{ loading }, getPlans] = useGetPlans()\n  const PaymentMethodRef = useRef<ScheduleModalType>(null)\n  const dispatch = useUserDispatch()\n  const navigate = useNavigate()\n\n  const handleSaveCompany = async (plan_id: string) => {\n    try {\n      const values = { ...company, plan_id, annual: internal_yearly }\n      const { data } = await saveCompany(values as any)\n\n      if (!data?.success) {\n        message.error(data.message)\n        return\n      }\n\n      dispatch({ type: 'UPDATE_COMPANY', payload: data.company })\n\n      successModal({\n        content: 'Plano escolhido com sucesso',\n        duration: 4000,\n        onEndDuration: () => navigate('/'),\n      })\n    } catch (_e) {\n      messageError('2011142222')\n    }\n  }\n\n  const handleClickPlan = (plan_name: string) => {\n    const plan = plans.find(plan => plan.name === plan_name)\n\n    if (!company?.toHire) {\n      PaymentMethodRef.current?.open({ plan: { _id: plan!._id, annual: internal_yearly } })\n      return\n    }\n\n    handleSaveCompany(plan!._id)\n  }\n\n  const fetchPlans = async () => {\n    try {\n      const { data } = await getPlans()\n\n      if (!data.success) {\n        message.error(data.message)\n        return\n      }\n\n      setPlans(data.plans)\n    } catch (e) {\n      messageError('2011051928')\n    }\n  }\n\n  useEffect(() => {\n    fetchPlans()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const data = buildData({ prices: internal_yearly ? YEARLY_PRICE : MONTHLY_PRICE })\n  const columns = useColumns({ yearly: internal_yearly, handleClickPlan })\n\n  // const dataplan = [\n  //   users: '1 UsuÃ¡rio',\n  // ]\n\n  return (\n    <>\n      <Spin spinning={loading || saving}>\n        <Container>\n          <Header>\n            <Text>Mensal</Text>\n            <SwitchStyled onChange={(value) => setInternalYearly(value)} checked={internal_yearly} />\n            <Text>Anual</Text>\n          </Header>\n\n          {/* <StyledCardPlan>\n            <p style={{ textAlign: 'center', marginLeft: '30px', marginTop: '20px' }}>\n              10 Push Free <br />\n              Dashboard <br />\n              GestÃ£o de PerÃ­cias e AssistÃªncias <br />\n              GestÃ£o da Agenda <br />\n              Cadastros <br />\n              RelatÃ³rios <br />\n            </p>\n            {/* <StyledTable\n              dataSource={data}\n              columns={columns}\n              pagination={{\n                pageSize: 20,\n                hideOnSinglePage: true,\n              }}\n            /> \n          </StyledCardPlan> */}\n\n          <GridContainer>\n            <StyledCardPlan>\n              <p style={{ textAlign: 'left', marginTop: '20px', fontSize: '20px', marginLeft: '10%', color: 'white' }}>\n                1 UsuÃ¡rio <br />\n                10 Push Free <br />\n                Dashboard <br />\n                GestÃ£o de PerÃ­cias e AssistÃªncias <br />\n                GestÃ£o da Agenda <br />\n                Cadastros <br />\n                RelatÃ³rios <br />\n              </p>\n              <Button className=\"buttonstyle\">\n                Salvar\n              </Button>\n            </StyledCardPlan>\n            <StyledCardPlan>2</StyledCardPlan>\n            <StyledCardPlan>3</StyledCardPlan>\n          </GridContainer>\n        </Container>\n      </Spin>\n\n      <PaymentMethodModal ref={PaymentMethodRef} />\n    </>\n  )\n}\n\nexport default Plans\n\nconst Container = styled.div`\n  padding: 0 15%;\n  height: 100%;\n  overflow-y: auto;\n`;\n\n// const ButtonStyle = styled.button`\n\n// `;\n\nconst GridContainer = styled.div` \n  /* margin-left: 20%; */\n  display: grid;\n  height: 100%;\n  align-content: center;\n  align-items: center;\n  grid-template-columns: auto auto auto;\n  gap: 10px;\n  background-color: white;\n  padding: 10px;\n\n  .buttonstyle {\n    margin-top: 25%;\n    margin-left: 5.7%;\n    position: absolute;\n    padding: 20px 10px;\n    width: 10%;\n    text-align: center;\n    border-radius: 20px;\n    font-weight: bold;\n  }\n`;\n\nconst StyledCardPlan = styled.div`  \n  display: flex;\n  width: 280px;\n  height: 385px;\n  background-color: #36bdc1;\n  //box-shadow: 0 0px 7px rgba(53, 58, 65, 0.2);\n  border-radius: 20px;\n  justify-content: space-between;\n  transition: box-shadow .3s;\n  margin-bottom: 10%;\n\n  &:hover {\n    cursor: pointer;\n    box-shadow: 0 0px 30px #1793ae7e;\n  }\n`;\n\nconst Header = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  padding: 10px 0;\n  width: 100%;\n`\n\nconst Text = styled.p`\n  margin: 0;\n`\n\nconst SwitchStyled = styled(Switch)`\n  margin: 0 10px;\n`\n\nconst StyledTable = styled(Table)`\n  .ant-table-thead {\n    th {\n      border-bottom: 2px solid ${p => p.theme.colors.dark_gray};\n      padding: 5px 0;\n      background: white;\n    }\n  }\n\n  .ant-table-body {\n    height: 100%;\n  }\n\n  .ant-table-body, .ant-table-row {\n    td {\n      padding: 1.5px 0;\n      border-bottom: unset;\n    }\n\n    :nth-last-child(2) td {\n      padding-bottom: 5px;\n      border-bottom: 2px solid ${p => p.theme.colors.dark_gray};\n    }\n  }\n` as typeof Table\n"]},"metadata":{},"sourceType":"module"}