{"ast":null,"code":"var _jsxFileName = \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Company/Company.tsx\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useEffect } from 'react';\nimport { Form, Row, Space, Button, Modal, message } from 'antd';\nimport { useUserSelector, useUserDispatch } from 'Redux/UserReducer';\nimport { updateCompanyData } from 'Redux/fetchActions';\nimport styled from 'styled-components';\nimport CompanyForm from './CompanyForm';\nimport messageError from 'Utils/messageError';\nimport successModal from 'Utils/successModal';\nimport useSaveCompany from './useSaveCompany';\nimport PlanInformation from './PlanInformation';\n\nconst Company = () => {\n  const company = useUserSelector(state => state.company);\n  const permissions = useUserSelector(state => state.permissions);\n  const [form] = Form.useForm();\n  const {\n    setFieldsValue\n  } = form;\n  const [saveCompany, {\n    loading\n  }] = useSaveCompany();\n  const dispatch = useUserDispatch();\n  const {\n    active\n  } = company || {};\n  useEffect(() => {\n    // Faz o refetch dos dados quando entra, sÃ³ para manter os dados sempre atualizados\n    // TODO: Buscar somente os dados da empresa\n    updateCompanyData(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    form.setFieldsValue({ ...company,\n      plan_id: company === null || company === void 0 ? void 0 : company.plan.plan_id\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [company]);\n\n  const handleFormFinish = async values => {\n    try {\n      const response = await saveCompany(values);\n\n      if (response.data.success) {\n        successModal({\n          content: 'Empresa salva com sucesso'\n        });\n        dispatch({\n          type: 'UPDATE_COMPANY',\n          payload: response.data.company\n        });\n        return;\n      }\n\n      message.error(response.data.message);\n    } catch (error) {\n      messageError('202010312007');\n      console.log('[Company] ', error);\n    }\n  };\n\n  const confirmStatusChange = active_company => {\n    Modal.confirm({\n      title: /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }\n      }, \"A conta ser\\xE1 \", active_company ? 'ativada' : 'desativada', \"!\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 68\n        }\n      }), \"Deseja continuar?\"),\n      okText: 'Sim',\n      onOk: () => changeCompanyStatus(active_company)\n    });\n  };\n\n  const changeCompanyStatus = async active_company => {\n    const form_values = await form.validateFields();\n\n    try {\n      const response = await saveCompany({ ...form_values,\n        active: active_company\n      });\n\n      if (response.data.success) {\n        successModal({\n          content: `Empresa ${active_company ? 'ativado' : 'desativado'} com sucesso`\n        });\n        dispatch({\n          type: 'UPDATE_COMPANY',\n          payload: response.data.company\n        });\n        return;\n      }\n\n      message.error(response.data.message);\n    } catch (error) {\n      messageError('202010312014');\n      console.log('[Company] ', error);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    form: form,\n    layout: \"vertical\",\n    onFinish: handleFormFinish,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CompanyForm, {\n    width: 40,\n    setFieldsValue: setFieldsValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(PlanInformation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  })), (permissions === null || permissions === void 0 ? void 0 : permissions.company.update) && /*#__PURE__*/React.createElement(Footer, {\n    justify: \"end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Space, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    disabled: loading,\n    loading: loading,\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }, \"Salvar\"), active ? /*#__PURE__*/React.createElement(Button, {\n    disabled: loading,\n    loading: loading,\n    onClick: () => confirmStatusChange(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, \"Desativar\") : /*#__PURE__*/React.createElement(Button, {\n    disabled: loading,\n    loading: loading,\n    onClick: () => confirmStatusChange(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, \"Ativar\")))));\n};\n\n__signature__(Company, \"useUserSelector{company}\\nuseUserSelector{permissions}\\nuseForm{[form]}\\nuseSaveCompany{[saveCompany, { loading }]}\\nuseUserDispatch{dispatch}\\nuseEffect{}\\nuseEffect{}\", () => [useUserSelector, useUserSelector, useSaveCompany, useUserDispatch]);\n\nCompany.displayName = \"Company\";\nconst _default = Company;\nexport default _default;\nconst Container = styled.div.withConfig({\n  displayName: \"Company__Container\",\n  componentId: \"sc-1xv2pxp-0\"\n})([\"overflow-y:auto;overflow-x:hidden;padding:20px 40px;height:calc(100% - 5rem);\"]);\nconst FormContainer = styled.div.withConfig({\n  displayName: \"Company__FormContainer\",\n  componentId: \"sc-1xv2pxp-1\"\n})([\"display:flex;\"]);\nconst Footer = styled(Row).withConfig({\n  displayName: \"Company__Footer\",\n  componentId: \"sc-1xv2pxp-2\"\n})([\"width:100%;position:sticky;bottom:0;background:white;padding:8px 0;padding-bottom:10%;\"]);\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Company, \"Company\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Company/Company.tsx\");\n  reactHotLoader.register(Container, \"Container\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Company/Company.tsx\");\n  reactHotLoader.register(FormContainer, \"FormContainer\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Company/Company.tsx\");\n  reactHotLoader.register(Footer, \"Footer\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Company/Company.tsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Company/Company.tsx\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/raphael/Documents/Github/FrontSistemadoPerito/src/Pages/Company/Company.tsx"],"names":["React","useEffect","Form","Row","Space","Button","Modal","message","useUserSelector","useUserDispatch","updateCompanyData","styled","CompanyForm","messageError","successModal","useSaveCompany","PlanInformation","Company","company","state","permissions","form","useForm","setFieldsValue","saveCompany","loading","dispatch","active","plan_id","plan","handleFormFinish","values","response","data","success","content","type","payload","error","console","log","confirmStatusChange","active_company","confirm","title","okText","onOk","changeCompanyStatus","form_values","validateFields","update","Container","div","FormContainer","Footer"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { Form, Row, Space, Button, Modal, message } from 'antd'\nimport { useUserSelector, useUserDispatch } from 'Redux/UserReducer'\nimport { updateCompanyData } from 'Redux/fetchActions'\nimport { Store } from 'antd/lib/form/interface'\nimport styled from 'styled-components'\nimport CompanyForm from './CompanyForm'\nimport messageError from 'Utils/messageError'\nimport successModal from 'Utils/successModal'\nimport useSaveCompany from './useSaveCompany'\nimport PlanInformation from './PlanInformation'\n\nconst Company: React.FC = () => {\n  const company = useUserSelector(state => state.company)\n  const permissions = useUserSelector(state => state.permissions)\n\n  const [form] = Form.useForm()\n  const { setFieldsValue } = form\n  const [saveCompany, { loading }] = useSaveCompany()\n  const dispatch = useUserDispatch()\n  const { active } = company || {}\n\n  useEffect(() => {\n    // Faz o refetch dos dados quando entra, sÃ³ para manter os dados sempre atualizados\n    // TODO: Buscar somente os dados da empresa\n    updateCompanyData()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    form.setFieldsValue({ ...company, plan_id: company?.plan.plan_id })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [company])\n\n\n  const handleFormFinish = async (values: Store) => {\n    try {\n      const response = await saveCompany(values as any)\n\n      if (response.data.success) {\n        successModal({ content: 'Empresa salva com sucesso' })\n        dispatch({ type: 'UPDATE_COMPANY', payload: response.data.company })\n        return\n      }\n\n      message.error(response.data.message)\n    } catch (error) {\n      messageError('202010312007')\n      console.log('[Company] ', error)\n    }\n  }\n\n  const confirmStatusChange = (active_company: boolean) => {\n    Modal.confirm({\n      title: (\n        <span>\n          A conta serÃ¡ {active_company ? 'ativada' : 'desativada'}!<br />\n          Deseja continuar?\n        </span>\n      ),\n      okText: 'Sim',\n      onOk: () => changeCompanyStatus(active_company),\n    })\n  }\n\n  const changeCompanyStatus = async (active_company: boolean) => {\n    const form_values: any = await form.validateFields()\n\n    try {\n      const response = await saveCompany({ ...form_values, active: active_company })\n\n      if (response.data.success) {\n        successModal({ content: `Empresa ${active_company ? 'ativado' : 'desativado'} com sucesso` })\n        dispatch({ type: 'UPDATE_COMPANY', payload: response.data.company })\n        return\n      }\n\n      message.error(response.data.message)\n    } catch (error) {\n      messageError('202010312014')\n      console.log('[Company] ', error)\n    }\n  }\n\n  return (\n    <Container>\n      <Form form={form} layout=\"vertical\" onFinish={handleFormFinish}>\n        <FormContainer>\n          <CompanyForm width={40} setFieldsValue={setFieldsValue} />\n          <PlanInformation />\n        </FormContainer>\n        {permissions?.company.update && (\n          <Footer justify=\"end\">\n            <Space>\n              <Button\n                disabled={loading}\n                loading={loading}\n                type=\"primary\"\n                htmlType=\"submit\"\n              >\n                Salvar\n              </Button>\n              {active ? (\n                <Button\n                  disabled={loading}\n                  loading={loading}\n                  onClick={() => confirmStatusChange(false)}\n                >\n                  Desativar\n                </Button>\n              ) : (\n                <Button\n                  disabled={loading}\n                  loading={loading}\n                  onClick={() => confirmStatusChange(true)}\n                >\n                  Ativar\n                </Button>\n              )}\n            </Space>\n          </Footer>\n        )}\n      </Form>\n    </Container>\n  )\n}\n\nexport default Company\n\nconst Container = styled.div`\n  overflow-y: auto;\n  overflow-x: hidden;\n  padding: 20px 40px;\n  height: calc(100% - 5rem);\n`\n\nconst FormContainer = styled.div`\n  display: flex;\n`\n\nconst Footer = styled(Row)`\n  width: 100%;\n  position: sticky;\n  bottom: 0;\n  background: white;\n  padding: 8px 0;\n  padding-bottom: 10%;\n`\n"]},"metadata":{},"sourceType":"module"}